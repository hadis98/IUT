*************************************** PREORDER TRAVERSAL ***************************************


<program> TOKEN_CLASS TOKEN_PROGRAMCLASS TOKEN_LCB <decl_fields> <decl_fields> <decl_field> <type> TOKEN_INTTYPE <names> <names> <location> TOKEN_ID TOKEN_COMMA <location> TOKEN_ID TOKEN_LB <location> <literal> TOKEN_DECIMALCONST TOKEN_RB TOKEN_SEMICOLON <decl_methods> <decl_method> <type> TOKEN_BOOLEANTYPE <method_id> TOKEN_ID TOKEN_LP <method_args> <method_arg> <type> TOKEN_INTTYPE TOKEN_ID TOKEN_RP <block> TOKEN_LCB <declare_vars> <statments> <statment> <stmt_return> TOKEN_RETURN <location> <literal> TOKEN_DECIMALCONST TOKEN_SEMICOLON <statments> TOKEN_RCB <decl_methods> <decl_method> TOKEN_VOIDTYPE <method_id> TOKEN_MAINFUNC TOKEN_LP <method_args> TOKEN_RP <block> TOKEN_LCB <declare_vars> <statments> <statment> <location> TOKEN_ID TOKEN_ASSIGNOP <location> <literal> TOKEN_DECIMALCONST TOKEN_SEMICOLON <statments> <statment> <stmt_for> TOKEN_LOOP TOKEN_ID TOKEN_ASSIGNOP <location> <literal> TOKEN_DECIMALCONST TOKEN_COMMA <location> <literal> TOKEN_DECIMALCONST <block> TOKEN_LCB <declare_vars> <statments> <statment> <location> TOKEN_ID TOKEN_ASSIGNOP <location> <literal> TOKEN_DECIMALCONST TOKEN_SEMICOLON <statments> TOKEN_RCB <statments> <statment> <stmt_if> TOKEN_IFCONDITION TOKEN_LP <location> <location> <location> TOKEN_ID TOKEN_EQUALITYOP <location> <literal> TOKEN_DECIMALCONST TOKEN_PR <block> TOKEN_LCB <declare_vars> <statments> <statment> <location> TOKEN_ID TOKEN_LB <location> <literal> TOKEN_DECIMALCONST TOKEN_RB TOKEN_ASSIGNOP <location> <literal> TOKEN_DECIMALCONST TOKEN_SEMICOLON <statments> TOKEN_RCB <optional_else> TOKEN_ELSECONDITION <block> TOKEN_LCB <declare_vars> <statments> <statment> <location> TOKEN_ID TOKEN_LB <location> <literal> TOKEN_DECIMALCONST TOKEN_RB TOKEN_ASSIGNOP <location> <literal> TOKEN_DECIMALCONST TOKEN_SEMICOLON <statments> TOKEN_RCB <statments> <statment> <method_call> TOKEN_ID TOKEN_LP <call_params> <location> <literal> TOKEN_DECIMALCONST TOKEN_RP TOKEN_SEMICOLON <statments> TOKEN_RCB <decl_methods> TOKEN_RCB 

*************************************************************
*************************** PRINT PARSE TREE **************************
********************************************************************

program
\TOKEN_CLASS
\TOKEN_PROGRAMCLASS
\TOKEN_LCB
\decl_fields
	\decl_fields
	\decl_field
		\type
			\TOKEN_INTTYPE
		\names
			\names
				\location
					\TOKEN_ID
			\TOKEN_COMMA
			\location
				\TOKEN_ID
				\TOKEN_LB
				\location
					\literal
						\TOKEN_DECIMALCONST
				\TOKEN_RB
		\TOKEN_SEMICOLON
\decl_methods
	\decl_method
		\type
			\TOKEN_BOOLEANTYPE
		\method_id
			\TOKEN_ID
		\TOKEN_LP
		\method_args
			\method_arg
				\type
					\TOKEN_INTTYPE
				\TOKEN_ID
		\TOKEN_RP
		\block
			\TOKEN_LCB
			\declare_vars
			\statments
				\statment
					\stmt_return
						\TOKEN_RETURN
						\location
							\literal
								\TOKEN_DECIMALCONST
					\TOKEN_SEMICOLON
				\statments
			\TOKEN_RCB
	\decl_methods
		\decl_method
			\TOKEN_VOIDTYPE
			\method_id
				\TOKEN_MAINFUNC
			\TOKEN_LP
			\method_args
			\TOKEN_RP
			\block
				\TOKEN_LCB
				\declare_vars
				\statments
					\statment
						\location
							\TOKEN_ID
						\TOKEN_ASSIGNOP
						\location
							\literal
								\TOKEN_DECIMALCONST
						\TOKEN_SEMICOLON
					\statments
						\statment
							\stmt_for
								\TOKEN_LOOP
								\TOKEN_ID
								\TOKEN_ASSIGNOP
								\location
									\literal
										\TOKEN_DECIMALCONST
								\TOKEN_COMMA
								\location
									\literal
										\TOKEN_DECIMALCONST
								\block
									\TOKEN_LCB
									\declare_vars
									\statments
										\statment
											\location
												\TOKEN_ID
											\TOKEN_ASSIGNOP
											\location
												\literal
													\TOKEN_DECIMALCONST
											\TOKEN_SEMICOLON
										\statments
									\TOKEN_RCB
						\statments
							\statment
								\stmt_if
									\TOKEN_IFCONDITION
									\TOKEN_LP
									\location
										\location
											\location
												\TOKEN_ID
										\TOKEN_EQUALITYOP
										\location
											\literal
												\TOKEN_DECIMALCONST
									\TOKEN_PR
									\block
										\TOKEN_LCB
										\declare_vars
										\statments
											\statment
												\location
													\TOKEN_ID
													\TOKEN_LB
													\location
														\literal
															\TOKEN_DECIMALCONST
													\TOKEN_RB
												\TOKEN_ASSIGNOP
												\location
													\literal
														\TOKEN_DECIMALCONST
												\TOKEN_SEMICOLON
											\statments
										\TOKEN_RCB
									\optional_else
										\TOKEN_ELSECONDITION
										\block
											\TOKEN_LCB
											\declare_vars
											\statments
												\statment
													\location
														\TOKEN_ID
														\TOKEN_LB
														\location
															\literal
																\TOKEN_DECIMALCONST
														\TOKEN_RB
													\TOKEN_ASSIGNOP
													\location
														\literal
															\TOKEN_DECIMALCONST
													\TOKEN_SEMICOLON
												\statments
											\TOKEN_RCB
							\statments
								\statment
									\method_call
										\TOKEN_ID
										\TOKEN_LP
										\call_params
											\location
												\literal
													\TOKEN_DECIMALCONST
										\TOKEN_RP
									\TOKEN_SEMICOLON
								\statments
				\TOKEN_RCB
		\decl_methods
\TOKEN_RCB

Parsing Done Successfully:)
