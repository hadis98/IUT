;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <i2c.h>
;
;void main(void)
; 0000 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0007 char i;
; 0000 0008 unsigned char tx_data[10]={0x00,0x10,0x11,0x22,0x33,0x44,0x55,0x66,0x70,0x80};
; 0000 0009 unsigned char rx_data[10];
; 0000 000A unsigned char *txp=&tx_data[0];
; 0000 000B unsigned char *rxp=&rx_data[0];
; 0000 000C #asm("sei")
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;	i -> R17
;	tx_data -> Y+10
;	rx_data -> Y+0
;	*txp -> R18,R19
;	*rxp -> R20,R21
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
	sei
;PCODE: $00000018 VOL: 0
; 0000 000D // write a fram to eeprom via new code
; 0000 000E {
; 0000 000F     i2c_start();
;PCODE: $00000019 VOL: 0
; 0000 0010     i2c_write(0xA0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0011     i2c_write(0x00); // tx_data[0]
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0012     i2c_write(0x30); // tx_data[1]
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0013     for(i=0;i<10;i++)
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0014     {
; 0000 0015         i2c_write(tx_data[i+2]);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0016     }
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0017     i2c_stop();
;PCODE: $00000035 VOL: 0
; 0000 0018     delay_ms(10);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0019 }
; 0000 001A 
; 0000 001B // read a fram to eeprom via new code
; 0000 001C {
; 0000 001D     i2c_start();
;PCODE: $00000039 VOL: 0
; 0000 001E     i2c_write(0xA0);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 001F     i2c_write(0x00); // tx_data[0]
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0020     i2c_write(0x20); // tx_data[1]
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0021 
; 0000 0022     i2c_start();
;PCODE: $00000040 VOL: 0
; 0000 0023     i2c_write(0xA1);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0024     for(i=0;i<10;i++)
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0025     {
; 0000 0026     if(i==9)rx_data[i]=i2c_read(0);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0027     else rx_data[i]=i2c_read(1);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0028     }
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0029     i2c_stop();
;PCODE: $00000069 VOL: 0
; 0000 002A }
; 0000 002B while (1)
;PCODE: $0000006A VOL: 0
; 0000 002C       {
; 0000 002D       // Place your code here
; 0000 002E 
; 0000 002F       }
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0030 }
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
