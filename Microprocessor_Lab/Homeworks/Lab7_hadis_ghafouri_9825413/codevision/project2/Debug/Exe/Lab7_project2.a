;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Project : LAB7-PROJECT2-MICRO_LAB
;Version :
;Date    : 12/26/2022
;Author  : HADIS GHAFOURI 9825413
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include "headers.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "initial_configs.h"
;#include "subTasks.h"
;
;void main(void)
; 0000 0019 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001A    char entered_char;
; 0000 001B    char subTask3_entered_str[10];
; 0000 001C 
; 0000 001D #asm("sei")
;PCODE: $0000000E VOL: 0
;	entered_char -> R17
;	subTask3_entered_str -> Y+0
;PCODE: $0000000F VOL: 0
	sei
;PCODE: $00000010 VOL: 0
; 0000 001E 
; 0000 001F    init_configs();
;PCODE: $00000011 VOL: 0
; 0000 0020 
; 0000 0021    print_message_on_lcd("part2 is running!");
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0022    print_on_terminal("part2 is running!\r\nEnter a character:");
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0023 
; 0000 0024    while (1)
;PCODE: $00000018 VOL: 0
; 0000 0025    {
; 0000 0026 
; 0000 0027       entered_char = getchar();
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0028 
; 0000 0029       if (subTask2(entered_char) == -1)
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002A       {
; 0000 002B          print_message_on_lcd("Part2 is ending!");
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002C          print_on_terminal("Part2 is ending!");
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002D          delay_ms(2000);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 002E          break;
;PCODE: $00000027 VOL: 0
; 0000 002F       }
; 0000 0030    }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0031 
; 0000 0032    print_message_on_lcd("part3 is running!");
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0033    print_on_terminal("Part3 is running!");
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0034 
; 0000 0035    while (1)
;PCODE: $00000031 VOL: 0
; 0000 0036    {
; 0000 0037       print_on_terminal("Enter a 5 digits number with this format: (number)");
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0038       scanf("%s", subTask3_entered_str);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0039       subTask3(subTask3_entered_str);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003A    }
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003B }
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0

	.DSEG
_0x3:
	.BYTE 0xB1
