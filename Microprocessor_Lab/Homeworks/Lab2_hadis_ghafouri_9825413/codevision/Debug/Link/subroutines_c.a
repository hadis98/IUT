;#include <headers.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;extern unsigned int sevenSeg[10] = {
;    0b00111111, // number 0 on 7_seg
;    0b00000110, // number 1 on 7_seg
;    0b01011011, // number 2 on 7_seg
;    0b01001111, // number 3 on 7_seg
;    0b01100110, // number 4 on 7_seg
;    0b01101101, // number 5 on 7_seg
;    0b01111101, // number 6 on 7_seg
;    0b00000111, // number 7 on 7_seg
;    0b01111111, // number 8 on 7_seg
;    0b01101111, // number 9 on 7_seg
;};

	.DSEG
;
;int readData(char selected_port){
; 0001 000F int readData(char selected_port){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0010 int data = 0;
; 0001 0011 
; 0001 0012   switch(selected_port){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;	selected_port -> Y+2
;	data -> R16,R17
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0001 0013     case portA:
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0001 0014     DDRA=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0001 0015     data =PINA;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 0016     break;
;PCODE: $0000001D VOL: 0
; 0001 0017 
; 0001 0018     case portB:
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 0019     DDRB=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 001A     data =PINB;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0001 001B     break;
;PCODE: $00000026 VOL: 0
; 0001 001C 
; 0001 001D     case portC:
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0001 001E     DDRC=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0001 001F     data =PINC;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 0020     break;
;PCODE: $0000002F VOL: 0
; 0001 0021 
; 0001 0022     case portD:
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0001 0023     DDRD=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0001 0024     data =PIND;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0001 0025     break;
;PCODE: $00000038 VOL: 0
; 0001 0026   }
;PCODE: $00000039 VOL: 0
; 0001 0027 
; 0001 0028   return data;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0001 0029 }
;PCODE: $00000041 VOL: 0
;
;
;void writeData(int data, char selected_port){
; 0001 002C void writeData(int data, char selected_port){
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0001 002D 
; 0001 002E   switch(selected_port){
;PCODE: $00000044 VOL: 0
;	data -> Y+1
;	selected_port -> Y+0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0001 002F     case portA:
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0001 0030     DDRA=0xFF;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0001 0031     PORTA =data;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0001 0032     break;
;PCODE: $0000004D VOL: 0
; 0001 0033 
; 0001 0034     case portB:
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0001 0035     DDRB=0xFF;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0001 0036      PORTB =data;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0001 0037     break;
;PCODE: $00000055 VOL: 0
; 0001 0038 
; 0001 0039     case portC:
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 003A     DDRC=0xFF;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0001 003B      PORTC =data;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 003C     break;
;PCODE: $0000005D VOL: 0
; 0001 003D 
; 0001 003E     case portD:
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 003F     DDRD=0xFF;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0040      PORTD =data;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 0041     break;
;PCODE: $00000065 VOL: 0
; 0001 0042   }
;PCODE: $00000066 VOL: 0
; 0001 0043 
; 0001 0044 
; 0001 0045 }
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;
;void toggleAllLEDS(int counter,int delay_interval){
; 0001 0047 void toggleAllLEDS(int counter,int delay_interval){
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0001 0048 int i;
; 0001 0049 
; 0001 004A     for(i=0;i<counter;i++){
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;	counter -> Y+4
;	delay_interval -> Y+2
;	i -> R16,R17
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0001 004B         writeData(0b00000000,portB);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0001 004C         delay_ms(delay_interval);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0001 004D         writeData(0b11111111,portB);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0001 004E         delay_ms(delay_interval);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0001 004F     }
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0001 0050 }
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;
;void showSwitchData(){
; 0001 0052 void showSwitchData(){
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0001 0053 int data;
; 0001 0054         data = readData(portA);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;	data -> R16,R17
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0001 0055         delay_ms(20);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0001 0056         writeData(data,portB);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0001 0057         delay_ms(20);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0001 0058 }
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;
;void showSevenSegData(int data,char data_port,int enable_data){
; 0001 005A void showSevenSegData(int data,char data_port,int enable_data){
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0001 005B int h,s,d,y,i;
; 0001 005C 
; 0001 005D         h = data / 1000;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;	data -> Y+13
;	data_port -> Y+12
;	enable_data -> Y+10
;	h -> R16,R17
;	s -> R18,R19
;	d -> R20,R21
;	y -> Y+8
;	i -> Y+6
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0001 005E         s = (data % 1000) / 100;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0001 005F         d = (data % 100) / 10;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0001 0060         y = data % 10;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0001 0061   for(i=0;i<20;i++){
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0001 0062     writeData(0b1000,enable_data);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0001 0063     writeData(sevenSeg[y],data_port);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0001 0064     delay_ms(5);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0001 0065     writeData(0b0000,enable_data);
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0001 0066 
; 0001 0067     writeData(0b0100,enable_data);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0001 0068     writeData(sevenSeg[d],data_port);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0001 0069     delay_ms(5);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0001 006A     writeData(0b0000,enable_data);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0001 006B 
; 0001 006C     writeData(0b0010,enable_data);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0001 006D     writeData(sevenSeg[s],data_port);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0001 006E     delay_ms(5);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0001 006F     writeData(0b0000,enable_data);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0001 0070 
; 0001 0071     writeData(0b0001,enable_data);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0001 0072     writeData(sevenSeg[h],data_port);
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0001 0073     delay_ms(5);
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0001 0074     writeData(0b0000,enable_data);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0001 0075     //delay_ms(5);
; 0001 0076  }
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0001 0077 }
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
