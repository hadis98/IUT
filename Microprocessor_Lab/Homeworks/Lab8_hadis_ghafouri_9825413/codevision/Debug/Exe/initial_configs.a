;#include "headers.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;void init_ports()
; 0002 0004 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 0005     // Input/Output Ports initialization
; 0002 0006     // Port A initialization
; 0002 0007     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0002 0008     DDRA = (0 << DDA7) | (0 << DDA6) | (0 << DDA5) | (0 << DDA4) | (0 << DDA3) | (0 << DDA2) | (0 << DDA1) | (0 << DDA0) ...
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0002 0009     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0002 000A     PORTA = (0 << PORTA7) | (0 << PORTA6) | (0 << PORTA5) | (0 << PORTA4) | (0 << PORTA3) | (0 << PORTA2) | (0 << PORTA1 ...
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0002 000B 
; 0002 000C     // Port B initialization
; 0002 000D     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0002 000E     DDRB = (0 << DDB7) | (0 << DDB6) | (0 << DDB5) | (0 << DDB4) | (0 << DDB3) | (0 << DDB2) | (0 << DDB1) | (0 << DDB0) ...
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0002 000F     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0002 0010     PORTB = (0 << PORTB7) | (0 << PORTB6) | (0 << PORTB5) | (0 << PORTB4) | (0 << PORTB3) | (0 << PORTB2) | (0 << PORTB1 ...
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0002 0011 
; 0002 0012     // Port C initialization
; 0002 0013     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0002 0014     DDRC = (0 << DDC7) | (0 << DDC6) | (0 << DDC5) | (0 << DDC4) | (0 << DDC3) | (0 << DDC2) | (0 << DDC1) | (0 << DDC0) ...
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0002 0015     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0002 0016     PORTC = (0 << PORTC7) | (0 << PORTC6) | (0 << PORTC5) | (0 << PORTC4) | (0 << PORTC3) | (0 << PORTC2) | (0 << PORTC1 ...
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0002 0017 
; 0002 0018     // Port D initialization
; 0002 0019     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0002 001A     DDRD = (0 << DDD7) | (0 << DDD6) | (0 << DDD5) | (0 << DDD4) | (0 << DDD3) | (0 << DDD2) | (0 << DDD1) | (0 << DDD0) ...
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0002 001B     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0002 001C     PORTD = (0 << PORTD7) | (0 << PORTD6) | (0 << PORTD5) | (0 << PORTD4) | (0 << PORTD3) | (0 << PORTD2) | (0 << PORTD1 ...
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0002 001D }
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;void init_timers()
; 0002 0020 {
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0002 0021     TCCR1A = (0 << COM1A1) | (0 << COM1A0) | (0 << COM1B1) | (0 << COM1B0) | (0 << WGM11) | (0 << WGM10);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0002 0022     TCCR1B = (0 << ICNC1) | (0 << ICES1) | (0 << WGM13) | (0 << WGM12) | (1 << CS12) | (0 << CS11) | (0 << CS10);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0002 0023     TCNT1H = 0x85;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0002 0024     TCNT1L = 0xEE;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0002 0025     ICR1H = 0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0002 0026     ICR1L = 0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0002 0027     OCR1AH = 0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0002 0028     OCR1AL = 0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0002 0029     OCR1BH = 0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0002 002A     OCR1BL = 0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0002 002B 
; 0002 002C     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0002 002D     TIMSK = (0 << OCIE2) | (0 << TOIE2) | (0 << TICIE1) | (0 << OCIE1A) | (0 << OCIE1B) | (1 << TOIE1) | (0 << OCIE0) |  ...
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0002 002E }
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;
;void init_glcd()
; 0002 0031 {
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0002 0032     // Variable used to store graphic display
; 0002 0033     // controller initialization data
; 0002 0034     GLCDINIT_t glcd_init_data;
; 0002 0035 
; 0002 0036     // Graphic Display Controller initialization
; 0002 0037     // The KS0108 connections are specified in the
; 0002 0038     // Project|Configure|C Compiler|Libraries|Graphic Display menu:
; 0002 0039     // DB0 - PORTC Bit 0
; 0002 003A     // DB1 - PORTC Bit 1
; 0002 003B     // DB2 - PORTC Bit 2
; 0002 003C     // DB3 - PORTC Bit 3
; 0002 003D     // DB4 - PORTC Bit 4
; 0002 003E     // DB5 - PORTC Bit 5
; 0002 003F     // DB6 - PORTC Bit 6
; 0002 0040     // DB7 - PORTC Bit 7
; 0002 0041     // E - PORTD Bit 0
; 0002 0042     // RD /WR - PORTD Bit 1
; 0002 0043     // RS - PORTD Bit 2
; 0002 0044     // /RST - PORTD Bit 3
; 0002 0045     // /CS1 - PORTD Bit 5
; 0002 0046     // /CS2 - PORTD Bit 4
; 0002 0047 
; 0002 0048     // Specify the current font for displaying text
; 0002 0049     glcd_init_data.font = font5x7;
;PCODE: $0000003D VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0002 004A     // No function is used for reading
; 0002 004B     // image data from external memory
; 0002 004C     glcd_init_data.readxmem = NULL;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0002 004D     // No function is used for writing
; 0002 004E     // image data to external memory
; 0002 004F     glcd_init_data.writexmem = NULL;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0002 0050 
; 0002 0051     glcd_init(&glcd_init_data);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0002 0052 }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;
;void init_main()
; 0002 0055 {
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0002 0056     init_ports();
;PCODE: $0000004B VOL: 0
; 0002 0057     init_timers();
;PCODE: $0000004C VOL: 0
; 0002 0058     init_glcd();
;PCODE: $0000004D VOL: 0
; 0002 0059 }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
