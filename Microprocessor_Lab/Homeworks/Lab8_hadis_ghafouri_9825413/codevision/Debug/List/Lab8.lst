
AVRASM ver. 2.1.30  C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm Sat Dec 24 09:32:32 2022

C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1096): warning: Register r12 already defined by the .DEF directive
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _output_time=R4
                 	.DEF _output_time_msb=R5
                 	.DEF _hour=R6
                 	.DEF _hour_msb=R7
                 	.DEF _minute=R8
                 	.DEF _minute_msb=R9
                 	.DEF _second=R10
                 	.DEF _second_msb=R11
                 	.DEF _i=R12
                 	.DEF _i_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0389 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 04ce 	JMP  _timer1_ovf_isr
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _font5x7:
00002a 0705
00002b 6020
00002c 0000
00002d 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00002e 0000
00002f 5f00
000030 0000
000031 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
000032 0700
000033 1400
000034 147f
000035 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000036 2a24
000037 2a7f
000038 2312
000039 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
00003a 6264
00003b 4936
00003c 2255
00003d 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00003e 0305
00003f 0000
000040 1c00
000041 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
000042 0000
000043 2241
000044 001c
000045 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000046 2a1c
000047 0808
000048 3e08
000049 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
00004a 5000
00004b 0030
00004c 0800
00004d 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00004e 0808
00004f 3000
000050 0030
000051 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
000052 0810
000053 0204
000054 513e
000055 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000056 003e
000057 7f42
000058 0040
000059 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
00005a 4951
00005b 2146
00005c 4541
00005d 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00005e 1418
00005f 7f12
000060 2710
000061 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
000062 3945
000063 4a3c
000064 4949
000065 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000066 0971
000067 0305
000068 4936
000069 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
00006a 0636
00006b 4949
00006c 1e29
00006d 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00006e 0036
00006f 0000
000070 3656
000071 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
000072 0800
000073 2214
000074 1441
000075 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000076 1414
000077 2241
000078 0814
000079 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
00007a 5101
00007b 0609
00007c 4932
00007d 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00007e 7e3e
00007f 1111
000080 7e11
000081 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
000082 4949
000083 3e36
000084 4141
000085 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
000086 417f
000087 2241
000088 7f1c
000089 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
00008a 4149
00008b 097f
00008c 0109
00008d 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
00008e 4141
00008f 3251
000090 087f
000091 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
000092 007f
000093 7f41
000094 0041
000095 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
000096 3f41
000097 7f01
000098 1408
000099 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
00009a 407f
00009b 4040
00009c 7f40
00009d 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
00009e 7f02
00009f 047f
0000a0 1008
0000a1 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000a2 4141
0000a3 3e41
0000a4 097f
0000a5 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000a6 3e06
0000a7 5141
0000a8 5e21
0000a9 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000aa 2919
0000ab 4646
0000ac 4949
0000ad 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ae 0101
0000af 017f
0000b0 3f01
0000b1 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000b2 3f40
0000b3 201f
0000b4 2040
0000b5 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000b6 1820
0000b7 7f20
0000b8 1463
0000b9 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000ba 0363
0000bb 7804
0000bc 0304
0000bd 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000be 4549
0000bf 0043
0000c0 7f00
0000c1 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000c2 0402
0000c3 1008
0000c4 4120
0000c5 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000c6 0000
0000c7 0204
0000c8 0201
0000c9 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000ca 4040
0000cb 4040
0000cc 0100
0000cd 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ce 2000
0000cf 5454
0000d0 7854
0000d1 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000d2 4444
0000d3 3838
0000d4 4444
0000d5 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000d6 4438
0000d7 4844
0000d8 387f
0000d9 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000da 1854
0000db 7e08
0000dc 0109
0000dd 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000de 5414
0000df 3c54
0000e0 087f
0000e1 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000e2 0078
0000e3 7d44
0000e4 0040
0000e5 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000e6 3d44
0000e7 0000
0000e8 107f
0000e9 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000ea 4100
0000eb 407f
0000ec 7c00
0000ed 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000ee 7804
0000ef 087c
0000f0 0404
0000f1 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000f2 4444
0000f3 3844
0000f4 147c
0000f5 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000f6 0808
0000f7 1414
0000f8 7c18
0000f9 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000fa 0404
0000fb 4808
0000fc 5454
0000fd 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000fe 3f04
0000ff 4044
000100 3c20
000101 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
000102 7c20
000103 201c
000104 2040
000105 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000106 3040
000107 3c40
000108 2844
000109 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
00010a 0c44
00010b 5050
00010c 3c50
00010d 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00010e 4c54
00010f 0044
000110 3608
000111 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
000112 0000
000113 007f
000114 0000
000115 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000116 0008
000117 0102
000118 0402
000119 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
00011a 4141
00011b 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _new_image:
00011c 0080
00011d 0040
00011e 0000
00011f 0000      	.DB  0x80,0x0,0x40,0x0,0x0,0x0,0x0,0x0
000120 0000
000121 0000
000122 0000
000123 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000124 0000
000125 0000
000126 0000
000127 c0c0      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0xC0,0xC0
000128 c0c0
000129 c0c0
00012a c0c0
00012b c0c0      	.DB  0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0
00012c 0000
00012d 0000
00012e 0000
00012f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000130 0000
000131 0000
000132 0000
000133 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000134 0000
000135 0000
000136 0000
000137 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000138 0000
000139 0000
00013a 0000
00013b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013c 0000
00013d 0000
00013e 0000
00013f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000140 0000
000141 0000
000142 0000
000143 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000144 0000
000145 0000
000146 fcfc
000147 fcfc      	.DB  0x0,0x0,0x0,0x0,0xFC,0xFC,0xFC,0xFC
000148 fcfc
000149 fcfc
00014a fcfc
00014b 00c0      	.DB  0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xC0,0x0
00014c 0000
00014d 0000
00014e 0000
00014f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000150 0000
000151 0000
000152 0000
000153 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000154 0000
000155 0000
000156 0000
000157 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000158 0000
000159 0000
00015a 0000
00015b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015c 0000
00015d 0000
00015e 0000
00015f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000160 0000
000161 0000
000162 0000
000163 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000164 0000
000165 0000
000166 0000
000167 ffff      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF
000168 ffff
000169 ffff
00016a ffff
00016b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00016c 0000
00016d 0000
00016e 0000
00016f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000170 0000
000171 0000
000172 0000
000173 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000174 0000
000175 0000
000176 0000
000177 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000178 0000
000179 0000
00017a 0000
00017b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017c 0000
00017d 0000
00017e 0000
00017f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000180 0000
000181 0000
000182 0000
000183 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000184 0000
000185 0000
000186 ff0f
000187 ffff      	.DB  0x0,0x0,0x0,0x0,0xF,0xFF,0xFF,0xFF
000188 ffff
000189 ffff
00018a ffff
00018b f8ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8
00018c 0000
00018d 0000
00018e 0000
00018f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000190 0000
000191 0000
000192 0000
000193 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000194 0000
000195 0000
000196 0000
000197 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000198 0000
000199 0000
00019a 0000
00019b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019c 0000
00019d 0000
00019e 0000
00019f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a0 0000
0001a1 0000
0001a2 0000
0001a3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a4 0000
0001a5 0000
0001a6 0000
0001a7 ffff      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF
0001a8 ffff
0001a9 ffff
0001aa ffff
0001ab ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0001ac 00f0
0001ad 0000
0001ae 0000
0001af 0000      	.DB  0xF0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b0 0000
0001b1 0000
0001b2 0000
0001b3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b4 0000
0001b5 0000
0001b6 0000
0001b7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b8 0000
0001b9 0000
0001ba 0000
0001bb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001bc 0000
0001bd 0000
0001be 0000
0001bf 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c0 0000
0001c1 0000
0001c2 0000
0001c3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c4 0000
0001c5 0000
0001c6 0000
0001c7 ffff      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF
0001c8 ffff
0001c9 ffff
0001ca ffff
0001cb ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0001cc 00ff
0001cd 0000
0001ce 0000
0001cf 0000      	.DB  0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d0 0000
0001d1 0000
0001d2 0000
0001d3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d4 0000
0001d5 0000
0001d6 0000
0001d7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d8 0000
0001d9 0000
0001da 0000
0001db 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001dc 0000
0001dd 0000
0001de 0000
0001df 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001e0 0000
0001e1 0000
0001e2 0000
0001e3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001e4 0000
0001e5 0000
0001e6 0000
0001e7 ff07      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x7,0xFF
0001e8 ffff
0001e9 ffff
0001ea ffff
0001eb ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0001ec e0ff
0001ed 8080
0001ee 8080
0001ef 8080      	.DB  0xFF,0xE0,0x80,0x80,0x80,0x80,0x80,0x80
0001f0 8080
0001f1 8080
0001f2 8080
0001f3 8080      	.DB  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80
0001f4 8080
0001f5 8080
0001f6 8080
0001f7 8080      	.DB  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80
0001f8 8080
0001f9 8080
0001fa 8080
0001fb 8080      	.DB  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80
0001fc 8080
0001fd 8080
0001fe 8080
0001ff 8080      	.DB  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80
000200 8080
000201 8080
000202 8080
000203 8080      	.DB  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80
000204 8080
000205 8080
000206 8080
000207 ff80      	.DB  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFF
000208 ffff
000209 ffff
00020a ffff
00020b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00020c c0ff
00020d c0c0
00020e c0c0
00020f 00c0      	.DB  0xFF,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x0
000210 0000
000211 0000
000212 0000
000213 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000214 0000
000215 0000
000216 0000
000217 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000218 0000
000219 0000
00021a 0000
00021b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00021c 0000
00021d 0000
00021e 0000
00021f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000220 0000
000221 0000
000222 0000
000223 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000224 0000
000225 0000
000226 0000
000227 0700      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7
000228 ffff
000229 ffff
00022a ffff
00022b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00022c ffff
00022d ffff
00022e ffff
00022f ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000230 ffff
000231 ffff
000232 ffff
000233 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000234 ffff
000235 ffff
000236 ffff
000237 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000238 ffff
000239 ffff
00023a ffff
00023b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00023c ffff
00023d ffff
00023e ffff
00023f ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000240 ffff
000241 ffff
000242 ffff
000243 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000244 ffff
000245 ffff
000246 ffff
000247 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000248 ffff
000249 ffff
00024a ffff
00024b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00024c ffff
00024d ffff
00024e ffff
00024f 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0
000250 0000
000251 0000
000252 0000
000253 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000254 0000
000255 0000
000256 0000
000257 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000258 0000
000259 0000
00025a 0000
00025b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00025c 0000
00025d 0000
00025e 0000
00025f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000260 0000
000261 0000
000262 0000
000263 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000264 0000
000265 0000
000266 0000
000267 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000268 ffff
000269 ffff
00026a ffff
00026b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00026c ffff
00026d 0101
00026e 0101
00026f 0101      	.DB  0xFF,0xFF,0x1,0x1,0x1,0x1,0x1,0x1
000270 0101
000271 0101
000272 0101
000273 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000274 0101
000275 0101
000276 0101
000277 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000278 0101
000279 0101
00027a 0101
00027b 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
00027c 0101
00027d 0101
00027e 0101
00027f 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000280 0101
000281 0101
000282 0101
000283 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000284 0101
000285 0101
000286 0101
000287 ff01      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xFF
000288 ffff
000289 ffff
00028a ffff
00028b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00028c 00ff
00028d 0000
00028e 0000
00028f 0000      	.DB  0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000290 0000
000291 0000
000292 0000
000293 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000294 0000
000295 0000
000296 0000
000297 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000298 0000
000299 0000
00029a 0000
00029b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00029c 0000
00029d 0000
00029e 0000
00029f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002a0 0000
0002a1 0000
0002a2 0000
0002a3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002a4 0000
0002a5 0000
0002a6 0000
0002a7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002a8 ffff
0002a9 ffff
0002aa ffff
0002ab ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0002ac ffff
0002ad 00ff
0002ae 0000
0002af 0000      	.DB  0xFF,0xFF,0xFF,0x0,0x0,0x0,0x0,0x0
0002b0 0000
0002b1 0000
0002b2 0000
0002b3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002b4 0000
0002b5 0000
0002b6 0000
0002b7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002b8 0000
0002b9 0000
0002ba 0000
0002bb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002bc 0000
0002bd 0000
0002be 0000
0002bf 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002c0 0000
0002c1 0000
0002c2 0000
0002c3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002c4 0000
0002c5 0000
0002c6 0000
0002c7 ff00      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF
0002c8 ffff
0002c9 ffff
0002ca ffff
0002cb ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0002cc e0ff
0002cd 00c0
0002ce 0000
0002cf 0000      	.DB  0xFF,0xE0,0xC0,0x0,0x0,0x0,0x0,0x0
0002d0 0000
0002d1 0000
0002d2 0000
0002d3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002d4 0000
0002d5 0000
0002d6 0000
0002d7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002d8 0000
0002d9 0000
0002da 0000
0002db 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002dc 0000
0002dd 0000
0002de 0000
0002df 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002e0 0000
0002e1 0000
0002e2 0000
0002e3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002e4 0000
0002e5 0000
0002e6 0000
0002e7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002e8 ff00
0002e9 ffff
0002ea ffff
0002eb ffff      	.DB  0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0002ec ffff
0002ed 00ff
0002ee 0000
0002ef 0000      	.DB  0xFF,0xFF,0xFF,0x0,0x0,0x0,0x0,0x0
0002f0 0000
0002f1 0000
0002f2 0000
0002f3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002f4 0000
0002f5 0000
0002f6 0000
0002f7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002f8 0000
0002f9 0000
0002fa 0000
0002fb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0002fc 0000
0002fd 0000
0002fe 0000
0002ff 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000300 0000
000301 0000
000302 0000
000303 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000304 0000
000305 0000
000306 0000
000307 7f00      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7F
000308 ffff
000309 ffff
00030a ffff
00030b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00030c ffff
00030d f8ff
00030e 0000
00030f 0000      	.DB  0xFF,0xFF,0xFF,0xF8,0x0,0x0,0x0,0x0
000310 0000
000311 0000
000312 0000
000313 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000314 0000
000315 0000
000316 0000
000317 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000318 0000
000319 0000
00031a 0000
00031b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00031c 0000
00031d 0000      	.DB  0x0,0x0,0x0,0x0
                 _Lab8_Q1_HG:
00031e 0007
00031f 0000
000320 00ff
000321 0008      	.DB  0x7,0x0,0x0,0x0,0xFF,0x0,0x8,0x0
000322 0008
000323 0008
000324 0008
000325 00ff      	.DB  0x8,0x0,0x8,0x0,0x8,0x0,0xFF,0x0
000326 0000
000327 0007
000328 0000
000329 007e      	.DB  0x0,0x0,0x7,0x0,0x0,0x0,0x7E,0x0
00032a 0042
00032b 0042
00032c 0052
00032d 0052      	.DB  0x42,0x0,0x42,0x0,0x52,0x0,0x52,0x0
00032e 0072
00032f 0000
000330 0007
000331 0000      	.DB  0x72,0x0,0x0,0x0,0x7,0x0,0x0,0x0
000332 00ff
000333 0008
000334 0008
000335 0008      	.DB  0xFF,0x0,0x8,0x0,0x8,0x0,0x8,0x0
000336 0008
000337 00ff
000338 0000
000339 0007      	.DB  0x8,0x0,0xFF,0x0,0x0,0x0,0x7,0x0
00033a 0000
00033b 007e
00033c 0042
00033d 0042      	.DB  0x0,0x0,0x7E,0x0,0x42,0x0,0x42,0x0
00033e 0052
00033f 0052
000340 0072
000341 0000      	.DB  0x52,0x0,0x52,0x0,0x72,0x0,0x0,0x0
                 __glcd_mask:
000342 0100
000343 0703
000344 1f0f
000345 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1332): warning: .cseg .db misalignment - padding zero byte
000346 00ff      	.DB  0xFF
                 _tbl10_G104:
000347 2710
000348 03e8
000349 0064
00034a 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00034b 0001      	.DB  0x1,0x0
                 _tbl16_G104:
00034c 1000
00034d 0100
00034e 0010
00034f 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000350 0160
000351 0005      	.DB  LOW(_0x60003),HIGH(_0x60003),0x5,0x0
000352 0032
000353 0028      	.DB  0x32,0x0,0x28,0x0
                 
                 _0x60000:
000354 2020
000355 203a
000356 3a20
000357 2020      	.DB  0x20,0x20,0x3A,0x20,0x20,0x3A,0x20,0x20
000358 2500
000359 3a64
00035a 6425
00035b 253a      	.DB  0x0,0x25,0x64,0x3A,0x25,0x64,0x3A,0x25
00035c 2064
00035d 2020
00035e 3600
00035f 3300      	.DB  0x64,0x20,0x20,0x20,0x0,0x36,0x0,0x33
000360 3900
000361 3100
000362 0032      	.DB  0x0,0x39,0x0,0x31,0x32,0x0
                 _0x80003:
000363 0201
000364 0804
000365 2010
000366 8040      	.DB  0x1,0x2,0x4,0x8,0x10,0x20,0x40,0x80
                 _0x20A0060:
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1352): warning: .cseg .db misalignment - padding zero byte
000367 0001      	.DB  0x1
                 _0x20A0000:
000368 4e2d
000369 4e41
00036a 4900
00036b 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Win 10\Desktop\university\term7\micro Lab\my_answers\Lab8_hadis_ghafouri_9825413\codevision\Debug\List\Lab8.asm(1355): warning: .cseg .db misalignment - padding zero byte
00036c 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00036d 0008      	.DW  0x08
00036e 0004      	.DW  0x04
00036f 06a0      	.DW  __REG_VARS*2
                 
000370 0009      	.DW  0x09
000371 0160      	.DW  _0x60003
000372 06a8      	.DW  _0x60000*2
                 
000373 0002      	.DW  0x02
000374 0169      	.DW  _0x60019
000375 06af      	.DW  _0x60000*2+7
                 
000376 0002      	.DW  0x02
000377 016b      	.DW  _0x60019+2
000378 06bd      	.DW  _0x60000*2+21
                 
000379 0002      	.DW  0x02
00037a 016d      	.DW  _0x60019+4
00037b 06bf      	.DW  _0x60000*2+23
                 
00037c 0002      	.DW  0x02
00037d 016f      	.DW  _0x60019+6
00037e 06c1      	.DW  _0x60000*2+25
                 
00037f 0003      	.DW  0x03
000380 0171      	.DW  _0x60019+8
000381 06c3      	.DW  _0x60000*2+27
                 
000382 0008      	.DW  0x08
000383 0193      	.DW  _R_data
000384 06c6      	.DW  _0x80003*2
                 
000385 0001      	.DW  0x01
000386 019e      	.DW  __seed_G105
000387 06ce      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000388 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000389 94f8      	CLI
00038a 27ee      	CLR  R30
00038b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00038c e0f1      	LDI  R31,1
00038d bffb      	OUT  GICR,R31
00038e bfeb      	OUT  GICR,R30
00038f bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000390 e08d      	LDI  R24,(14-2)+1
000391 e0a2      	LDI  R26,2
000392 27bb      	CLR  R27
                 __CLEAR_REG:
000393 93ed      	ST   X+,R30
000394 958a      	DEC  R24
000395 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000396 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000397 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000398 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000399 93ed      	ST   X+,R30
00039a 9701      	SBIW R24,1
00039b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00039c edea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00039d e0f6      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00039e 9185      	LPM  R24,Z+
00039f 9195      	LPM  R25,Z+
0003a0 9700      	SBIW R24,0
0003a1 f061      	BREQ __GLOBAL_INI_END
0003a2 91a5      	LPM  R26,Z+
0003a3 91b5      	LPM  R27,Z+
0003a4 9005      	LPM  R0,Z+
0003a5 9015      	LPM  R1,Z+
0003a6 01bf      	MOVW R22,R30
0003a7 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0003a8 9005      	LPM  R0,Z+
0003a9 920d      	ST   X+,R0
0003aa 9701      	SBIW R24,1
0003ab f7e1      	BRNE __GLOBAL_INI_LOOP
0003ac 01fb      	MOVW R30,R22
0003ad cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0003ae e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0003af bfed      	OUT  SPL,R30
0003b0 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0003b1 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0003b2 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0003b3 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0003b4 940c 03b6 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;This program was created by the
                 ;CodeWizardAVR V3.12 Advanced
                 ;Automatic Program Generator
                 ;
                 ;Project : lAB8
                 ;Version :
                 ;Date    : 12/23/2022
                 ;Author  : HADIS GHAFOURI
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega16
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*******************************************************/
                 ;
                 ;#include "headers.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include "initial_configs.h"
                 ;#include "subRoutines.h"
                 ;
                 ;void main(void)
                 ; 0000 001B {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 001C       init_main();
0003b6 d037      	RCALL _init_main
                 ; 0000 001D 
                 ; 0000 001E       subRoutine2();
0003b7 940e 0570 	CALL _subRoutine2
                 ; 0000 001F       delay_ms(3000);
0003b9 eba8      	LDI  R26,LOW(3000)
0003ba e0bb      	LDI  R27,HIGH(3000)
0003bb 940e 1269 	CALL _delay_ms
                 ; 0000 0020       subRoutine3();
0003bd 940e 057b 	CALL _subRoutine3
                 ; 0000 0021 
                 ; 0000 0022       while (1)
                 _0x3:
                 ; 0000 0023       {
                 ; 0000 0024             subRoutine1();
0003bf 940e 0528 	CALL _subRoutine1
                 ; 0000 0025       }
0003c1 cffd      	RJMP _0x3
                 ; 0000 0026 }
                 _0x6:
0003c2 cfff      	RJMP _0x6
                 ; .FEND
                 ;/****************************************************************************
                 ;Image data created by the LCD Vision V1.05 font & image editor/converter
                 ;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Graphic LCD controller: KS0108 128x64 /CS1,/CS2
                 ;Image width: 128 pixels
                 ;Image height: 64 pixels
                 ;Color depth: 1 bits/pixel
                 ;Imported image file name: New image
                 ;
                 ;Exported monochrome image data size:
                 ;1028 bytes for displays organized as horizontal rows of bytes
                 ;1028 bytes for displays organized as rows of vertical bytes.
                 ;****************************************************************************/
                 ;
                 ;flash unsigned char new_image[]=
                 ;{
                 ;/* Image width: 128 pixels */
                 ;0x80, 0x00,
                 ;/* Image height: 64 pixels */
                 ;0x40, 0x00,
                 ;#ifndef _GLCD_DATA_BYTEY_
                 ;/* Image data for monochrome displays organized
                 ;   as horizontal rows of bytes */
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x3F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0xFF, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0xFF, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0xFF, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF8, 0xFF, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00,
                 ;#else
                 ;/* Image data for monochrome displays organized
                 ;   as rows of vertical bytes */
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
                 ;0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC,
                 ;0xFC, 0xFC, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x80, 0x80,
                 ;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
                 ;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
                 ;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
                 ;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
                 ;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
                 ;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
                 ;0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0,
                 ;0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01,
                 ;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                 ;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                 ;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                 ;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                 ;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                 ;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                 ;0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xC0, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF,
                 ;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;#endif
                 ;};
                 ;
                 ;#include "headers.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;void init_ports()
                 ; 0002 0004 {
                 
                 	.CSEG
                 _init_ports:
                 ; .FSTART _init_ports
                 ; 0002 0005     // Input/Output Ports initialization
                 ; 0002 0006     // Port A initialization
                 ; 0002 0007     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0002 0008     DDRA = (0 << DDA7) | (0 << DDA6) | (0 << DDA5) | (0 << DDA4) | (0 << DDA3) | (0 << DDA2) | (0 << DDA1) | (0 << DDA0) ...
0003c3 e0e0      	LDI  R30,LOW(0)
0003c4 bbea      	OUT  0x1A,R30
                 ; 0002 0009     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0002 000A     PORTA = (0 << PORTA7) | (0 << PORTA6) | (0 << PORTA5) | (0 << PORTA4) | (0 << PORTA3) | (0 << PORTA2) | (0 << PORTA1 ...
0003c5 bbeb      	OUT  0x1B,R30
                 ; 0002 000B 
                 ; 0002 000C     // Port B initialization
                 ; 0002 000D     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0002 000E     DDRB = (0 << DDB7) | (0 << DDB6) | (0 << DDB5) | (0 << DDB4) | (0 << DDB3) | (0 << DDB2) | (0 << DDB1) | (0 << DDB0) ...
0003c6 bbe7      	OUT  0x17,R30
                 ; 0002 000F     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0002 0010     PORTB = (0 << PORTB7) | (0 << PORTB6) | (0 << PORTB5) | (0 << PORTB4) | (0 << PORTB3) | (0 << PORTB2) | (0 << PORTB1 ...
0003c7 bbe8      	OUT  0x18,R30
                 ; 0002 0011 
                 ; 0002 0012     // Port C initialization
                 ; 0002 0013     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0002 0014     DDRC = (0 << DDC7) | (0 << DDC6) | (0 << DDC5) | (0 << DDC4) | (0 << DDC3) | (0 << DDC2) | (0 << DDC1) | (0 << DDC0) ...
0003c8 bbe4      	OUT  0x14,R30
                 ; 0002 0015     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0002 0016     PORTC = (0 << PORTC7) | (0 << PORTC6) | (0 << PORTC5) | (0 << PORTC4) | (0 << PORTC3) | (0 << PORTC2) | (0 << PORTC1 ...
0003c9 bbe5      	OUT  0x15,R30
                 ; 0002 0017 
                 ; 0002 0018     // Port D initialization
                 ; 0002 0019     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0002 001A     DDRD = (0 << DDD7) | (0 << DDD6) | (0 << DDD5) | (0 << DDD4) | (0 << DDD3) | (0 << DDD2) | (0 << DDD1) | (0 << DDD0) ...
0003ca bbe1      	OUT  0x11,R30
                 ; 0002 001B     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0002 001C     PORTD = (0 << PORTD7) | (0 << PORTD6) | (0 << PORTD5) | (0 << PORTD4) | (0 << PORTD3) | (0 << PORTD2) | (0 << PORTD1 ...
0003cb bbe2      	OUT  0x12,R30
                 ; 0002 001D }
0003cc 9508      	RET
                 ; .FEND
                 ;
                 ;void init_timers()
                 ; 0002 0020 {
                 _init_timers:
                 ; .FSTART _init_timers
                 ; 0002 0021     TCCR1A = (0 << COM1A1) | (0 << COM1A0) | (0 << COM1B1) | (0 << COM1B0) | (0 << WGM11) | (0 << WGM10);
0003cd e0e0      	LDI  R30,LOW(0)
0003ce bdef      	OUT  0x2F,R30
                 ; 0002 0022     TCCR1B = (0 << ICNC1) | (0 << ICES1) | (0 << WGM13) | (0 << WGM12) | (1 << CS12) | (0 << CS11) | (0 << CS10);
0003cf e0e4      	LDI  R30,LOW(4)
0003d0 bdee      	OUT  0x2E,R30
                 ; 0002 0023     TCNT1H = 0x85;
0003d1 e8e5      	LDI  R30,LOW(133)
0003d2 bded      	OUT  0x2D,R30
                 ; 0002 0024     TCNT1L = 0xEE;
0003d3 eeee      	LDI  R30,LOW(238)
0003d4 bdec      	OUT  0x2C,R30
                 ; 0002 0025     ICR1H = 0x00;
0003d5 e0e0      	LDI  R30,LOW(0)
0003d6 bde7      	OUT  0x27,R30
                 ; 0002 0026     ICR1L = 0x00;
0003d7 bde6      	OUT  0x26,R30
                 ; 0002 0027     OCR1AH = 0x00;
0003d8 bdeb      	OUT  0x2B,R30
                 ; 0002 0028     OCR1AL = 0x00;
0003d9 bdea      	OUT  0x2A,R30
                 ; 0002 0029     OCR1BH = 0x00;
0003da bde9      	OUT  0x29,R30
                 ; 0002 002A     OCR1BL = 0x00;
0003db bde8      	OUT  0x28,R30
                 ; 0002 002B 
                 ; 0002 002C     // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0002 002D     TIMSK = (0 << OCIE2) | (0 << TOIE2) | (0 << TICIE1) | (0 << OCIE1A) | (0 << OCIE1B) | (1 << TOIE1) | (0 << OCIE0) |  ...
0003dc e0e4      	LDI  R30,LOW(4)
0003dd bfe9      	OUT  0x39,R30
                 ; 0002 002E }
0003de 9508      	RET
                 ; .FEND
                 ;
                 ;void init_glcd()
                 ; 0002 0031 {
                 _init_glcd:
                 ; .FSTART _init_glcd
                 ; 0002 0032     // Variable used to store graphic display
                 ; 0002 0033     // controller initialization data
                 ; 0002 0034     GLCDINIT_t glcd_init_data;
                 ; 0002 0035 
                 ; 0002 0036     // Graphic Display Controller initialization
                 ; 0002 0037     // The KS0108 connections are specified in the
                 ; 0002 0038     // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0002 0039     // DB0 - PORTC Bit 0
                 ; 0002 003A     // DB1 - PORTC Bit 1
                 ; 0002 003B     // DB2 - PORTC Bit 2
                 ; 0002 003C     // DB3 - PORTC Bit 3
                 ; 0002 003D     // DB4 - PORTC Bit 4
                 ; 0002 003E     // DB5 - PORTC Bit 5
                 ; 0002 003F     // DB6 - PORTC Bit 6
                 ; 0002 0040     // DB7 - PORTC Bit 7
                 ; 0002 0041     // E - PORTD Bit 0
                 ; 0002 0042     // RD /WR - PORTD Bit 1
                 ; 0002 0043     // RS - PORTD Bit 2
                 ; 0002 0044     // /RST - PORTD Bit 3
                 ; 0002 0045     // /CS1 - PORTD Bit 5
                 ; 0002 0046     // /CS2 - PORTD Bit 4
                 ; 0002 0047 
                 ; 0002 0048     // Specify the current font for displaying text
                 ; 0002 0049     glcd_init_data.font = font5x7;
0003df 9726      	SBIW R28,6
                 ;	glcd_init_data -> Y+0
0003e0 e5e4      	LDI  R30,LOW(_font5x7*2)
0003e1 e0f0      	LDI  R31,HIGH(_font5x7*2)
0003e2 83e8      	ST   Y,R30
0003e3 83f9      	STD  Y+1,R31
                 ; 0002 004A     // No function is used for reading
                 ; 0002 004B     // image data from external memory
                 ; 0002 004C     glcd_init_data.readxmem = NULL;
0003e4 e0e0      	LDI  R30,LOW(0)
0003e5 83ea      	STD  Y+2,R30
0003e6 83eb      	STD  Y+2+1,R30
                 ; 0002 004D     // No function is used for writing
                 ; 0002 004E     // image data to external memory
                 ; 0002 004F     glcd_init_data.writexmem = NULL;
0003e7 83ec      	STD  Y+4,R30
0003e8 83ed      	STD  Y+4+1,R30
                 ; 0002 0050 
                 ; 0002 0051     glcd_init(&glcd_init_data);
0003e9 01de      	MOVW R26,R28
0003ea 940e 06dc 	CALL _glcd_init
                 ; 0002 0052 }
0003ec 940c 07db 	JMP  _0x212000E
                 ; .FEND
                 ;
                 ;void init_main()
                 ; 0002 0055 {
                 _init_main:
                 ; .FSTART _init_main
                 ; 0002 0056     init_ports();
0003ee dfd4      	RCALL _init_ports
                 ; 0002 0057     init_timers();
0003ef dfdd      	RCALL _init_timers
                 ; 0002 0058     init_glcd();
0003f0 dfee      	RCALL _init_glcd
                 ; 0002 0059 }
0003f1 9508      	RET
                 ; .FEND
                 ;#include "headers.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;char *output_time = "  :  :  ";
                 
                 	.DSEG
                 _0x60003:
000160           	.BYTE 0x9
                 ;
                 ;int hour = 5;
                 ;int minute = 50;
                 ;int second = 40;
                 ;
                 ;float get_radian(float degree)
                 ; 0003 000A {
                 
                 	.CSEG
                 _get_radian:
                 ; .FSTART _get_radian
                 ; 0003 000B     return degree * (3.14 / 180.0);
0003f2 940e 1084 	CALL SUBOPT_0x0
                 ;	degree -> Y+0
                +
0003f4 eae7     +LDI R30 , LOW ( 0x3C8EE7A7 )
0003f5 eef7     +LDI R31 , HIGH ( 0x3C8EE7A7 )
0003f6 e86e     +LDI R22 , BYTE3 ( 0x3C8EE7A7 )
0003f7 e37c     +LDI R23 , BYTE4 ( 0x3C8EE7A7 )
                 	__GETD1N 0x3C8EE7A7
0003f8 940e 1369 	CALL __MULF12
0003fa 940c 0763 	JMP  _0x2120010
                 ; 0003 000C }
                 ; .FEND
                 ;
                 ;int get_clock_unit_x2(int x1, int amount, char time_unit)
                 ; 0003 000F {
                 _get_clock_unit_x2:
                 ; .FSTART _get_clock_unit_x2
                 ; 0003 0010     int x2;
                 ; 0003 0011 
                 ; 0003 0012     switch (time_unit)
0003fc 940e 1089 	CALL SUBOPT_0x1
                 ;	x1 -> Y+5
                 ;	amount -> Y+3
                 ;	time_unit -> Y+2
                 ;	x2 -> R16,R17
                 ; 0003 0013     {
                 ; 0003 0014     case 's': //* second
0003fe f439      	BRNE _0x60007
                 ; 0003 0015         x2 = x1 + (27 * sin(get_radian(6 * amount)));
0003ff 940e 1092 	CALL SUBOPT_0x2
000401 940e 10a4 	CALL SUBOPT_0x3
000403 940e 10b1 	CALL SUBOPT_0x4
                 ; 0003 0016         break;
000405 c017      	RJMP _0x60006
                 ; 0003 0017 
                 ; 0003 0018     case 'm': //* minute
                 _0x60007:
000406 36ed      	CPI  R30,LOW(0x6D)
000407 e0a0      	LDI  R26,HIGH(0x6D)
000408 07fa      	CPC  R31,R26
000409 f439      	BRNE _0x60008
                 ; 0003 0019         x2 = x1 + (23 * sin(get_radian(6 * amount)));
00040a 940e 1092 	CALL SUBOPT_0x2
00040c 940e 10b7 	CALL SUBOPT_0x5
00040e 940e 10b1 	CALL SUBOPT_0x4
                 ; 0003 001A         break;
000410 c00c      	RJMP _0x60006
                 ; 0003 001B 
                 ; 0003 001C     case 'h': //* hour
                 _0x60008:
000411 36e8      	CPI  R30,LOW(0x68)
000412 e0a0      	LDI  R26,HIGH(0x68)
000413 07fa      	CPC  R31,R26
000414 f441      	BRNE _0x6000A
                 ; 0003 001D         x2 = x1 + (18 * sin(get_radian(30 * amount)));
000415 940e 10c4 	CALL SUBOPT_0x6
000417 940e 05c4 	CALL _sin
000419 940e 10d5 	CALL SUBOPT_0x7
00041b 940e 10b1 	CALL SUBOPT_0x4
                 ; 0003 001E         break;
                 ; 0003 001F 
                 ; 0003 0020     default:
                 _0x6000A:
                 ; 0003 0021         break;
                 ; 0003 0022     }
                 _0x60006:
                 ; 0003 0023 
                 ; 0003 0024     return x2;
00041d c021      	RJMP _0x2120011
                 ; 0003 0025 }
                 ; .FEND
                 ;
                 ;int get_clock_unit_y2(int y1, int amount, char time_unit)
                 ; 0003 0028 {
                 _get_clock_unit_y2:
                 ; .FSTART _get_clock_unit_y2
                 ; 0003 0029     int y2;
                 ; 0003 002A 
                 ; 0003 002B     switch (time_unit)
00041e 940e 1089 	CALL SUBOPT_0x1
                 ;	y1 -> Y+5
                 ;	amount -> Y+3
                 ;	time_unit -> Y+2
                 ;	y2 -> R16,R17
                 ; 0003 002C     {
                 ; 0003 002D     case 's': //* second
000420 f439      	BRNE _0x6000E
                 ; 0003 002E         y2 = y1 - (27 * cos(get_radian(6 * amount)));
000421 940e 10e2 	CALL SUBOPT_0x8
000423 940e 10a4 	CALL SUBOPT_0x3
000425 940e 10f4 	CALL SUBOPT_0x9
                 ; 0003 002F         break;
000427 c017      	RJMP _0x6000D
                 ; 0003 0030 
                 ; 0003 0031     case 'm': //* minute
                 _0x6000E:
000428 36ed      	CPI  R30,LOW(0x6D)
000429 e0a0      	LDI  R26,HIGH(0x6D)
00042a 07fa      	CPC  R31,R26
00042b f439      	BRNE _0x6000F
                 ; 0003 0032         y2 = y1 - (23 * cos(get_radian(6 * amount)));
00042c 940e 10e2 	CALL SUBOPT_0x8
00042e 940e 10b7 	CALL SUBOPT_0x5
000430 940e 10f4 	CALL SUBOPT_0x9
                 ; 0003 0033         break;
000432 c00c      	RJMP _0x6000D
                 ; 0003 0034 
                 ; 0003 0035     case 'h': //* hour
                 _0x6000F:
000433 36e8      	CPI  R30,LOW(0x68)
000434 e0a0      	LDI  R26,HIGH(0x68)
000435 07fa      	CPC  R31,R26
000436 f441      	BRNE _0x60011
                 ; 0003 0036         y2 = y1 - (18 * cos(get_radian(30 * amount)));
000437 940e 10c4 	CALL SUBOPT_0x6
000439 940e 0650 	CALL _cos
00043b 940e 10d5 	CALL SUBOPT_0x7
00043d 940e 10f4 	CALL SUBOPT_0x9
                 ; 0003 0037         break;
                 ; 0003 0038 
                 ; 0003 0039     default:
                 _0x60011:
                 ; 0003 003A         break;
                 ; 0003 003B     }
                 _0x6000D:
                 ; 0003 003C 
                 ; 0003 003D     return y2;
                 _0x2120011:
00043f 01f8      	MOVW R30,R16
000440 8119      	LDD  R17,Y+1
000441 8108      	LDD  R16,Y+0
000442 9627      	ADIW R28,7
000443 9508      	RET
                 ; 0003 003E }
                 ; .FEND
                 ;
                 ;void draw_clock_lines(int amount, char time_unit)
                 ; 0003 0041 {
                 _draw_clock_lines:
                 ; .FSTART _draw_clock_lines
                 ; 0003 0042 
                 ; 0003 0043     //* glcd_line(x1,y1,x2,y2);
                 ; 0003 0044     int x1, x2, y1, y2;
                 ; 0003 0045     x1 = 32;
000444 93aa      	ST   -Y,R26
000445 9722      	SBIW R28,2
000446 940e 14e9 	CALL __SAVELOCR6
                 ;	amount -> Y+9
                 ;	time_unit -> Y+8
                 ;	x1 -> R16,R17
                 ;	x2 -> R18,R19
                 ;	y1 -> R20,R21
                 ;	y2 -> Y+6
                +
000448 e200     +LDI R16 , LOW ( 32 )
000449 e010     +LDI R17 , HIGH ( 32 )
                 	__GETWRN 16,17,32
                 ; 0003 0046     y1 = 31;
                +
00044a e14f     +LDI R20 , LOW ( 31 )
00044b e050     +LDI R21 , HIGH ( 31 )
                 	__GETWRN 20,21,31
                 ; 0003 0047 
                 ; 0003 0048     switch (time_unit)
00044c 85e8      	LDD  R30,Y+8
00044d e0f0      	LDI  R31,0
                 ; 0003 0049     {
                 ; 0003 004A     case 's': //* second
00044e 37e3      	CPI  R30,LOW(0x73)
00044f e0a0      	LDI  R26,HIGH(0x73)
000450 07fa      	CPC  R31,R26
000451 f449      	BRNE _0x60015
                 ; 0003 004B         x2 = get_clock_unit_x2(x1, amount, 's');
000452 940e 10fc 	CALL SUBOPT_0xA
000454 e7a3      	LDI  R26,LOW(115)
000455 940e 1103 	CALL SUBOPT_0xB
                 ; 0003 004C         y2 = get_clock_unit_y2(y1, amount, 's');
000457 e7a3      	LDI  R26,LOW(115)
000458 940e 110d 	CALL SUBOPT_0xC
                 ; 0003 004D         break;
00045a c019      	RJMP _0x60014
                 ; 0003 004E 
                 ; 0003 004F     case 'm': //* minute
                 _0x60015:
00045b 36ed      	CPI  R30,LOW(0x6D)
00045c e0a0      	LDI  R26,HIGH(0x6D)
00045d 07fa      	CPC  R31,R26
00045e f449      	BRNE _0x60016
                 ; 0003 0050         x2 = get_clock_unit_x2(x1, amount, 'm');
00045f 940e 10fc 	CALL SUBOPT_0xA
000461 e6ad      	LDI  R26,LOW(109)
000462 940e 1103 	CALL SUBOPT_0xB
                 ; 0003 0051         y2 = get_clock_unit_y2(y1, amount, 'm');
000464 e6ad      	LDI  R26,LOW(109)
000465 940e 110d 	CALL SUBOPT_0xC
                 ; 0003 0052         break;
000467 c00c      	RJMP _0x60014
                 ; 0003 0053 
                 ; 0003 0054     case 'h': //* hour
                 _0x60016:
000468 36e8      	CPI  R30,LOW(0x68)
000469 e0a0      	LDI  R26,HIGH(0x68)
00046a 07fa      	CPC  R31,R26
00046b f441      	BRNE _0x60018
                 ; 0003 0055         x2 = get_clock_unit_x2(x1, amount, 'h');
00046c 940e 10fc 	CALL SUBOPT_0xA
00046e e6a8      	LDI  R26,LOW(104)
00046f 940e 1103 	CALL SUBOPT_0xB
                 ; 0003 0056         y2 = get_clock_unit_y2(y1, amount, 'h');
000471 e6a8      	LDI  R26,LOW(104)
000472 940e 110d 	CALL SUBOPT_0xC
                 ; 0003 0057         break;
                 ; 0003 0058 
                 ; 0003 0059     default:
                 _0x60018:
                 ; 0003 005A         break;
                 ; 0003 005B     }
                 _0x60014:
                 ; 0003 005C 
                 ; 0003 005D     glcd_line(x1, y1, x2, y2);
000474 930a      	ST   -Y,R16
000475 934a      	ST   -Y,R20
000476 932a      	ST   -Y,R18
000477 85a9      	LDD  R26,Y+9
000478 940e 0b63 	CALL _glcd_line
                 ; 0003 005E }
00047a 940e 14f0 	CALL __LOADLOCR6
00047c 962b      	ADIW R28,11
00047d 9508      	RET
                 ; .FEND
                 ;
                 ;void update_clock()
                 ; 0003 0061 {
                 _update_clock:
                 ; .FSTART _update_clock
                 ; 0003 0062     glcd_clear();
00047e 940e 073f 	CALL _glcd_clear
                 ; 0003 0063     draw_clock_lines(second, 's');
000480 92ba      	ST   -Y,R11
000481 92aa      	ST   -Y,R10
000482 e7a3      	LDI  R26,LOW(115)
000483 dfc0      	RCALL _draw_clock_lines
                 ; 0003 0064     draw_clock_lines(minute, 'm');
000484 929a      	ST   -Y,R9
000485 928a      	ST   -Y,R8
000486 e6ad      	LDI  R26,LOW(109)
000487 dfbc      	RCALL _draw_clock_lines
                 ; 0003 0065     draw_clock_lines(hour, 'h');
000488 927a      	ST   -Y,R7
000489 926a      	ST   -Y,R6
00048a e6a8      	LDI  R26,LOW(104)
00048b dfb8      	RCALL _draw_clock_lines
                 ; 0003 0066 
                 ; 0003 0067     sprintf(output_time, "%d:%d:%d   ", hour, minute, second);
00048c 925a      	ST   -Y,R5
00048d 924a      	ST   -Y,R4
                +
00048e ebe1     +LDI R30 , LOW ( 2 * _0x60000 + ( 9 ) )
00048f e0f6     +LDI R31 , HIGH ( 2 * _0x60000 + ( 9 ) )
                 	__POINTW1FN _0x60000,9
000490 93fa      	ST   -Y,R31
000491 93ea      	ST   -Y,R30
000492 01f3      	MOVW R30,R6
000493 940e 1112 	CALL SUBOPT_0xD
000495 01f4      	MOVW R30,R8
000496 940e 1112 	CALL SUBOPT_0xD
000498 01f5      	MOVW R30,R10
000499 940e 1112 	CALL SUBOPT_0xD
00049b e08c      	LDI  R24,12
00049c 940e 0fb6 	CALL _sprintf
00049e 9660      	ADIW R28,16
                 ; 0003 0068     glcd_outtextxy(70, 40, output_time);
00049f e4e6      	LDI  R30,LOW(70)
0004a0 93ea      	ST   -Y,R30
0004a1 e2e8      	LDI  R30,LOW(40)
0004a2 93ea      	ST   -Y,R30
0004a3 01d2      	MOVW R26,R4
0004a4 940e 1117 	CALL SUBOPT_0xE
                 ; 0003 0069 
                 ; 0003 006A     glcd_outtextxy(30, 50, " "); // should be here
                +
0004a6 e6a9     +LDI R26 , LOW ( _0x60019 + ( 0 ) )
0004a7 e0b1     +LDI R27 , HIGH ( _0x60019 + ( 0 ) )
                 	__POINTW2MN _0x60019,0
0004a8 940e 1117 	CALL SUBOPT_0xE
                 ; 0003 006B     glcd_outtextxy(30, 50, "6");
                +
0004aa e6ab     +LDI R26 , LOW ( _0x60019 + ( 2 ) )
0004ab e0b1     +LDI R27 , HIGH ( _0x60019 + ( 2 ) )
                 	__POINTW2MN _0x60019,2
0004ac 940e 0af8 	CALL _glcd_outtextxy
                 ; 0003 006C     glcd_outtextxy(54, 30, "3");
0004ae e3e6      	LDI  R30,LOW(54)
0004af 93ea      	ST   -Y,R30
0004b0 e1ee      	LDI  R30,LOW(30)
0004b1 93ea      	ST   -Y,R30
                +
0004b2 e6ad     +LDI R26 , LOW ( _0x60019 + ( 4 ) )
0004b3 e0b1     +LDI R27 , HIGH ( _0x60019 + ( 4 ) )
                 	__POINTW2MN _0x60019,4
0004b4 940e 0af8 	CALL _glcd_outtextxy
                 ; 0003 006D     glcd_outtextxy(4, 31, "9");
0004b6 e0e4      	LDI  R30,LOW(4)
0004b7 93ea      	ST   -Y,R30
0004b8 e1ef      	LDI  R30,LOW(31)
0004b9 93ea      	ST   -Y,R30
                +
0004ba e6af     +LDI R26 , LOW ( _0x60019 + ( 6 ) )
0004bb e0b1     +LDI R27 , HIGH ( _0x60019 + ( 6 ) )
                 	__POINTW2MN _0x60019,6
0004bc 940e 0af8 	CALL _glcd_outtextxy
                 ; 0003 006E     glcd_outtextxy(27, 3, "12");
0004be e1eb      	LDI  R30,LOW(27)
0004bf 93ea      	ST   -Y,R30
0004c0 e0e3      	LDI  R30,LOW(3)
0004c1 93ea      	ST   -Y,R30
                +
0004c2 e7a1     +LDI R26 , LOW ( _0x60019 + ( 8 ) )
0004c3 e0b1     +LDI R27 , HIGH ( _0x60019 + ( 8 ) )
                 	__POINTW2MN _0x60019,8
0004c4 940e 0af8 	CALL _glcd_outtextxy
                 ; 0003 006F 
                 ; 0003 0070     glcd_circle(32, 31, 30);
0004c6 e2e0      	LDI  R30,LOW(32)
0004c7 93ea      	ST   -Y,R30
0004c8 e1ef      	LDI  R30,LOW(31)
0004c9 93ea      	ST   -Y,R30
0004ca e1ae      	LDI  R26,LOW(30)
0004cb 940e 0e3e 	CALL _glcd_circle
                 ; 0003 0071     //* 32 = x specifies the horizontal coordinate of the circle's center
                 ; 0003 0072     //* 31 = y specifies the vertical coordinate of the circle's center
                 ; 0003 0073     //* 30 = specifies the circle's radius
                 ; 0003 0074 }
0004cd 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x60019:
000169           	.BYTE 0xB
                 ;
                 ;interrupt[TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0003 0077 {
                 
                 	.CSEG
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
0004ce 920a      	ST   -Y,R0
0004cf 921a      	ST   -Y,R1
0004d0 92fa      	ST   -Y,R15
0004d1 936a      	ST   -Y,R22
0004d2 937a      	ST   -Y,R23
0004d3 938a      	ST   -Y,R24
0004d4 939a      	ST   -Y,R25
0004d5 93aa      	ST   -Y,R26
0004d6 93ba      	ST   -Y,R27
0004d7 93ea      	ST   -Y,R30
0004d8 93fa      	ST   -Y,R31
0004d9 b7ef      	IN   R30,SREG
0004da 93ea      	ST   -Y,R30
                 ; 0003 0078     // Reinitialize Timer1 value
                 ; 0003 0079     TCNT1H = 0x85EE >> 8;
0004db e8e5      	LDI  R30,LOW(133)
0004dc bded      	OUT  0x2D,R30
                 ; 0003 007A     TCNT1L = 0x85EE & 0xff;
0004dd eeee      	LDI  R30,LOW(238)
0004de bdec      	OUT  0x2C,R30
                 ; 0003 007B 
                 ; 0003 007C     second++;
0004df 01f5      	MOVW R30,R10
0004e0 9631      	ADIW R30,1
0004e1 015f      	MOVW R10,R30
                 ; 0003 007D     if (second == 60)
0004e2 e3ec      	LDI  R30,LOW(60)
0004e3 e0f0      	LDI  R31,HIGH(60)
0004e4 15ea      	CP   R30,R10
0004e5 05fb      	CPC  R31,R11
0004e6 f4b1      	BRNE _0x6001A
                 ; 0003 007E     {
                 ; 0003 007F         second = 0;
0004e7 24aa      	CLR  R10
0004e8 24bb      	CLR  R11
                 ; 0003 0080         minute++;
0004e9 01f4      	MOVW R30,R8
0004ea 9631      	ADIW R30,1
0004eb 014f      	MOVW R8,R30
                 ; 0003 0081         if (minute == 60)
0004ec e3ec      	LDI  R30,LOW(60)
0004ed e0f0      	LDI  R31,HIGH(60)
0004ee 15e8      	CP   R30,R8
0004ef 05f9      	CPC  R31,R9
0004f0 f461      	BRNE _0x6001B
                 ; 0003 0082         {
                 ; 0003 0083             minute = 0;
0004f1 2488      	CLR  R8
0004f2 2499      	CLR  R9
                 ; 0003 0084             hour++;
0004f3 01f3      	MOVW R30,R6
0004f4 9631      	ADIW R30,1
0004f5 013f      	MOVW R6,R30
                 ; 0003 0085             if (hour == 12)
0004f6 e0ec      	LDI  R30,LOW(12)
0004f7 e0f0      	LDI  R31,HIGH(12)
0004f8 15e6      	CP   R30,R6
0004f9 05f7      	CPC  R31,R7
0004fa f411      	BRNE _0x6001C
                 ; 0003 0086             {
                 ; 0003 0087                 hour = 0;
0004fb 2466      	CLR  R6
0004fc 2477      	CLR  R7
                 ; 0003 0088             }
                 ; 0003 0089         }
                 _0x6001C:
                 ; 0003 008A     }
                 _0x6001B:
                 ; 0003 008B     update_clock();
                 _0x6001A:
0004fd df80      	RCALL _update_clock
                 ; 0003 008C }
0004fe 91e9      	LD   R30,Y+
0004ff bfef      	OUT  SREG,R30
000500 91f9      	LD   R31,Y+
000501 91e9      	LD   R30,Y+
000502 91b9      	LD   R27,Y+
000503 91a9      	LD   R26,Y+
000504 9199      	LD   R25,Y+
000505 9189      	LD   R24,Y+
000506 9179      	LD   R23,Y+
000507 9169      	LD   R22,Y+
000508 90f9      	LD   R15,Y+
000509 9019      	LD   R1,Y+
00050a 9009      	LD   R0,Y+
00050b 9518      	RETI
                 ; .FEND
                 ;#include "headers.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "clock.h"
                 ;
                 ;int i, j;
                 ;
                 ;const unsigned short Lab8_Q1_HG[] = {
                 ;    // 32 numbers =>index = [0,31]
                 ;    0x07, 0x00, 0xFF, 0x08, 0x08, 0x08, 0x08, 0xFF, 0x00, // Code for char H
                 ;    0x07, 0x00, 0x7E, 0x42, 0x42, 0x52, 0x52, 0x72, 0x00, // Code for char G
                 ;    0x07, 0x00, 0xFF, 0x08, 0x08, 0x08, 0x08, 0xFF, 0x00, // Code for char H
                 ;    0x07, 0x00, 0x7E, 0x42, 0x42, 0x52, 0x52, 0x72, 0x00, // Code for char G
                 ;};
                 ;
                 ;unsigned char R_data[8] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
                 
                 	.DSEG
                 ;
                 ;int config_portD(int a, int b)
                 ; 0004 0011 {
                 
                 	.CSEG
                 _config_portD:
                 ; .FSTART _config_portD
                 ; 0004 0012     if (b - a < 8)
00050c 93ba      	ST   -Y,R27
00050d 93aa      	ST   -Y,R26
                 ;	a -> Y+2
                 ;	b -> Y+0
00050e 81aa      	LDD  R26,Y+2
00050f 81bb      	LDD  R27,Y+2+1
000510 81e8      	LD   R30,Y
000511 81f9      	LDD  R31,Y+1
000512 1bea      	SUB  R30,R26
000513 0bfb      	SBC  R31,R27
000514 9738      	SBIW R30,8
000515 f424      	BRGE _0x80004
                 ; 0004 0013         return 0;
000516 e0e0      	LDI  R30,LOW(0)
000517 e0f0      	LDI  R31,HIGH(0)
000518 940c 0763 	JMP  _0x2120010
                 ; 0004 0014     return 1;
                 _0x80004:
00051a e0e1      	LDI  R30,LOW(1)
00051b e0f0      	LDI  R31,HIGH(1)
00051c 940c 0763 	JMP  _0x2120010
                 ; 0004 0015 }
                 ; .FEND
                 ;
                 ;int config_portA(int index) // PORTA works as Rows in font matrix
                 ; 0004 0018 {
                 _config_portA:
                 ; .FSTART _config_portA
                 ; 0004 0019     //(j - i) % 8 = 0 1 2 3 4 5 6 7 => row { Decimal: 1 2 4 8 16 32 64 128 # Hex: 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x ...
                 ; 0004 001A     return R_data[index];
00051e 93ba      	ST   -Y,R27
00051f 93aa      	ST   -Y,R26
                 ;	index -> Y+0
000520 81e8      	LD   R30,Y
000521 81f9      	LDD  R31,Y+1
000522 56ed      	SUBI R30,LOW(-_R_data)
000523 4ffe      	SBCI R31,HIGH(-_R_data)
000524 81e0      	LD   R30,Z
000525 e0f0      	LDI  R31,0
000526 940c 09e6 	JMP  _0x212000C
                 ; 0004 001B }
                 ; .FEND
                 ;
                 ;void subRoutine1()
                 ; 0004 001E {
                 _subRoutine1:
                 ; .FSTART _subRoutine1
                 ; 0004 001F 
                 ; 0004 0020     for (i = 0; i < 16; i++)
000528 24cc      	CLR  R12
000529 24dd      	CLR  R13
                 _0x80006:
00052a e1e0      	LDI  R30,LOW(16)
00052b e0f0      	LDI  R31,HIGH(16)
00052c 16ce      	CP   R12,R30
00052d 06df      	CPC  R13,R31
00052e f00c      	BRLT PC+2
00052f c03f      	RJMP _0x80007
                 ; 0004 0021     {
                 ; 0004 0022         for (j = i; j < i + 16; j++)
                +
000530 92c0 0191+STS _j + ( 0 ) , R12
000532 92d0 0192+STS _j + ( 0 ) + 1 , R13
                 	__PUTWMRN _j,0,12,13
                 _0x80009:
000534 01f6      	MOVW R30,R12
000535 9670      	ADIW R30,16
000536 91a0 0191 	LDS  R26,_j
000538 91b0 0192 	LDS  R27,_j+1
00053a 17ae      	CP   R26,R30
00053b 07bf      	CPC  R27,R31
00053c f554      	BRGE _0x8000A
                 ; 0004 0023         {
                 ; 0004 0024             PORTD.7 = config_portD(i, j);
00053d 92da      	ST   -Y,R13
00053e 92ca      	ST   -Y,R12
00053f dfcc      	RCALL _config_portD
000540 30e0      	CPI  R30,0
000541 f411      	BRNE _0x8000B
000542 9897      	CBI  0x12,7
000543 c001      	RJMP _0x8000C
                 _0x8000B:
000544 9a97      	SBI  0x12,7
                 _0x8000C:
                 ; 0004 0025             PORTA = config_portA((j - i) % 8);
000545 91e0 0191 	LDS  R30,_j
000547 91f0 0192 	LDS  R31,_j+1
000549 19ec      	SUB  R30,R12
00054a 09fd      	SBC  R31,R13
00054b e0a7      	LDI  R26,LOW(7)
00054c e0b0      	LDI  R27,HIGH(7)
00054d 940e 147d 	CALL __MANDW12
00054f 01df      	MOVW R26,R30
000550 dfcd      	RCALL _config_portA
000551 bbeb      	OUT  0x1B,R30
                 ; 0004 0026             PORTB = Lab8_Q1_HG[j]; // Columns in font matrix
000552 91e0 0191 	LDS  R30,_j
000554 91f0 0192 	LDS  R31,_j+1
000556 e3ac      	LDI  R26,LOW(_Lab8_Q1_HG*2)
000557 e0b6      	LDI  R27,HIGH(_Lab8_Q1_HG*2)
000558 0fee      	LSL  R30
000559 1fff      	ROL  R31
00055a 0fea      	ADD  R30,R26
00055b 1ffb      	ADC  R31,R27
00055c 9004      	LPM  R0,Z
00055d ba08      	OUT  0x18,R0
                 ; 0004 0027             delay_ms(3);
00055e e0a3      	LDI  R26,LOW(3)
00055f e0b0      	LDI  R27,0
000560 940e 1269 	CALL _delay_ms
                 ; 0004 0028         }
000562 e9a1      	LDI  R26,LOW(_j)
000563 e0b1      	LDI  R27,HIGH(_j)
000564 940e 111e 	CALL SUBOPT_0xF
000566 cfcd      	RJMP _0x80009
                 _0x8000A:
                 ; 0004 0029         delay_ms(7);
000567 e0a7      	LDI  R26,LOW(7)
000568 e0b0      	LDI  R27,0
000569 940e 1269 	CALL _delay_ms
                 ; 0004 002A     }
00056b 01f6      	MOVW R30,R12
00056c 9631      	ADIW R30,1
00056d 016f      	MOVW R12,R30
00056e cfbb      	RJMP _0x80006
                 _0x80007:
                 ; 0004 002B }
00056f 9508      	RET
                 ; .FEND
                 ;
                 ;void subRoutine2()
                 ; 0004 002E {
                 _subRoutine2:
                 ; .FSTART _subRoutine2
                 ; 0004 002F     glcd_putimagef(0, 0, new_image, GLCD_PUTCOPY);
000570 e0e0      	LDI  R30,LOW(0)
000571 93ea      	ST   -Y,R30
000572 93ea      	ST   -Y,R30
000573 e3e8      	LDI  R30,LOW(_new_image*2)
000574 e0f2      	LDI  R31,HIGH(_new_image*2)
000575 93fa      	ST   -Y,R31
000576 93ea      	ST   -Y,R30
000577 e0a0      	LDI  R26,LOW(0)
000578 940e 0b0d 	CALL _glcd_putimagef
                 ; 0004 0030 }
00057a 9508      	RET
                 ; .FEND
                 ;
                 ;void subRoutine3()
                 ; 0004 0033 {
                 _subRoutine3:
                 ; .FSTART _subRoutine3
                 ; 0004 0034     // _timer_init_();
                 ; 0004 0035 #asm("sei");
00057b 9478      	sei
                 ; 0004 0036     update_clock();
00057c df01      	RCALL _update_clock
                 ; 0004 0037 }
00057d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00057e 940e 14b1 	CALL __PUTPARD2
000580 817b         ldd  r23,y+3
000581 816a         ldd  r22,y+2
000582 81f9         ldd  r31,y+1
000583 81e8         ld   r30,y
000584 fb77         bst  r23,7
000585 0f77         lsl  r23
000586 fd67         sbrc r22,7
000587 6071         sbr  r23,1
000588 2f97         mov  r25,r23
000589 579e         subi r25,0x7e
00058a f081         breq __ftrunc0
00058b f078         brcs __ftrunc0
00058c 3198         cpi  r25,24
00058d f490         brsh __ftrunc1
00058e 27aa         clr  r26
00058f 27bb         clr  r27
000590 2788         clr  r24
                 __ftrunc2:
000591 9408         sec
000592 9587         ror  r24
000593 95b7         ror  r27
000594 95a7         ror  r26
000595 959a         dec  r25
000596 f7d1         brne __ftrunc2
000597 23ea         and  r30,r26
000598 23fb         and  r31,r27
000599 2368         and  r22,r24
00059a c005         rjmp __ftrunc1
                 __ftrunc0:
00059b 94e8         clt
00059c 2777         clr  r23
00059d 27ee         clr  r30
00059e 27ff         clr  r31
00059f 2766         clr  r22
                 __ftrunc1:
0005a0 776f         cbr  r22,0x80
0005a1 9576         lsr  r23
0005a2 f408         brcc __ftrunc3
0005a3 6860         sbr  r22,0x80
                 __ftrunc3:
0005a4 f977         bld  r23,7
0005a5 91a9         ld   r26,y+
0005a6 91b9         ld   r27,y+
0005a7 9189         ld   r24,y+
0005a8 9199         ld   r25,y+
0005a9 17ea         cp   r30,r26
0005aa 07fb         cpc  r31,r27
0005ab 0768         cpc  r22,r24
0005ac 0779         cpc  r23,r25
0005ad fb97         bst  r25,7
0005ae 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0005af 940e 1084 	CALL SUBOPT_0x0
0005b1 940e 057e 	CALL _ftrunc
0005b3 940e 14a7 	CALL __PUTD1S0
0005b5 f421          brne __floor1
                 __floor0:
0005b6 940e 149d 	CALL __GETD1S0
0005b8 940c 0763 	JMP  _0x2120010
                 __floor1:
0005ba f7de          brtc __floor0
0005bb 940e 149d 	CALL __GETD1S0
                +
0005bd e0a0     +LDI R26 , LOW ( 0x3F800000 )
0005be e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0005bf e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0005c0 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0005c1 940e 1312 	CALL __SUBF12
0005c3 c19f      	RJMP _0x2120010
                 ; .FEND
                 _sin:
                 ; .FSTART _sin
0005c4 940e 14b1 	CALL __PUTPARD2
0005c6 9724      	SBIW R28,4
0005c7 931a      	ST   -Y,R17
0005c8 e010      	LDI  R17,0
0005c9 940e 1124 	CALL SUBOPT_0x10
                +
0005cb e8e3     +LDI R30 , LOW ( 0x3E22F983 )
0005cc eff9     +LDI R31 , HIGH ( 0x3E22F983 )
0005cd e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
0005ce e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
0005cf 940e 1369 	CALL __MULF12
0005d1 940e 1129 	CALL SUBOPT_0x11
0005d3 dfdb      	RCALL _floor
0005d4 940e 1124 	CALL SUBOPT_0x10
0005d6 940e 14bb 	CALL __SWAPD12
0005d8 940e 1312 	CALL __SUBF12
0005da 940e 1129 	CALL SUBOPT_0x11
                +
0005dc e0e0     +LDI R30 , LOW ( 0x3F000000 )
0005dd e0f0     +LDI R31 , HIGH ( 0x3F000000 )
0005de e060     +LDI R22 , BYTE3 ( 0x3F000000 )
0005df e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
0005e0 940e 13fc 	CALL __CMPF12
0005e2 f009      	BREQ PC+2
0005e3 f408      	BRCC PC+2
0005e4 c009      	RJMP _0x2000017
0005e5 940e 112e 	CALL SUBOPT_0x12
                +
0005e7 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0005e8 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0005e9 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0005ea e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0005eb 940e 1133 	CALL SUBOPT_0x13
0005ed e011      	LDI  R17,LOW(1)
                 _0x2000017:
0005ee 940e 1124 	CALL SUBOPT_0x10
                +
0005f0 e0e0     +LDI R30 , LOW ( 0x3E800000 )
0005f1 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
0005f2 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
0005f3 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
0005f4 940e 13fc 	CALL __CMPF12
0005f6 f009      	BREQ PC+2
0005f7 f408      	BRCC PC+2
0005f8 c008      	RJMP _0x2000018
0005f9 940e 1124 	CALL SUBOPT_0x10
                +
0005fb e0e0     +LDI R30 , LOW ( 0x3F000000 )
0005fc e0f0     +LDI R31 , HIGH ( 0x3F000000 )
0005fd e060     +LDI R22 , BYTE3 ( 0x3F000000 )
0005fe e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
0005ff 940e 1133 	CALL SUBOPT_0x13
                 _0x2000018:
000601 3010      	CPI  R17,0
000602 f041      	BREQ _0x2000019
000603 940e 112e 	CALL SUBOPT_0x12
000605 940e 1273 	CALL __ANEGF1
                +
000607 83ed     +STD Y + 5 , R30
000608 83fe     +STD Y + 5 + 1 , R31
000609 836f     +STD Y + 5 + 2 , R22
00060a 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
                 _0x2000019:
00060b 940e 112e 	CALL SUBOPT_0x12
00060d 940e 1124 	CALL SUBOPT_0x10
00060f 940e 1369 	CALL __MULF12
                +
000611 83e9     +STD Y + 1 , R30
000612 83fa     +STD Y + 1 + 1 , R31
000613 836b     +STD Y + 1 + 2 , R22
000614 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000615 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000616 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000617 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000618 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000619 940e 1369 	CALL __MULF12
00061b 01df      	MOVW R26,R30
00061c 01cb      	MOVW R24,R22
                +
00061d e1ed     +LDI R30 , LOW ( 0x422DE51D )
00061e eef5     +LDI R31 , HIGH ( 0x422DE51D )
00061f e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000620 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000621 940e 14bb 	CALL __SWAPD12
000623 940e 1312 	CALL __SUBF12
000625 940e 113a 	CALL SUBOPT_0x14
                +
000627 e4ac     +LDI R26 , LOW ( 0x4104534C )
000628 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000629 e084     +LDI R24 , BYTE3 ( 0x4104534C )
00062a e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
00062b 940e 1319 	CALL __ADDF12
00062d 940e 1124 	CALL SUBOPT_0x10
00062f 940e 1369 	CALL __MULF12
000631 937f      	PUSH R23
000632 936f      	PUSH R22
000633 93ff      	PUSH R31
000634 93ef      	PUSH R30
                +
000635 81e9     +LDD R30 , Y + 1
000636 81fa     +LDD R31 , Y + 1 + 1
000637 816b     +LDD R22 , Y + 1 + 2
000638 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000639 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
00063a eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
00063b ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
00063c e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
00063d 940e 1319 	CALL __ADDF12
00063f 940e 113a 	CALL SUBOPT_0x14
                +
000641 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000642 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000643 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000644 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000645 940e 1319 	CALL __ADDF12
000647 91af      	POP  R26
000648 91bf      	POP  R27
000649 918f      	POP  R24
00064a 919f      	POP  R25
00064b 940e 13b7 	CALL __DIVF21
00064d 8118      	LDD  R17,Y+0
00064e 940c 0b39 	JMP  _0x2120009
                 ; .FEND
                 _cos:
                 ; .FSTART _cos
000650 940e 1084 	CALL SUBOPT_0x0
                +
000652 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000653 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000654 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000655 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000656 940e 1312 	CALL __SUBF12
000658 01df      	MOVW R26,R30
000659 01cb      	MOVW R24,R22
00065a df69      	RCALL _sin
00065b c107      	RJMP _0x2120010
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _ks0108_enable_G101:
                 ; .FSTART _ks0108_enable_G101
00065c 0000      	nop
00065d 9a90      	SBI  0x12,0
00065e 0000      	nop
00065f 9508      	RET
                 ; .FEND
                 _ks0108_disable_G101:
                 ; .FSTART _ks0108_disable_G101
000660 9890      	CBI  0x12,0
000661 9a95      	SBI  0x12,5
000662 9a94      	SBI  0x12,4
000663 9508      	RET
                 ; .FEND
                 _ks0108_rdbus_G101:
                 ; .FSTART _ks0108_rdbus_G101
000664 931a      	ST   -Y,R17
000665 dff6      	RCALL _ks0108_enable_G101
000666 b313      	IN   R17,19
000667 9890      	CBI  0x12,0
000668 2fe1      	MOV  R30,R17
000669 9119      	LD   R17,Y+
00066a 9508      	RET
                 ; .FEND
                 _ks0108_busy_G101:
                 ; .FSTART _ks0108_busy_G101
00066b 93aa      	ST   -Y,R26
00066c 931a      	ST   -Y,R17
00066d e0e0      	LDI  R30,LOW(0)
00066e bbe4      	OUT  0x14,R30
00066f 9a91      	SBI  0x12,1
000670 9892      	CBI  0x12,2
000671 81a9      	LDD  R26,Y+1
000672 e0e2      	LDI  R30,LOW(2)
000673 1bea      	SUB  R30,R26
000674 2f1e      	MOV  R17,R30
000675 ff10      	SBRS R17,0
000676 c002      	RJMP _0x2020003
000677 9a95      	SBI  0x12,5
000678 c001      	RJMP _0x2020004
                 _0x2020003:
000679 9895      	CBI  0x12,5
                 _0x2020004:
00067a ff11      	SBRS R17,1
00067b c002      	RJMP _0x2020005
00067c 9a94      	SBI  0x12,4
00067d c001      	RJMP _0x2020006
                 _0x2020005:
00067e 9894      	CBI  0x12,4
                 _0x2020006:
                 _0x2020007:
00067f dfe4      	RCALL _ks0108_rdbus_G101
000680 78e0      	ANDI R30,LOW(0x80)
000681 f7e9      	BRNE _0x2020007
000682 8118      	LDD  R17,Y+0
000683 c362      	RJMP _0x212000C
                 ; .FEND
                 _ks0108_wrcmd_G101:
                 ; .FSTART _ks0108_wrcmd_G101
000684 93aa      	ST   -Y,R26
000685 81a9      	LDD  R26,Y+1
000686 dfe4      	RCALL _ks0108_busy_G101
000687 940e 1141 	CALL SUBOPT_0x15
000689 c35c      	RJMP _0x212000C
                 ; .FEND
                 _ks0108_setloc_G101:
                 ; .FSTART _ks0108_setloc_G101
                +
00068a 91e0 019c+LDS R30 , _ks0108_coord_G101 + ( 1 )
                 	__GETB1MN _ks0108_coord_G101,1
00068c 93ea      	ST   -Y,R30
00068d 91e0 019b 	LDS  R30,_ks0108_coord_G101
00068f 73ef      	ANDI R30,LOW(0x3F)
000690 64e0      	ORI  R30,0x40
000691 2fae      	MOV  R26,R30
000692 dff1      	RCALL _ks0108_wrcmd_G101
                +
000693 91e0 019c+LDS R30 , _ks0108_coord_G101 + ( 1 )
                 	__GETB1MN _ks0108_coord_G101,1
000695 93ea      	ST   -Y,R30
                +
000696 91e0 019d+LDS R30 , _ks0108_coord_G101 + ( 2 )
                 	__GETB1MN _ks0108_coord_G101,2
000698 6be8      	ORI  R30,LOW(0xB8)
000699 2fae      	MOV  R26,R30
00069a dfe9      	RCALL _ks0108_wrcmd_G101
00069b 9508      	RET
                 ; .FEND
                 _ks0108_gotoxp_G101:
                 ; .FSTART _ks0108_gotoxp_G101
00069c 93aa      	ST   -Y,R26
00069d 81e9      	LDD  R30,Y+1
00069e 93e0 019b 	STS  _ks0108_coord_G101,R30
0006a0 95e2      	SWAP R30
0006a1 70ef      	ANDI R30,0xF
0006a2 95e6      	LSR  R30
0006a3 95e6      	LSR  R30
                +
0006a4 93e0 019c+STS _ks0108_coord_G101 + ( 1 ) , R30
                 	__PUTB1MN _ks0108_coord_G101,1
0006a6 81e8      	LD   R30,Y
                +
0006a7 93e0 019d+STS _ks0108_coord_G101 + ( 2 ) , R30
                 	__PUTB1MN _ks0108_coord_G101,2
0006a9 dfe0      	RCALL _ks0108_setloc_G101
0006aa c33b      	RJMP _0x212000C
                 ; .FEND
                 _ks0108_nextx_G101:
                 ; .FSTART _ks0108_nextx_G101
0006ab 91a0 019b 	LDS  R26,_ks0108_coord_G101
0006ad 5faf      	SUBI R26,-LOW(1)
0006ae 93a0 019b 	STS  _ks0108_coord_G101,R26
0006b0 38a0      	CPI  R26,LOW(0x80)
0006b1 f018      	BRLO _0x202000A
0006b2 e0e0      	LDI  R30,LOW(0)
0006b3 93e0 019b 	STS  _ks0108_coord_G101,R30
                 _0x202000A:
0006b5 91e0 019b 	LDS  R30,_ks0108_coord_G101
0006b7 73ef      	ANDI R30,LOW(0x3F)
0006b8 f431      	BRNE _0x202000B
0006b9 91e0 019b 	LDS  R30,_ks0108_coord_G101
0006bb 93ea      	ST   -Y,R30
                +
0006bc 91a0 019d+LDS R26 , _ks0108_coord_G101 + ( 2 )
                 	__GETB2MN _ks0108_coord_G101,2
0006be dfdd      	RCALL _ks0108_gotoxp_G101
                 _0x202000B:
0006bf 9508      	RET
                 ; .FEND
                 _ks0108_wrdata_G101:
                 ; .FSTART _ks0108_wrdata_G101
0006c0 93aa      	ST   -Y,R26
                +
0006c1 91a0 019c+LDS R26 , _ks0108_coord_G101 + ( 1 )
                 	__GETB2MN _ks0108_coord_G101,1
0006c3 dfa7      	RCALL _ks0108_busy_G101
0006c4 9a92      	SBI  0x12,2
0006c5 940e 1141 	CALL SUBOPT_0x15
0006c7 9621      	ADIW R28,1
0006c8 9508      	RET
                 ; .FEND
                 _ks0108_rddata_G101:
                 ; .FSTART _ks0108_rddata_G101
                +
0006c9 91a0 019c+LDS R26 , _ks0108_coord_G101 + ( 1 )
                 	__GETB2MN _ks0108_coord_G101,1
0006cb df9f      	RCALL _ks0108_busy_G101
0006cc e0e0      	LDI  R30,LOW(0)
0006cd bbe4      	OUT  0x14,R30
0006ce 9a91      	SBI  0x12,1
0006cf 9a92      	SBI  0x12,2
0006d0 df93      	RCALL _ks0108_rdbus_G101
0006d1 9508      	RET
                 ; .FEND
                 _ks0108_rdbyte_G101:
                 ; .FSTART _ks0108_rdbyte_G101
0006d2 93aa      	ST   -Y,R26
0006d3 81e9      	LDD  R30,Y+1
0006d4 93ea      	ST   -Y,R30
0006d5 81e9      	LDD  R30,Y+1
0006d6 940e 114a 	CALL SUBOPT_0x16
0006d8 dff0      	RCALL _ks0108_rddata_G101
0006d9 dfb0      	RCALL _ks0108_setloc_G101
0006da dfee      	RCALL _ks0108_rddata_G101
0006db c30a      	RJMP _0x212000C
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0006dc 93ba      	ST   -Y,R27
0006dd 93aa      	ST   -Y,R26
0006de 931a      	ST   -Y,R17
0006df 9a88      	SBI  0x11,0
0006e0 9a89      	SBI  0x11,1
0006e1 9a8a      	SBI  0x11,2
0006e2 9a8b      	SBI  0x11,3
0006e3 9a93      	SBI  0x12,3
0006e4 9a8d      	SBI  0x11,5
0006e5 9a8c      	SBI  0x11,4
0006e6 df79      	RCALL _ks0108_disable_G101
0006e7 9893      	CBI  0x12,3
0006e8 e6a4      	LDI  R26,LOW(100)
0006e9 e0b0      	LDI  R27,0
0006ea 940e 1269 	CALL _delay_ms
0006ec 9a93      	SBI  0x12,3
0006ed e010      	LDI  R17,LOW(0)
                 _0x202000C:
0006ee 3012      	CPI  R17,2
0006ef f440      	BRSH _0x202000E
0006f0 931a      	ST   -Y,R17
0006f1 e3af      	LDI  R26,LOW(63)
0006f2 df91      	RCALL _ks0108_wrcmd_G101
0006f3 931a      	ST   -Y,R17
0006f4 9513      	INC  R17
0006f5 eca0      	LDI  R26,LOW(192)
0006f6 df8d      	RCALL _ks0108_wrcmd_G101
0006f7 cff6      	RJMP _0x202000C
                 _0x202000E:
0006f8 e0e1      	LDI  R30,LOW(1)
0006f9 93e0 0174 	STS  _glcd_state,R30
0006fb e0e0      	LDI  R30,LOW(0)
                +
0006fc 93e0 0175+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0006fe 81e9      	LDD  R30,Y+1
0006ff 81fa      	LDD  R31,Y+1+1
000700 9730      	SBIW R30,0
000701 f0a9      	BREQ _0x202000F
000702 81a9      	LDD  R26,Y+1
000703 81ba      	LDD  R27,Y+1+1
000704 940e 1495 	CALL __GETW1P
                +
000706 93e0 0178+STS _glcd_state + ( 4 ) , R30
000708 93f0 0179+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
00070a 9612      	ADIW R26,2
00070b 940e 1495 	CALL __GETW1P
                +
00070d 93e0 018d+STS _glcd_state + ( 25 ) , R30
00070f 93f0 018e+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000711 81a9      	LDD  R26,Y+1
000712 81ba      	LDD  R27,Y+1+1
000713 9614      	ADIW R26,4
000714 940e 1495 	CALL __GETW1P
000716 c00a      	RJMP _0x20200AC
                 _0x202000F:
000717 e0e0      	LDI  R30,LOW(0)
000718 e0f0      	LDI  R31,HIGH(0)
                +
000719 93e0 0178+STS _glcd_state + ( 4 ) , R30
00071b 93f0 0179+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
00071d 93e0 018d+STS _glcd_state + ( 25 ) , R30
00071f 93f0 018e+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20200AC:
                +
000721 93e0 018f+STS _glcd_state + ( 27 ) , R30
000723 93f0 0190+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000725 e0e1      	LDI  R30,LOW(1)
                +
000726 93e0 017a+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000728 93e0 017b+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
00072a 93e0 017c+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
00072c efef      	LDI  R30,LOW(255)
                +
00072d 93e0 017d+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00072f e0e1      	LDI  R30,LOW(1)
                +
000730 93e0 0184+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000732 e8e5     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000733 e0f1     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000734 93fa      	ST   -Y,R31
000735 93ea      	ST   -Y,R30
000736 efef      	LDI  R30,LOW(255)
000737 93ea      	ST   -Y,R30
000738 e0a8      	LDI  R26,LOW(8)
000739 e0b0      	LDI  R27,0
00073a 940e 0fea 	CALL _memset
00073c d002      	RCALL _glcd_clear
00073d e0e1      	LDI  R30,LOW(1)
00073e c2d0      	RJMP _0x212000B
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
00073f 940e 14eb 	CALL __SAVELOCR4
000741 e000      	LDI  R16,0
000742 e030      	LDI  R19,0
                +
000743 91e0 0175+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000745 30e0      	CPI  R30,0
000746 f009      	BREQ _0x2020015
000747 ef0f      	LDI  R16,LOW(255)
                 _0x2020015:
                 _0x2020016:
000748 3038      	CPI  R19,8
000749 f478      	BRSH _0x2020018
00074a e0e0      	LDI  R30,LOW(0)
00074b 93ea      	ST   -Y,R30
00074c 2fa3      	MOV  R26,R19
00074d 5f3f      	SUBI R19,-1
00074e df4d      	RCALL _ks0108_gotoxp_G101
00074f e010      	LDI  R17,LOW(0)
                 _0x2020019:
000750 2fa1      	MOV  R26,R17
000751 5f1f      	SUBI R17,-1
000752 38a0      	CPI  R26,LOW(0x80)
000753 f420      	BRSH _0x202001B
000754 2fa0      	MOV  R26,R16
000755 940e 1150 	CALL SUBOPT_0x17
000757 cff8      	RJMP _0x2020019
                 _0x202001B:
000758 cfef      	RJMP _0x2020016
                 _0x2020018:
000759 e0e0      	LDI  R30,LOW(0)
00075a 93ea      	ST   -Y,R30
00075b e0a0      	LDI  R26,LOW(0)
00075c df3f      	RCALL _ks0108_gotoxp_G101
00075d e0e0      	LDI  R30,LOW(0)
00075e 93ea      	ST   -Y,R30
00075f e0a0      	LDI  R26,LOW(0)
000760 d3f5      	RCALL _glcd_moveto
000761 940e 14f2 	CALL __LOADLOCR4
                 _0x2120010:
000763 9624      	ADIW R28,4
000764 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
000765 93aa      	ST   -Y,R26
000766 931a      	ST   -Y,R17
000767 930a      	ST   -Y,R16
000768 81ac      	LDD  R26,Y+4
000769 38a0      	CPI  R26,LOW(0x80)
00076a f418      	BRSH _0x202001D
00076b 81ab      	LDD  R26,Y+3
00076c 34a0      	CPI  R26,LOW(0x40)
00076d f008      	BRLO _0x202001C
                 _0x202001D:
00076e c016      	RJMP _0x212000F
                 _0x202001C:
00076f 81ec      	LDD  R30,Y+4
000770 93ea      	ST   -Y,R30
000771 81ac      	LDD  R26,Y+4
000772 df5f      	RCALL _ks0108_rdbyte_G101
000773 2f1e      	MOV  R17,R30
000774 df15      	RCALL _ks0108_setloc_G101
000775 81eb      	LDD  R30,Y+3
000776 70e7      	ANDI R30,LOW(0x7)
000777 e0a1      	LDI  R26,LOW(1)
000778 940e 142c 	CALL __LSLB12
00077a 2f0e      	MOV  R16,R30
00077b 81ea      	LDD  R30,Y+2
00077c 30e0      	CPI  R30,0
00077d f011      	BREQ _0x202001F
00077e 2b10      	OR   R17,R16
00077f c003      	RJMP _0x2020020
                 _0x202001F:
000780 2fe0      	MOV  R30,R16
000781 95e0      	COM  R30
000782 231e      	AND  R17,R30
                 _0x2020020:
000783 2fa1      	MOV  R26,R17
000784 df3b      	RCALL _ks0108_wrdata_G101
                 _0x212000F:
000785 8119      	LDD  R17,Y+1
000786 8108      	LDD  R16,Y+0
000787 9625      	ADIW R28,5
000788 9508      	RET
                 ; .FEND
                 _glcd_getpixel:
                 ; .FSTART _glcd_getpixel
000789 93aa      	ST   -Y,R26
00078a 81a9      	LDD  R26,Y+1
00078b 38a0      	CPI  R26,LOW(0x80)
00078c f418      	BRSH _0x2020022
00078d 81a8      	LD   R26,Y
00078e 34a0      	CPI  R26,LOW(0x40)
00078f f010      	BRLO _0x2020021
                 _0x2020022:
000790 e0e0      	LDI  R30,LOW(0)
000791 c254      	RJMP _0x212000C
                 _0x2020021:
000792 81e9      	LDD  R30,Y+1
000793 93ea      	ST   -Y,R30
000794 81a9      	LDD  R26,Y+1
000795 df3c      	RCALL _ks0108_rdbyte_G101
000796 2e1e      	MOV  R1,R30
000797 81e8      	LD   R30,Y
000798 70e7      	ANDI R30,LOW(0x7)
000799 e0a1      	LDI  R26,LOW(1)
00079a 940e 142c 	CALL __LSLB12
00079c 21e1      	AND  R30,R1
00079d f011      	BREQ _0x2020024
00079e e0e1      	LDI  R30,LOW(1)
00079f c001      	RJMP _0x2020025
                 _0x2020024:
0007a0 e0e0      	LDI  R30,LOW(0)
                 _0x2020025:
0007a1 c244      	RJMP _0x212000C
                 ; .FEND
                 _ks0108_wrmasked_G101:
                 ; .FSTART _ks0108_wrmasked_G101
0007a2 93aa      	ST   -Y,R26
0007a3 931a      	ST   -Y,R17
0007a4 81ed      	LDD  R30,Y+5
0007a5 93ea      	ST   -Y,R30
0007a6 81ad      	LDD  R26,Y+5
0007a7 df2a      	RCALL _ks0108_rdbyte_G101
0007a8 2f1e      	MOV  R17,R30
0007a9 dee0      	RCALL _ks0108_setloc_G101
0007aa 81e9      	LDD  R30,Y+1
0007ab 30e7      	CPI  R30,LOW(0x7)
0007ac f011      	BREQ _0x202002B
0007ad 30e8      	CPI  R30,LOW(0x8)
0007ae f439      	BRNE _0x202002C
                 _0x202002B:
0007af 81eb      	LDD  R30,Y+3
0007b0 93ea      	ST   -Y,R30
0007b1 81aa      	LDD  R26,Y+2
0007b2 940e 101e 	CALL _glcd_mappixcolor1bit
0007b4 83eb      	STD  Y+3,R30
0007b5 c008      	RJMP _0x202002D
                 _0x202002C:
0007b6 30e3      	CPI  R30,LOW(0x3)
0007b7 f421      	BRNE _0x202002F
0007b8 81eb      	LDD  R30,Y+3
0007b9 95e0      	COM  R30
0007ba 83eb      	STD  Y+3,R30
0007bb c002      	RJMP _0x2020030
                 _0x202002F:
0007bc 30e0      	CPI  R30,0
0007bd f421      	BRNE _0x2020031
                 _0x2020030:
                 _0x202002D:
0007be 81ea      	LDD  R30,Y+2
0007bf 95e0      	COM  R30
0007c0 231e      	AND  R17,R30
0007c1 c002      	RJMP _0x2020032
                 _0x2020031:
0007c2 30e2      	CPI  R30,LOW(0x2)
0007c3 f429      	BRNE _0x2020033
                 _0x2020032:
0007c4 81ea      	LDD  R30,Y+2
0007c5 81ab      	LDD  R26,Y+3
0007c6 23ea      	AND  R30,R26
0007c7 2b1e      	OR   R17,R30
0007c8 c00e      	RJMP _0x2020029
                 _0x2020033:
0007c9 30e1      	CPI  R30,LOW(0x1)
0007ca f429      	BRNE _0x2020034
0007cb 81ea      	LDD  R30,Y+2
0007cc 81ab      	LDD  R26,Y+3
0007cd 23ea      	AND  R30,R26
0007ce 271e      	EOR  R17,R30
0007cf c007      	RJMP _0x2020029
                 _0x2020034:
0007d0 30e4      	CPI  R30,LOW(0x4)
0007d1 f429      	BRNE _0x2020029
0007d2 81ea      	LDD  R30,Y+2
0007d3 95e0      	COM  R30
0007d4 81ab      	LDD  R26,Y+3
0007d5 2bea      	OR   R30,R26
0007d6 231e      	AND  R17,R30
                 _0x2020029:
0007d7 2fa1      	MOV  R26,R17
0007d8 940e 1150 	CALL SUBOPT_0x17
0007da 8118      	LDD  R17,Y+0
                 _0x212000E:
0007db 9626      	ADIW R28,6
0007dc 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0007dd 93aa      	ST   -Y,R26
0007de 9723      	SBIW R28,3
0007df 940e 14e9 	CALL __SAVELOCR6
0007e1 89a8      	LDD  R26,Y+16
0007e2 38a0      	CPI  R26,LOW(0x80)
0007e3 f448      	BRSH _0x2020037
0007e4 85af      	LDD  R26,Y+15
0007e5 34a0      	CPI  R26,LOW(0x40)
0007e6 f430      	BRSH _0x2020037
0007e7 85ae      	LDD  R26,Y+14
0007e8 30a0      	CPI  R26,LOW(0x0)
0007e9 f019      	BREQ _0x2020037
0007ea 85ad      	LDD  R26,Y+13
0007eb 30a0      	CPI  R26,LOW(0x0)
0007ec f409      	BRNE _0x2020036
                 _0x2020037:
0007ed c1c8      	RJMP _0x212000D
                 _0x2020036:
0007ee 85ee      	LDD  R30,Y+14
0007ef 87e8      	STD  Y+8,R30
0007f0 89a8      	LDD  R26,Y+16
0007f1 27bb      	CLR  R27
0007f2 85ee      	LDD  R30,Y+14
0007f3 e0f0      	LDI  R31,0
0007f4 0fae      	ADD  R26,R30
0007f5 1fbf      	ADC  R27,R31
0007f6 38a1      	CPI  R26,LOW(0x81)
0007f7 e0e0      	LDI  R30,HIGH(0x81)
0007f8 07be      	CPC  R27,R30
0007f9 f020      	BRLO _0x2020039
0007fa 89a8      	LDD  R26,Y+16
0007fb e8e0      	LDI  R30,LOW(128)
0007fc 1bea      	SUB  R30,R26
0007fd 87ee      	STD  Y+14,R30
                 _0x2020039:
0007fe 852d      	LDD  R18,Y+13
0007ff 85af      	LDD  R26,Y+15
000800 27bb      	CLR  R27
000801 85ed      	LDD  R30,Y+13
000802 e0f0      	LDI  R31,0
000803 0fae      	ADD  R26,R30
000804 1fbf      	ADC  R27,R31
000805 34a1      	CPI  R26,LOW(0x41)
000806 e0e0      	LDI  R30,HIGH(0x41)
000807 07be      	CPC  R27,R30
000808 f020      	BRLO _0x202003A
000809 85af      	LDD  R26,Y+15
00080a e4e0      	LDI  R30,LOW(64)
00080b 1bea      	SUB  R30,R26
00080c 87ed      	STD  Y+13,R30
                 _0x202003A:
00080d 85a9      	LDD  R26,Y+9
00080e 30a6      	CPI  R26,LOW(0x6)
00080f f009      	BREQ PC+2
000810 c05b      	RJMP _0x202003B
000811 85ec      	LDD  R30,Y+12
000812 30e1      	CPI  R30,LOW(0x1)
000813 f409      	BRNE _0x202003F
000814 c1a1      	RJMP _0x212000D
                 _0x202003F:
000815 30e3      	CPI  R30,LOW(0x3)
000816 f439      	BRNE _0x2020042
                +
000817 91e0 018f+LDS R30 , _glcd_state + ( 27 )
000819 91f0 0190+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
00081b 9730      	SBIW R30,0
00081c f409      	BRNE _0x2020041
00081d c198      	RJMP _0x212000D
                 _0x2020041:
                 _0x2020042:
00081e 8508      	LDD  R16,Y+8
00081f 85ed      	LDD  R30,Y+13
000820 95e6      	LSR  R30
000821 95e6      	LSR  R30
000822 95e6      	LSR  R30
000823 2f3e      	MOV  R19,R30
000824 2fe2      	MOV  R30,R18
000825 70e7      	ANDI R30,LOW(0x7)
000826 f419      	BRNE _0x2020044
000827 85ad      	LDD  R26,Y+13
000828 172a      	CP   R18,R26
000829 f0e9      	BREQ _0x2020043
                 _0x2020044:
00082a 2fa0      	MOV  R26,R16
00082b 27bb      	CLR  R27
00082c 2fe3      	MOV  R30,R19
00082d e0f0      	LDI  R31,0
00082e 940e 1450 	CALL __MULW12U
000830 85aa      	LDD  R26,Y+10
000831 85bb      	LDD  R27,Y+10+1
000832 940e 1154 	CALL SUBOPT_0x18
000834 9526      	LSR  R18
000835 9526      	LSR  R18
000836 9526      	LSR  R18
000837 2f53      	MOV  R21,R19
                 _0x2020046:
000838 935f      	PUSH R21
000839 5f5f      	SUBI R21,-1
00083a 2fe2      	MOV  R30,R18
00083b 91af      	POP  R26
00083c 17ea      	CP   R30,R26
00083d f048      	BRLO _0x2020048
00083e 2f10      	MOV  R17,R16
                 _0x2020049:
00083f 2fe1      	MOV  R30,R17
000840 5011      	SUBI R17,1
000841 30e0      	CPI  R30,0
000842 f019      	BREQ _0x202004B
000843 940e 1159 	CALL SUBOPT_0x19
000845 cff9      	RJMP _0x2020049
                 _0x202004B:
000846 cff1      	RJMP _0x2020046
                 _0x2020048:
                 _0x2020043:
000847 85ae      	LDD  R26,Y+14
000848 170a      	CP   R16,R26
000849 f111      	BREQ _0x202004C
00084a 85ee      	LDD  R30,Y+14
00084b 85aa      	LDD  R26,Y+10
00084c 85bb      	LDD  R27,Y+10+1
00084d e0f0      	LDI  R31,0
00084e 940e 1154 	CALL SUBOPT_0x18
000850 85ed      	LDD  R30,Y+13
000851 70e7      	ANDI R30,LOW(0x7)
000852 f009      	BREQ _0x202004D
000853 5f3f      	SUBI R19,-LOW(1)
                 _0x202004D:
000854 e020      	LDI  R18,LOW(0)
                 _0x202004E:
000855 932f      	PUSH R18
000856 5f2f      	SUBI R18,-1
000857 2fe3      	MOV  R30,R19
000858 91af      	POP  R26
000859 17ae      	CP   R26,R30
00085a f488      	BRSH _0x2020050
00085b 851e      	LDD  R17,Y+14
                 _0x2020051:
00085c 931f      	PUSH R17
00085d 5f1f      	SUBI R17,-1
00085e 2fe0      	MOV  R30,R16
00085f 91af      	POP  R26
000860 17ae      	CP   R26,R30
000861 f418      	BRSH _0x2020053
000862 940e 1159 	CALL SUBOPT_0x19
000864 cff7      	RJMP _0x2020051
                 _0x2020053:
000865 85ee      	LDD  R30,Y+14
000866 81ae      	LDD  R26,Y+6
000867 81bf      	LDD  R27,Y+6+1
000868 e0f0      	LDI  R31,0
000869 940e 1154 	CALL SUBOPT_0x18
00086b cfe9      	RJMP _0x202004E
                 _0x2020050:
                 _0x202004C:
                 _0x202003B:
00086c 85ef      	LDD  R30,Y+15
00086d 70e7      	ANDI R30,LOW(0x7)
00086e 2f3e      	MOV  R19,R30
                 _0x2020054:
00086f 85ed      	LDD  R30,Y+13
000870 30e0      	CPI  R30,0
000871 f409      	BRNE PC+2
000872 c143      	RJMP _0x2020056
000873 85ea      	LDD  R30,Y+10
000874 85fb      	LDD  R31,Y+10+1
000875 83ee      	STD  Y+6,R30
000876 83ff      	STD  Y+6+1,R31
000877 e010      	LDI  R17,LOW(0)
000878 8908      	LDD  R16,Y+16
000879 3030      	CPI  R19,0
00087a f009      	BREQ PC+2
00087b c065      	RJMP _0x2020057
00087c 85ad      	LDD  R26,Y+13
00087d 30a8      	CPI  R26,LOW(0x8)
00087e f408      	BRSH PC+2
00087f c05c      	RJMP _0x2020058
000880 85e9      	LDD  R30,Y+9
000881 30e0      	CPI  R30,0
000882 f011      	BREQ _0x202005D
000883 30e3      	CPI  R30,LOW(0x3)
000884 f409      	BRNE _0x202005E
                 _0x202005D:
000885 c002      	RJMP _0x202005F
                 _0x202005E:
000886 30e7      	CPI  R30,LOW(0x7)
000887 f409      	BRNE _0x2020060
                 _0x202005F:
000888 c002      	RJMP _0x2020061
                 _0x2020060:
000889 30e8      	CPI  R30,LOW(0x8)
00088a f409      	BRNE _0x2020062
                 _0x2020061:
00088b c002      	RJMP _0x2020063
                 _0x2020062:
00088c 30e6      	CPI  R30,LOW(0x6)
00088d f409      	BRNE _0x2020064
                 _0x2020063:
00088e c002      	RJMP _0x2020065
                 _0x2020064:
00088f 30e9      	CPI  R30,LOW(0x9)
000890 f409      	BRNE _0x2020066
                 _0x2020065:
000891 c002      	RJMP _0x2020067
                 _0x2020066:
000892 30ea      	CPI  R30,LOW(0xA)
000893 f421      	BRNE _0x202005B
                 _0x2020067:
000894 930a      	ST   -Y,R16
000895 89e8      	LDD  R30,Y+16
000896 940e 114a 	CALL SUBOPT_0x16
                 _0x202005B:
                 _0x2020069:
000898 931f      	PUSH R17
000899 5f1f      	SUBI R17,-1
00089a 85ee      	LDD  R30,Y+14
00089b 91af      	POP  R26
00089c 17ae      	CP   R26,R30
00089d f5b8      	BRSH _0x202006B
00089e 85a9      	LDD  R26,Y+9
00089f 30a6      	CPI  R26,LOW(0x6)
0008a0 f461      	BRNE _0x202006C
0008a1 de27      	RCALL _ks0108_rddata_G101
0008a2 dde7      	RCALL _ks0108_setloc_G101
0008a3 940e 1166 	CALL SUBOPT_0x1A
0008a5 93fa      	ST   -Y,R31
0008a6 93ea      	ST   -Y,R30
0008a7 de21      	RCALL _ks0108_rddata_G101
0008a8 2fae      	MOV  R26,R30
0008a9 940e 1065 	CALL _glcd_writemem
0008ab ddff      	RCALL _ks0108_nextx_G101
0008ac c027      	RJMP _0x202006D
                 _0x202006C:
0008ad 85e9      	LDD  R30,Y+9
0008ae 30e9      	CPI  R30,LOW(0x9)
0008af f411      	BRNE _0x2020071
0008b0 e050      	LDI  R21,LOW(0)
0008b1 c00e      	RJMP _0x2020072
                 _0x2020071:
0008b2 30ea      	CPI  R30,LOW(0xA)
0008b3 f411      	BRNE _0x2020070
0008b4 ef5f      	LDI  R21,LOW(255)
0008b5 c00a      	RJMP _0x2020072
                 _0x2020070:
0008b6 940e 1166 	CALL SUBOPT_0x1A
0008b8 940e 116f 	CALL SUBOPT_0x1B
0008ba 2f5e      	MOV  R21,R30
0008bb 85e9      	LDD  R30,Y+9
0008bc 30e7      	CPI  R30,LOW(0x7)
0008bd f011      	BREQ _0x2020079
0008be 30e8      	CPI  R30,LOW(0x8)
0008bf f421      	BRNE _0x202007A
                 _0x2020079:
                 _0x2020072:
0008c0 940e 1175 	CALL SUBOPT_0x1C
0008c2 2f5e      	MOV  R21,R30
0008c3 c006      	RJMP _0x202007B
                 _0x202007A:
0008c4 30e3      	CPI  R30,LOW(0x3)
0008c5 f411      	BRNE _0x202007D
0008c6 9550      	COM  R21
0008c7 c002      	RJMP _0x202007E
                 _0x202007D:
0008c8 30e0      	CPI  R30,0
0008c9 f421      	BRNE _0x2020080
                 _0x202007E:
                 _0x202007B:
0008ca 2fa5      	MOV  R26,R21
0008cb 940e 1150 	CALL SUBOPT_0x17
0008cd c006      	RJMP _0x2020077
                 _0x2020080:
0008ce 940e 1179 	CALL SUBOPT_0x1D
0008d0 efef      	LDI  R30,LOW(255)
0008d1 93ea      	ST   -Y,R30
0008d2 85ad      	LDD  R26,Y+13
0008d3 dece      	RCALL _ks0108_wrmasked_G101
                 _0x2020077:
                 _0x202006D:
0008d4 cfc3      	RJMP _0x2020069
                 _0x202006B:
0008d5 85ef      	LDD  R30,Y+15
0008d6 5fe8      	SUBI R30,-LOW(8)
0008d7 87ef      	STD  Y+15,R30
0008d8 85ed      	LDD  R30,Y+13
0008d9 50e8      	SUBI R30,LOW(8)
0008da 87ed      	STD  Y+13,R30
0008db c0d1      	RJMP _0x2020081
                 _0x2020058:
0008dc 855d      	LDD  R21,Y+13
0008dd e020      	LDI  R18,LOW(0)
0008de e0e0      	LDI  R30,LOW(0)
0008df 87ed      	STD  Y+13,R30
0008e0 c07a      	RJMP _0x2020082
                 _0x2020057:
0008e1 2fe3      	MOV  R30,R19
0008e2 85ad      	LDD  R26,Y+13
0008e3 0fae      	ADD  R26,R30
0008e4 30a9      	CPI  R26,LOW(0x9)
0008e5 f420      	BRSH _0x2020083
0008e6 852d      	LDD  R18,Y+13
0008e7 e0e0      	LDI  R30,LOW(0)
0008e8 87ed      	STD  Y+13,R30
0008e9 c003      	RJMP _0x2020084
                 _0x2020083:
0008ea e0e8      	LDI  R30,LOW(8)
0008eb 1be3      	SUB  R30,R19
0008ec 2f2e      	MOV  R18,R30
                 _0x2020084:
0008ed 933a      	ST   -Y,R19
0008ee 2fa2      	MOV  R26,R18
0008ef 940e 1013 	CALL _glcd_getmask
0008f1 2f4e      	MOV  R20,R30
0008f2 85e9      	LDD  R30,Y+9
0008f3 30e6      	CPI  R30,LOW(0x6)
0008f4 f4f1      	BRNE _0x2020088
                 _0x2020089:
0008f5 931f      	PUSH R17
0008f6 5f1f      	SUBI R17,-1
0008f7 85ee      	LDD  R30,Y+14
0008f8 91af      	POP  R26
0008f9 17ae      	CP   R26,R30
0008fa f4b8      	BRSH _0x202008B
0008fb 940e 117f 	CALL SUBOPT_0x1E
0008fd 2fae      	MOV  R26,R30
0008fe 2fe3      	MOV  R30,R19
0008ff 940e 1434 	CALL __LSRB12
000901 940e 1186 	CALL SUBOPT_0x1F
000903 2fe3      	MOV  R30,R19
000904 2fa4      	MOV  R26,R20
000905 940e 1434 	CALL __LSRB12
000907 95e0      	COM  R30
000908 21e1      	AND  R30,R1
000909 2b5e      	OR   R21,R30
00090a 940e 1166 	CALL SUBOPT_0x1A
00090c 93fa      	ST   -Y,R31
00090d 93ea      	ST   -Y,R30
00090e 2fa5      	MOV  R26,R21
00090f 940e 1065 	CALL _glcd_writemem
000911 cfe3      	RJMP _0x2020089
                 _0x202008B:
000912 c02c      	RJMP _0x2020087
                 _0x2020088:
000913 30e9      	CPI  R30,LOW(0x9)
000914 f411      	BRNE _0x202008C
000915 e050      	LDI  R21,LOW(0)
000916 c003      	RJMP _0x202008D
                 _0x202008C:
000917 30ea      	CPI  R30,LOW(0xA)
000918 f4a9      	BRNE _0x2020093
000919 ef5f      	LDI  R21,LOW(255)
                 _0x202008D:
00091a 940e 1175 	CALL SUBOPT_0x1C
00091c 2fae      	MOV  R26,R30
00091d 2fe3      	MOV  R30,R19
00091e 940e 142c 	CALL __LSLB12
000920 2f5e      	MOV  R21,R30
                 _0x2020090:
000921 931f      	PUSH R17
000922 5f1f      	SUBI R17,-1
000923 85ee      	LDD  R30,Y+14
000924 91af      	POP  R26
000925 17ae      	CP   R26,R30
000926 f430      	BRSH _0x2020092
000927 940e 1179 	CALL SUBOPT_0x1D
000929 934a      	ST   -Y,R20
00092a e0a0      	LDI  R26,LOW(0)
00092b de76      	RCALL _ks0108_wrmasked_G101
00092c cff4      	RJMP _0x2020090
                 _0x2020092:
00092d c011      	RJMP _0x2020087
                 _0x2020093:
                 _0x2020094:
00092e 931f      	PUSH R17
00092f 5f1f      	SUBI R17,-1
000930 85ee      	LDD  R30,Y+14
000931 91af      	POP  R26
000932 17ae      	CP   R26,R30
000933 f458      	BRSH _0x2020096
000934 940e 1191 	CALL SUBOPT_0x20
000936 2fae      	MOV  R26,R30
000937 2fe3      	MOV  R30,R19
000938 940e 142c 	CALL __LSLB12
00093a 93ea      	ST   -Y,R30
00093b 934a      	ST   -Y,R20
00093c 85ad      	LDD  R26,Y+13
00093d de64      	RCALL _ks0108_wrmasked_G101
00093e cfef      	RJMP _0x2020094
                 _0x2020096:
                 _0x2020087:
00093f 85ed      	LDD  R30,Y+13
000940 30e0      	CPI  R30,0
000941 f409      	BRNE _0x2020097
000942 c073      	RJMP _0x2020056
                 _0x2020097:
000943 85ad      	LDD  R26,Y+13
000944 30a8      	CPI  R26,LOW(0x8)
000945 f428      	BRSH _0x2020098
000946 85ed      	LDD  R30,Y+13
000947 1be2      	SUB  R30,R18
000948 2f5e      	MOV  R21,R30
000949 e0e0      	LDI  R30,LOW(0)
00094a c003      	RJMP _0x20200AD
                 _0x2020098:
00094b 2f53      	MOV  R21,R19
00094c 85ed      	LDD  R30,Y+13
00094d 50e8      	SUBI R30,LOW(8)
                 _0x20200AD:
00094e 87ed      	STD  Y+13,R30
00094f e010      	LDI  R17,LOW(0)
000950 85ef      	LDD  R30,Y+15
000951 5fe8      	SUBI R30,-LOW(8)
000952 87ef      	STD  Y+15,R30
000953 e0e8      	LDI  R30,LOW(8)
000954 1be3      	SUB  R30,R19
000955 2f2e      	MOV  R18,R30
000956 8908      	LDD  R16,Y+16
000957 85ea      	LDD  R30,Y+10
000958 85fb      	LDD  R31,Y+10+1
000959 83ee      	STD  Y+6,R30
00095a 83ff      	STD  Y+6+1,R31
                 _0x2020082:
00095b 2fe5      	MOV  R30,R21
00095c e0f0      	LDI  R31,0
00095d 57ec      	SUBI R30,LOW(-__glcd_mask*2)
00095e 4ff9      	SBCI R31,HIGH(-__glcd_mask*2)
00095f 9144      	LPM  R20,Z
000960 85e9      	LDD  R30,Y+9
000961 30e6      	CPI  R30,LOW(0x6)
000962 f4f1      	BRNE _0x202009D
                 _0x202009E:
000963 931f      	PUSH R17
000964 5f1f      	SUBI R17,-1
000965 85ee      	LDD  R30,Y+14
000966 91af      	POP  R26
000967 17ae      	CP   R26,R30
000968 f4b8      	BRSH _0x20200A0
000969 940e 117f 	CALL SUBOPT_0x1E
00096b 2fae      	MOV  R26,R30
00096c 2fe2      	MOV  R30,R18
00096d 940e 142c 	CALL __LSLB12
00096f 940e 1186 	CALL SUBOPT_0x1F
000971 2fe2      	MOV  R30,R18
000972 2fa4      	MOV  R26,R20
000973 940e 142c 	CALL __LSLB12
000975 95e0      	COM  R30
000976 21e1      	AND  R30,R1
000977 2b5e      	OR   R21,R30
000978 940e 1166 	CALL SUBOPT_0x1A
00097a 93fa      	ST   -Y,R31
00097b 93ea      	ST   -Y,R30
00097c 2fa5      	MOV  R26,R21
00097d 940e 1065 	CALL _glcd_writemem
00097f cfe3      	RJMP _0x202009E
                 _0x20200A0:
000980 c02c      	RJMP _0x202009C
                 _0x202009D:
000981 30e9      	CPI  R30,LOW(0x9)
000982 f411      	BRNE _0x20200A1
000983 e050      	LDI  R21,LOW(0)
000984 c003      	RJMP _0x20200A2
                 _0x20200A1:
000985 30ea      	CPI  R30,LOW(0xA)
000986 f4a9      	BRNE _0x20200A8
000987 ef5f      	LDI  R21,LOW(255)
                 _0x20200A2:
000988 940e 1175 	CALL SUBOPT_0x1C
00098a 2fae      	MOV  R26,R30
00098b 2fe2      	MOV  R30,R18
00098c 940e 1434 	CALL __LSRB12
00098e 2f5e      	MOV  R21,R30
                 _0x20200A5:
00098f 931f      	PUSH R17
000990 5f1f      	SUBI R17,-1
000991 85ee      	LDD  R30,Y+14
000992 91af      	POP  R26
000993 17ae      	CP   R26,R30
000994 f430      	BRSH _0x20200A7
000995 940e 1179 	CALL SUBOPT_0x1D
000997 934a      	ST   -Y,R20
000998 e0a0      	LDI  R26,LOW(0)
000999 de08      	RCALL _ks0108_wrmasked_G101
00099a cff4      	RJMP _0x20200A5
                 _0x20200A7:
00099b c011      	RJMP _0x202009C
                 _0x20200A8:
                 _0x20200A9:
00099c 931f      	PUSH R17
00099d 5f1f      	SUBI R17,-1
00099e 85ee      	LDD  R30,Y+14
00099f 91af      	POP  R26
0009a0 17ae      	CP   R26,R30
0009a1 f458      	BRSH _0x20200AB
0009a2 940e 1191 	CALL SUBOPT_0x20
0009a4 2fae      	MOV  R26,R30
0009a5 2fe2      	MOV  R30,R18
0009a6 940e 1434 	CALL __LSRB12
0009a8 93ea      	ST   -Y,R30
0009a9 934a      	ST   -Y,R20
0009aa 85ad      	LDD  R26,Y+13
0009ab ddf6      	RCALL _ks0108_wrmasked_G101
0009ac cfef      	RJMP _0x20200A9
                 _0x20200AB:
                 _0x202009C:
                 _0x2020081:
0009ad 85e8      	LDD  R30,Y+8
0009ae 85aa      	LDD  R26,Y+10
0009af 85bb      	LDD  R27,Y+10+1
0009b0 e0f0      	LDI  R31,0
0009b1 0fea      	ADD  R30,R26
0009b2 1ffb      	ADC  R31,R27
0009b3 87ea      	STD  Y+10,R30
0009b4 87fb      	STD  Y+10+1,R31
0009b5 ceb9      	RJMP _0x2020054
                 _0x2020056:
                 _0x212000D:
0009b6 940e 14f0 	CALL __LOADLOCR6
0009b8 9661      	ADIW R28,17
0009b9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
0009ba 940e 119e 	CALL SUBOPT_0x21
0009bc f01c      	BRLT _0x2040003
0009bd e0e0      	LDI  R30,LOW(0)
0009be e0f0      	LDI  R31,HIGH(0)
0009bf c026      	RJMP _0x212000C
                 _0x2040003:
0009c0 81a8      	LD   R26,Y
0009c1 81b9      	LDD  R27,Y+1
0009c2 38a0      	CPI  R26,LOW(0x80)
0009c3 e0e0      	LDI  R30,HIGH(0x80)
0009c4 07be      	CPC  R27,R30
0009c5 f01c      	BRLT _0x2040004
0009c6 e7ef      	LDI  R30,LOW(127)
0009c7 e0f0      	LDI  R31,HIGH(127)
0009c8 c01d      	RJMP _0x212000C
                 _0x2040004:
0009c9 81e8      	LD   R30,Y
0009ca 81f9      	LDD  R31,Y+1
0009cb c01a      	RJMP _0x212000C
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0009cc 940e 119e 	CALL SUBOPT_0x21
0009ce f01c      	BRLT _0x2040005
0009cf e0e0      	LDI  R30,LOW(0)
0009d0 e0f0      	LDI  R31,HIGH(0)
0009d1 c014      	RJMP _0x212000C
                 _0x2040005:
0009d2 81a8      	LD   R26,Y
0009d3 81b9      	LDD  R27,Y+1
0009d4 34a0      	CPI  R26,LOW(0x40)
0009d5 e0e0      	LDI  R30,HIGH(0x40)
0009d6 07be      	CPC  R27,R30
0009d7 f01c      	BRLT _0x2040006
0009d8 e3ef      	LDI  R30,LOW(63)
0009d9 e0f0      	LDI  R31,HIGH(63)
0009da c00b      	RJMP _0x212000C
                 _0x2040006:
0009db 81e8      	LD   R30,Y
0009dc 81f9      	LDD  R31,Y+1
0009dd c008      	RJMP _0x212000C
                 ; .FEND
                 _glcd_setpixel:
                 ; .FSTART _glcd_setpixel
0009de 93aa      	ST   -Y,R26
0009df 81e9      	LDD  R30,Y+1
0009e0 93ea      	ST   -Y,R30
0009e1 81e9      	LDD  R30,Y+1
0009e2 93ea      	ST   -Y,R30
0009e3 91a0 0174 	LDS  R26,_glcd_state
0009e5 dd7f      	RCALL _glcd_putpixel
                 _0x212000C:
0009e6 9622      	ADIW R28,2
0009e7 9508      	RET
                 ; .FEND
                 _glcd_imagesize:
                 ; .FSTART _glcd_imagesize
0009e8 93aa      	ST   -Y,R26
0009e9 931a      	ST   -Y,R17
0009ea 81aa      	LDD  R26,Y+2
0009eb 38a0      	CPI  R26,LOW(0x80)
0009ec f418      	BRSH _0x2040008
0009ed 81a9      	LDD  R26,Y+1
0009ee 34a0      	CPI  R26,LOW(0x40)
0009ef f028      	BRLO _0x2040007
                 _0x2040008:
                +
0009f0 e0e0     +LDI R30 , LOW ( 0x0 )
0009f1 e0f0     +LDI R31 , HIGH ( 0x0 )
0009f2 e060     +LDI R22 , BYTE3 ( 0x0 )
0009f3 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0009f4 c01a      	RJMP _0x212000B
                 _0x2040007:
0009f5 81e9      	LDD  R30,Y+1
0009f6 70e7      	ANDI R30,LOW(0x7)
0009f7 2f1e      	MOV  R17,R30
0009f8 81e9      	LDD  R30,Y+1
0009f9 95e6      	LSR  R30
0009fa 95e6      	LSR  R30
0009fb 95e6      	LSR  R30
0009fc 83e9      	STD  Y+1,R30
0009fd 3010      	CPI  R17,0
0009fe f011      	BREQ _0x204000A
0009ff 5fef      	SUBI R30,-LOW(1)
000a00 83e9      	STD  Y+1,R30
                 _0x204000A:
000a01 81aa      	LDD  R26,Y+2
000a02 27bb      	CLR  R27
000a03 2788      	CLR  R24
000a04 2799      	CLR  R25
000a05 81e9      	LDD  R30,Y+1
000a06 27ff      	CLR  R31
000a07 2766      	CLR  R22
000a08 2777      	CLR  R23
000a09 940e 1458 	CALL __MULD12U
                +
000a0b 5fec     +SUBI R30 , LOW ( - 4 )
000a0c 4fff     +SBCI R31 , HIGH ( - 4 )
000a0d 4f6f     +SBCI R22 , BYTE3 ( - 4 )
000a0e 4f7f     +SBCI R23 , BYTE4 ( - 4 )
                 	__ADDD1N 4
                 _0x212000B:
000a0f 8118      	LDD  R17,Y+0
000a10 9623      	ADIW R28,3
000a11 9508      	RET
                 ; .FEND
                 _glcd_getcharw_G102:
                 ; .FSTART _glcd_getcharw_G102
000a12 93ba      	ST   -Y,R27
000a13 93aa      	ST   -Y,R26
000a14 9723      	SBIW R28,3
000a15 940e 11a5 	CALL SUBOPT_0x22
000a17 018f      	MOVW R16,R30
000a18 2e00      	MOV  R0,R16
000a19 2a01      	OR   R0,R17
000a1a f419      	BRNE _0x204000B
000a1b e0e0      	LDI  R30,LOW(0)
000a1c e0f0      	LDI  R31,HIGH(0)
000a1d c05f      	RJMP _0x212000A
                 _0x204000B:
000a1e 940e 11ac 	CALL SUBOPT_0x23
000a20 820f      	STD  Y+7,R0
000a21 940e 11ac 	CALL SUBOPT_0x23
000a23 820e      	STD  Y+6,R0
000a24 940e 11ac 	CALL SUBOPT_0x23
000a26 8608      	STD  Y+8,R0
000a27 85eb      	LDD  R30,Y+11
000a28 85a8      	LDD  R26,Y+8
000a29 17ea      	CP   R30,R26
000a2a f418      	BRSH _0x204000C
000a2b e0e0      	LDI  R30,LOW(0)
000a2c e0f0      	LDI  R31,HIGH(0)
000a2d c04f      	RJMP _0x212000A
                 _0x204000C:
000a2e 01f8      	MOVW R30,R16
                +
000a2f 5f0f     +SUBI R16 , LOW ( - 1 )
000a30 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a31 9154      	LPM  R21,Z
000a32 85a8      	LDD  R26,Y+8
000a33 27bb      	CLR  R27
000a34 27ee      	CLR  R30
000a35 0fa5      	ADD  R26,R21
000a36 1fbe      	ADC  R27,R30
000a37 85eb      	LDD  R30,Y+11
000a38 e0f0      	LDI  R31,0
000a39 17ea      	CP   R30,R26
000a3a 07fb      	CPC  R31,R27
000a3b f018      	BRLO _0x204000D
000a3c e0e0      	LDI  R30,LOW(0)
000a3d e0f0      	LDI  R31,HIGH(0)
000a3e c03e      	RJMP _0x212000A
                 _0x204000D:
000a3f 81ee      	LDD  R30,Y+6
000a40 95e6      	LSR  R30
000a41 95e6      	LSR  R30
000a42 95e6      	LSR  R30
000a43 2f4e      	MOV  R20,R30
000a44 81ee      	LDD  R30,Y+6
000a45 70e7      	ANDI R30,LOW(0x7)
000a46 f009      	BREQ _0x204000E
000a47 5f4f      	SUBI R20,-LOW(1)
                 _0x204000E:
000a48 81ef      	LDD  R30,Y+7
000a49 30e0      	CPI  R30,0
000a4a f0a1      	BREQ _0x204000F
000a4b 85a9      	LDD  R26,Y+9
000a4c 85ba      	LDD  R27,Y+9+1
000a4d 93ec      	ST   X,R30
000a4e 85a8      	LDD  R26,Y+8
000a4f 85eb      	LDD  R30,Y+11
000a50 1bea      	SUB  R30,R26
000a51 e0f0      	LDI  R31,0
000a52 01df      	MOVW R26,R30
000a53 81ef      	LDD  R30,Y+7
000a54 e0f0      	LDI  R31,0
000a55 940e 1450 	CALL __MULW12U
000a57 01df      	MOVW R26,R30
000a58 2fe4      	MOV  R30,R20
000a59 e0f0      	LDI  R31,0
000a5a 940e 1450 	CALL __MULW12U
000a5c 0fe0      	ADD  R30,R16
000a5d 1ff1      	ADC  R31,R17
000a5e c01e      	RJMP _0x212000A
                 _0x204000F:
000a5f 0198      	MOVW R18,R16
000a60 2fe5      	MOV  R30,R21
000a61 e0f0      	LDI  R31,0
                +
000a62 0f0e     +ADD R16 , R30
000a63 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2040010:
000a64 85a8      	LDD  R26,Y+8
000a65 5faf      	SUBI R26,-LOW(1)
000a66 87a8      	STD  Y+8,R26
000a67 50a1      	SUBI R26,LOW(1)
000a68 85eb      	LDD  R30,Y+11
000a69 17ae      	CP   R26,R30
000a6a f460      	BRSH _0x2040012
000a6b 01f9      	MOVW R30,R18
                +
000a6c 5f2f     +SUBI R18 , LOW ( - 1 )
000a6d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000a6e 91a4      	LPM  R26,Z
000a6f e0b0      	LDI  R27,0
000a70 2fe4      	MOV  R30,R20
000a71 e0f0      	LDI  R31,0
000a72 940e 1450 	CALL __MULW12U
                +
000a74 0f0e     +ADD R16 , R30
000a75 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000a76 cfed      	RJMP _0x2040010
                 _0x2040012:
000a77 01f9      	MOVW R30,R18
000a78 91e4      	LPM  R30,Z
000a79 85a9      	LDD  R26,Y+9
000a7a 85ba      	LDD  R27,Y+9+1
000a7b 93ec      	ST   X,R30
000a7c 01f8      	MOVW R30,R16
                 _0x212000A:
000a7d 940e 14f0 	CALL __LOADLOCR6
000a7f 962c      	ADIW R28,12
000a80 9508      	RET
                 ; .FEND
                 _glcd_new_line_G102:
                 ; .FSTART _glcd_new_line_G102
000a81 e0e0      	LDI  R30,LOW(0)
                +
000a82 93e0 0176+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000a84 91a0 0177+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000a86 27bb      	CLR  R27
000a87 940e 11b1 	CALL SUBOPT_0x24
000a89 e0f0      	LDI  R31,0
000a8a 0fae      	ADD  R26,R30
000a8b 1fbf      	ADC  R27,R31
                +
000a8c 91e0 017b+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000a8e e0f0      	LDI  R31,0
000a8f 0fae      	ADD  R26,R30
000a90 1fbf      	ADC  R27,R31
000a91 df3a      	RCALL _glcd_clipy
                +
000a92 93e0 0177+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000a94 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000a95 93aa      	ST   -Y,R26
000a96 9721      	SBIW R28,1
000a97 940e 11a5 	CALL SUBOPT_0x22
000a99 9730      	SBIW R30,0
000a9a f409      	BRNE PC+2
000a9b c057      	RJMP _0x204001F
000a9c 81af      	LDD  R26,Y+7
000a9d 30aa      	CPI  R26,LOW(0xA)
000a9e f409      	BRNE _0x2040020
000a9f c04f      	RJMP _0x2040021
                 _0x2040020:
000aa0 81ef      	LDD  R30,Y+7
000aa1 93ea      	ST   -Y,R30
000aa2 01de      	MOVW R26,R28
000aa3 9617      	ADIW R26,7
000aa4 df6d      	RCALL _glcd_getcharw_G102
000aa5 01af      	MOVW R20,R30
000aa6 9730      	SBIW R30,0
000aa7 f419      	BRNE _0x2040022
000aa8 940e 14f0 	CALL __LOADLOCR6
000aaa c334      	RJMP _0x2120006
                 _0x2040022:
                +
000aab 91e0 017a+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000aad 81ae      	LDD  R26,Y+6
000aae 0fea      	ADD  R30,R26
000aaf 2f3e      	MOV  R19,R30
                +
000ab0 91a0 0176+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000ab2 27bb      	CLR  R27
000ab3 940e 11b8 	CALL SUBOPT_0x25
                +
000ab5 3801     +CPI R16 , LOW ( 129 )
000ab6 e0e0     +LDI R30 , HIGH ( 129 )
000ab7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,129
000ab8 f018      	BRLO _0x2040023
000ab9 2f03      	MOV  R16,R19
000aba 2711      	CLR  R17
000abb dfc5      	RCALL _glcd_new_line_G102
                 _0x2040023:
                +
000abc 91e0 0176+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000abe 93ea      	ST   -Y,R30
                +
000abf 91e0 0177+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000ac1 93ea      	ST   -Y,R30
000ac2 85e8      	LDD  R30,Y+8
000ac3 93ea      	ST   -Y,R30
000ac4 940e 11b1 	CALL SUBOPT_0x24
000ac6 93ea      	ST   -Y,R30
000ac7 e0e1      	LDI  R30,LOW(1)
000ac8 93ea      	ST   -Y,R30
000ac9 935a      	ST   -Y,R21
000aca 934a      	ST   -Y,R20
000acb e0a7      	LDI  R26,LOW(7)
000acc dd10      	RCALL _glcd_block
                +
000acd 91e0 0176+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000acf 81ae      	LDD  R26,Y+6
000ad0 0fea      	ADD  R30,R26
000ad1 93ea      	ST   -Y,R30
                +
000ad2 91e0 0177+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000ad4 93ea      	ST   -Y,R30
                +
000ad5 91e0 017a+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000ad7 93ea      	ST   -Y,R30
000ad8 940e 11b1 	CALL SUBOPT_0x24
000ada 940e 11bd 	CALL SUBOPT_0x26
                +
000adc 91e0 0176+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000ade 93ea      	ST   -Y,R30
                +
000adf 91a0 0177+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000ae1 940e 11b1 	CALL SUBOPT_0x24
000ae3 0fea      	ADD  R30,R26
000ae4 93ea      	ST   -Y,R30
000ae5 933a      	ST   -Y,R19
                +
000ae6 91e0 017b+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000ae8 940e 11bd 	CALL SUBOPT_0x26
000aea e8e0      	LDI  R30,LOW(128)
000aeb e0f0      	LDI  R31,HIGH(128)
000aec 17e0      	CP   R30,R16
000aed 07f1      	CPC  R31,R17
000aee f421      	BRNE _0x2040024
                 _0x2040021:
000aef df91      	RCALL _glcd_new_line_G102
000af0 940e 14f0 	CALL __LOADLOCR6
000af2 c2ec      	RJMP _0x2120006
                 _0x2040024:
                 _0x204001F:
                +
000af3 9300 0176+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
000af5 940e 14f0 	CALL __LOADLOCR6
000af7 c2e7      	RJMP _0x2120006
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000af8 93ba      	ST   -Y,R27
000af9 93aa      	ST   -Y,R26
000afa 931a      	ST   -Y,R17
000afb 81ec      	LDD  R30,Y+4
000afc 93ea      	ST   -Y,R30
000afd 81ac      	LDD  R26,Y+4
000afe d057      	RCALL _glcd_moveto
                 _0x2040025:
000aff 81a9      	LDD  R26,Y+1
000b00 81ba      	LDD  R27,Y+1+1
000b01 91ed      	LD   R30,X+
000b02 83a9      	STD  Y+1,R26
000b03 83ba      	STD  Y+1+1,R27
000b04 2f1e      	MOV  R17,R30
000b05 30e0      	CPI  R30,0
000b06 f019      	BREQ _0x2040027
000b07 2fa1      	MOV  R26,R17
000b08 df8c      	RCALL _glcd_putchar
000b09 cff5      	RJMP _0x2040025
                 _0x2040027:
000b0a 8118      	LDD  R17,Y+0
000b0b 940c 0ff8 	JMP  _0x2120003
                 ; .FEND
                 _glcd_putimagef:
                 ; .FSTART _glcd_putimagef
000b0d 93aa      	ST   -Y,R26
000b0e 940e 14eb 	CALL __SAVELOCR4
000b10 81ac      	LDD  R26,Y+4
000b11 30a5      	CPI  R26,LOW(0x5)
000b12 f500      	BRSH _0x2040038
000b13 81ed      	LDD  R30,Y+5
000b14 81fe      	LDD  R31,Y+5+1
000b15 9105      	LPM  R16,Z+
000b16 940e 11c7 	CALL SUBOPT_0x27
000b18 9115      	LPM  R17,Z+
000b19 940e 11c7 	CALL SUBOPT_0x27
000b1b 9125      	LPM  R18,Z+
000b1c 940e 11c7 	CALL SUBOPT_0x27
000b1e 9135      	LPM  R19,Z+
000b1f 83ed      	STD  Y+5,R30
000b20 83fe      	STD  Y+5+1,R31
000b21 85e8      	LDD  R30,Y+8
000b22 93ea      	ST   -Y,R30
000b23 85e8      	LDD  R30,Y+8
000b24 93ea      	ST   -Y,R30
000b25 930a      	ST   -Y,R16
000b26 932a      	ST   -Y,R18
000b27 e0e1      	LDI  R30,LOW(1)
000b28 93ea      	ST   -Y,R30
000b29 85ea      	LDD  R30,Y+10
000b2a 85fb      	LDD  R31,Y+10+1
000b2b 93fa      	ST   -Y,R31
000b2c 93ea      	ST   -Y,R30
000b2d 85ab      	LDD  R26,Y+11
000b2e dcae      	RCALL _glcd_block
000b2f 930a      	ST   -Y,R16
000b30 2fa2      	MOV  R26,R18
000b31 deb6      	RCALL _glcd_imagesize
000b32 c004      	RJMP _0x2120008
                 _0x2040038:
                +
000b33 e0e0     +LDI R30 , LOW ( 0x0 )
000b34 e0f0     +LDI R31 , HIGH ( 0x0 )
000b35 e060     +LDI R22 , BYTE3 ( 0x0 )
000b36 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                 _0x2120008:
000b37 940e 14f2 	CALL __LOADLOCR4
                 _0x2120009:
000b39 9629      	ADIW R28,9
000b3a 9508      	RET
                 ; .FEND
                 _glcd_putpixelm_G102:
                 ; .FSTART _glcd_putpixelm_G102
000b3b 93aa      	ST   -Y,R26
000b3c 81ea      	LDD  R30,Y+2
000b3d 93ea      	ST   -Y,R30
000b3e 81ea      	LDD  R30,Y+2
000b3f 93ea      	ST   -Y,R30
                +
000b40 91e0 017d+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000b42 81aa      	LDD  R26,Y+2
000b43 23ea      	AND  R30,R26
000b44 f019      	BREQ _0x204003E
000b45 91e0 0174 	LDS  R30,_glcd_state
000b47 c002      	RJMP _0x204003F
                 _0x204003E:
                +
000b48 91e0 0175+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x204003F:
000b4a 2fae      	MOV  R26,R30
000b4b dc19      	RCALL _glcd_putpixel
000b4c 81e8      	LD   R30,Y
000b4d 0fee      	LSL  R30
000b4e 83e8      	ST   Y,R30
000b4f 30e0      	CPI  R30,0
000b50 f411      	BRNE _0x2040041
000b51 e0e1      	LDI  R30,LOW(1)
000b52 83e8      	ST   Y,R30
                 _0x2040041:
000b53 81e8      	LD   R30,Y
000b54 940c 1063 	JMP  _0x2120001
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000b56 93aa      	ST   -Y,R26
000b57 81a9      	LDD  R26,Y+1
000b58 27bb      	CLR  R27
000b59 de60      	RCALL _glcd_clipx
                +
000b5a 93e0 0176+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000b5c 81a8      	LD   R26,Y
000b5d 27bb      	CLR  R27
000b5e de6d      	RCALL _glcd_clipy
                +
000b5f 93e0 0177+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000b61 940c 101c 	JMP  _0x2120002
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000b63 93aa      	ST   -Y,R26
000b64 972b      	SBIW R28,11
000b65 940e 14e9 	CALL __SAVELOCR6
000b67 89ac      	LDD  R26,Y+20
000b68 27bb      	CLR  R27
000b69 de50      	RCALL _glcd_clipx
000b6a 8bec      	STD  Y+20,R30
000b6b 89aa      	LDD  R26,Y+18
000b6c 27bb      	CLR  R27
000b6d de4c      	RCALL _glcd_clipx
000b6e 8bea      	STD  Y+18,R30
000b6f 89ab      	LDD  R26,Y+19
000b70 27bb      	CLR  R27
000b71 de5a      	RCALL _glcd_clipy
000b72 8beb      	STD  Y+19,R30
000b73 89a9      	LDD  R26,Y+17
000b74 27bb      	CLR  R27
000b75 de56      	RCALL _glcd_clipy
000b76 8be9      	STD  Y+17,R30
000b77 89ea      	LDD  R30,Y+18
                +
000b78 93e0 0176+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000b7a 89e9      	LDD  R30,Y+17
                +
000b7b 93e0 0177+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000b7d e0e1      	LDI  R30,LOW(1)
000b7e 87e8      	STD  Y+8,R30
000b7f 89e9      	LDD  R30,Y+17
000b80 89ab      	LDD  R26,Y+19
000b81 17ea      	CP   R30,R26
000b82 f571      	BRNE _0x2040042
000b83 891c      	LDD  R17,Y+20
000b84 89aa      	LDD  R26,Y+18
000b85 171a      	CP   R17,R26
000b86 f431      	BRNE _0x2040043
000b87 931a      	ST   -Y,R17
000b88 89ec      	LDD  R30,Y+20
000b89 93ea      	ST   -Y,R30
000b8a e0a1      	LDI  R26,LOW(1)
000b8b dfaf      	RCALL _glcd_putpixelm_G102
000b8c c0c8      	RJMP _0x2120007
                 _0x2040043:
000b8d 89aa      	LDD  R26,Y+18
000b8e 171a      	CP   R17,R26
000b8f f430      	BRSH _0x2040044
000b90 89ea      	LDD  R30,Y+18
000b91 1be1      	SUB  R30,R17
000b92 2f0e      	MOV  R16,R30
                +
000b93 e041     +LDI R20 , LOW ( 1 )
000b94 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000b95 c006      	RJMP _0x2040045
                 _0x2040044:
000b96 89aa      	LDD  R26,Y+18
000b97 2fe1      	MOV  R30,R17
000b98 1bea      	SUB  R30,R26
000b99 2f0e      	MOV  R16,R30
                +
000b9a ef4f     +LDI R20 , LOW ( - 1 )
000b9b ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2040045:
                 _0x2040047:
000b9c 893b      	LDD  R19,Y+19
000b9d e0e0      	LDI  R30,LOW(0)
000b9e 83ee      	STD  Y+6,R30
                 _0x2040049:
000b9f 940e 11ca 	CALL SUBOPT_0x28
000ba1 f438      	BRSH _0x204004B
000ba2 931a      	ST   -Y,R17
000ba3 933a      	ST   -Y,R19
000ba4 9533      	INC  R19
000ba5 85aa      	LDD  R26,Y+10
000ba6 df94      	RCALL _glcd_putpixelm_G102
000ba7 83ef      	STD  Y+7,R30
000ba8 cff6      	RJMP _0x2040049
                 _0x204004B:
000ba9 81ef      	LDD  R30,Y+7
000baa 87e8      	STD  Y+8,R30
000bab 0f14      	ADD  R17,R20
000bac 2fe0      	MOV  R30,R16
000bad 5001      	SUBI R16,1
000bae 30e0      	CPI  R30,0
000baf f761      	BRNE _0x2040047
000bb0 c0a4      	RJMP _0x204004C
                 _0x2040042:
000bb1 89ea      	LDD  R30,Y+18
000bb2 89ac      	LDD  R26,Y+20
000bb3 17ea      	CP   R30,R26
000bb4 f539      	BRNE _0x204004D
000bb5 893b      	LDD  R19,Y+19
000bb6 89a9      	LDD  R26,Y+17
000bb7 173a      	CP   R19,R26
000bb8 f430      	BRSH _0x204004E
000bb9 89e9      	LDD  R30,Y+17
000bba 1be3      	SUB  R30,R19
000bbb 2f2e      	MOV  R18,R30
000bbc e0e1      	LDI  R30,LOW(1)
000bbd e0f0      	LDI  R31,HIGH(1)
000bbe c006      	RJMP _0x204011B
                 _0x204004E:
000bbf 89a9      	LDD  R26,Y+17
000bc0 2fe3      	MOV  R30,R19
000bc1 1bea      	SUB  R30,R26
000bc2 2f2e      	MOV  R18,R30
000bc3 efef      	LDI  R30,LOW(65535)
000bc4 efff      	LDI  R31,HIGH(65535)
                 _0x204011B:
000bc5 87ed      	STD  Y+13,R30
000bc6 87fe      	STD  Y+13+1,R31
                 _0x2040051:
000bc7 891c      	LDD  R17,Y+20
000bc8 e0e0      	LDI  R30,LOW(0)
000bc9 83ee      	STD  Y+6,R30
                 _0x2040053:
000bca 940e 11ca 	CALL SUBOPT_0x28
000bcc f430      	BRSH _0x2040055
000bcd 931a      	ST   -Y,R17
000bce 9513      	INC  R17
000bcf 940e 11d2 	CALL SUBOPT_0x29
000bd1 83ef      	STD  Y+7,R30
000bd2 cff7      	RJMP _0x2040053
                 _0x2040055:
000bd3 81ef      	LDD  R30,Y+7
000bd4 87e8      	STD  Y+8,R30
000bd5 85ed      	LDD  R30,Y+13
000bd6 0f3e      	ADD  R19,R30
000bd7 2fe2      	MOV  R30,R18
000bd8 5021      	SUBI R18,1
000bd9 30e0      	CPI  R30,0
000bda f761      	BRNE _0x2040051
000bdb c079      	RJMP _0x2040056
                 _0x204004D:
000bdc e0e0      	LDI  R30,LOW(0)
000bdd 83ee      	STD  Y+6,R30
                 _0x2040057:
000bde 940e 11ca 	CALL SUBOPT_0x28
000be0 f008      	BRLO PC+2
000be1 c073      	RJMP _0x2040059
000be2 891c      	LDD  R17,Y+20
000be3 893b      	LDD  R19,Y+19
000be4 e0e1      	LDI  R30,LOW(1)
000be5 2f2e      	MOV  R18,R30
000be6 2f0e      	MOV  R16,R30
000be7 89aa      	LDD  R26,Y+18
000be8 27bb      	CLR  R27
000be9 89ec      	LDD  R30,Y+20
000bea e0f0      	LDI  R31,0
000beb 1bae      	SUB  R26,R30
000bec 0bbf      	SBC  R27,R31
000bed 01ad      	MOVW R20,R26
000bee 2355      	TST  R21
000bef f42a      	BRPL _0x204005A
000bf0 ef0f      	LDI  R16,LOW(255)
000bf1 01fa      	MOVW R30,R20
000bf2 940e 1420 	CALL __ANEGW1
000bf4 01af      	MOVW R20,R30
                 _0x204005A:
000bf5 01fa      	MOVW R30,R20
000bf6 0fee      	LSL  R30
000bf7 1fff      	ROL  R31
000bf8 87ef      	STD  Y+15,R30
000bf9 8bf8      	STD  Y+15+1,R31
000bfa 89a9      	LDD  R26,Y+17
000bfb 27bb      	CLR  R27
000bfc 89eb      	LDD  R30,Y+19
000bfd e0f0      	LDI  R31,0
000bfe 1bae      	SUB  R26,R30
000bff 0bbf      	SBC  R27,R31
000c00 87ad      	STD  Y+13,R26
000c01 87be      	STD  Y+13+1,R27
000c02 85ae      	LDD  R26,Y+14
000c03 23aa      	TST  R26
000c04 f43a      	BRPL _0x204005B
000c05 ef2f      	LDI  R18,LOW(255)
000c06 85ed      	LDD  R30,Y+13
000c07 85fe      	LDD  R31,Y+13+1
000c08 940e 1420 	CALL __ANEGW1
000c0a 87ed      	STD  Y+13,R30
000c0b 87fe      	STD  Y+13+1,R31
                 _0x204005B:
000c0c 85ed      	LDD  R30,Y+13
000c0d 85fe      	LDD  R31,Y+13+1
000c0e 0fee      	LSL  R30
000c0f 1fff      	ROL  R31
000c10 87eb      	STD  Y+11,R30
000c11 87fc      	STD  Y+11+1,R31
000c12 931a      	ST   -Y,R17
000c13 933a      	ST   -Y,R19
000c14 e0a1      	LDI  R26,LOW(1)
000c15 df25      	RCALL _glcd_putpixelm_G102
000c16 87e8      	STD  Y+8,R30
000c17 e0e0      	LDI  R30,LOW(0)
000c18 87e9      	STD  Y+9,R30
000c19 87ea      	STD  Y+9+1,R30
000c1a 85ad      	LDD  R26,Y+13
000c1b 85be      	LDD  R27,Y+13+1
000c1c 174a      	CP   R20,R26
000c1d 075b      	CPC  R21,R27
000c1e f0bc      	BRLT _0x204005C
                 _0x204005E:
000c1f 0f10      	ADD  R17,R16
000c20 85eb      	LDD  R30,Y+11
000c21 85fc      	LDD  R31,Y+11+1
000c22 940e 11d6 	CALL SUBOPT_0x2A
000c24 85a9      	LDD  R26,Y+9
000c25 85ba      	LDD  R27,Y+9+1
000c26 174a      	CP   R20,R26
000c27 075b      	CPC  R21,R27
000c28 f42c      	BRGE _0x2040060
000c29 0f32      	ADD  R19,R18
000c2a 85af      	LDD  R26,Y+15
000c2b 89b8      	LDD  R27,Y+15+1
000c2c 940e 11dd 	CALL SUBOPT_0x2B
                 _0x2040060:
000c2e 931a      	ST   -Y,R17
000c2f 940e 11d2 	CALL SUBOPT_0x29
000c31 87e8      	STD  Y+8,R30
000c32 89ea      	LDD  R30,Y+18
000c33 17e1      	CP   R30,R17
000c34 f751      	BRNE _0x204005E
000c35 c018      	RJMP _0x2040061
                 _0x204005C:
                 _0x2040063:
000c36 0f32      	ADD  R19,R18
000c37 85ef      	LDD  R30,Y+15
000c38 89f8      	LDD  R31,Y+15+1
000c39 940e 11d6 	CALL SUBOPT_0x2A
000c3b 85ed      	LDD  R30,Y+13
000c3c 85fe      	LDD  R31,Y+13+1
000c3d 85a9      	LDD  R26,Y+9
000c3e 85ba      	LDD  R27,Y+9+1
000c3f 17ea      	CP   R30,R26
000c40 07fb      	CPC  R31,R27
000c41 f42c      	BRGE _0x2040065
000c42 0f10      	ADD  R17,R16
000c43 85ab      	LDD  R26,Y+11
000c44 85bc      	LDD  R27,Y+11+1
000c45 940e 11dd 	CALL SUBOPT_0x2B
                 _0x2040065:
000c47 931a      	ST   -Y,R17
000c48 940e 11d2 	CALL SUBOPT_0x29
000c4a 87e8      	STD  Y+8,R30
000c4b 89e9      	LDD  R30,Y+17
000c4c 17e3      	CP   R30,R19
000c4d f741      	BRNE _0x2040063
                 _0x2040061:
000c4e 89eb      	LDD  R30,Y+19
000c4f 5fef      	SUBI R30,-LOW(1)
000c50 8beb      	STD  Y+19,R30
000c51 89e9      	LDD  R30,Y+17
000c52 5fef      	SUBI R30,-LOW(1)
000c53 8be9      	STD  Y+17,R30
000c54 cf89      	RJMP _0x2040057
                 _0x2040059:
                 _0x2040056:
                 _0x204004C:
                 _0x2120007:
000c55 940e 14f0 	CALL __LOADLOCR6
000c57 9665      	ADIW R28,21
000c58 9508      	RET
                 ; .FEND
                 _glcd_plot8_G102:
                 ; .FSTART _glcd_plot8_G102
000c59 93ba      	ST   -Y,R27
000c5a 93aa      	ST   -Y,R26
000c5b 9723      	SBIW R28,3
000c5c 940e 14e9 	CALL __SAVELOCR6
000c5e 85ed      	LDD  R30,Y+13
000c5f 87e8      	STD  Y+8,R30
                +
000c60 91e0 017c+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000c62 83ef      	STD  Y+7,R30
000c63 91e0 0174 	LDS  R30,_glcd_state
000c65 83ee      	STD  Y+6,R30
000c66 89aa      	LDD  R26,Y+18
000c67 27bb      	CLR  R27
000c68 85ef      	LDD  R30,Y+15
000c69 940e 11b8 	CALL SUBOPT_0x25
000c6b 89a9      	LDD  R26,Y+17
000c6c 27bb      	CLR  R27
000c6d 89e8      	LDD  R30,Y+16
000c6e 940e 11e4 	CALL SUBOPT_0x2C
000c70 89e8      	LDD  R30,Y+16
000c71 940e 11eb 	CALL SUBOPT_0x2D
000c73 f071      	BREQ _0x2040073
000c74 85e8      	LDD  R30,Y+8
000c75 78e0      	ANDI R30,LOW(0x80)
000c76 f4f1      	BRNE _0x2040075
000c77 85ad      	LDD  R26,Y+13
000c78 85be      	LDD  R27,Y+13+1
000c79 e5ea      	LDI  R30,LOW(90)
000c7a e0f0      	LDI  R31,HIGH(90)
000c7b 940e 11f3 	CALL SUBOPT_0x2E
000c7d f01c      	BRLT _0x2040077
000c7e 940e 11fc 	CALL SUBOPT_0x2F
000c80 f40c      	BRGE _0x2040078
                 _0x2040077:
000c81 c013      	RJMP _0x2040076
                 _0x2040078:
                 _0x2040073:
000c82 2333      	TST  R19
000c83 f012      	BRMI _0x2040079
000c84 940e 1201 	CALL SUBOPT_0x30
                 _0x2040079:
000c86 81af      	LDD  R26,Y+7
000c87 30a2      	CPI  R26,LOW(0x2)
000c88 f020      	BRLO _0x204007B
                +
000c89 3022     +CPI R18 , LOW ( 2 )
000c8a e0e0     +LDI R30 , HIGH ( 2 )
000c8b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
000c8c f40c      	BRGE _0x204007C
                 _0x204007B:
000c8d c007      	RJMP _0x204007A
                 _0x204007C:
000c8e 940e 1205 	CALL SUBOPT_0x31
000c90 f421      	BRNE _0x204007D
000c91 930a      	ST   -Y,R16
000c92 2fa2      	MOV  R26,R18
000c93 50a1      	SUBI R26,LOW(1)
000c94 dd49      	RCALL _glcd_setpixel
                 _0x204007D:
                 _0x204007A:
                 _0x2040076:
                 _0x2040075:
000c95 85e8      	LDD  R30,Y+8
000c96 78e8      	ANDI R30,LOW(0x88)
000c97 38e8      	CPI  R30,LOW(0x88)
000c98 f091      	BREQ _0x204007F
000c99 85e8      	LDD  R30,Y+8
000c9a 78e0      	ANDI R30,LOW(0x80)
000c9b f4c9      	BRNE _0x2040081
000c9c 85ad      	LDD  R26,Y+13
000c9d 85be      	LDD  R27,Y+13+1
000c9e 5fa2      	SUBI R26,LOW(-270)
000c9f 4fbe      	SBCI R27,HIGH(-270)
000ca0 940e 120e 	CALL SUBOPT_0x32
000ca2 f03c      	BRLT _0x2040083
000ca3 85ad      	LDD  R26,Y+13
000ca4 85be      	LDD  R27,Y+13+1
000ca5 5fa2      	SUBI R26,LOW(-270)
000ca6 4fbe      	SBCI R27,HIGH(-270)
000ca7 940e 1213 	CALL SUBOPT_0x33
000ca9 f40c      	BRGE _0x2040084
                 _0x2040083:
000caa c00a      	RJMP _0x2040082
                 _0x2040084:
                 _0x204007F:
000cab 940e 1218 	CALL SUBOPT_0x34
000cad f038      	BRLO _0x2040085
000cae 940e 121f 	CALL SUBOPT_0x35
000cb0 f421      	BRNE _0x2040086
000cb1 930a      	ST   -Y,R16
000cb2 2fa4      	MOV  R26,R20
000cb3 5faf      	SUBI R26,-LOW(1)
000cb4 dd29      	RCALL _glcd_setpixel
                 _0x2040086:
                 _0x2040085:
                 _0x2040082:
                 _0x2040081:
000cb5 89aa      	LDD  R26,Y+18
000cb6 27bb      	CLR  R27
000cb7 85ef      	LDD  R30,Y+15
000cb8 e0f0      	LDI  R31,0
000cb9 1bae      	SUB  R26,R30
000cba 0bbf      	SBC  R27,R31
000cbb 018d      	MOVW R16,R26
000cbc 2311      	TST  R17
000cbd f40a      	BRPL PC+2
000cbe c045      	RJMP _0x2040087
000cbf 85e8      	LDD  R30,Y+8
000cc0 78e2      	ANDI R30,LOW(0x82)
000cc1 38e2      	CPI  R30,LOW(0x82)
000cc2 f091      	BREQ _0x2040089
000cc3 85e8      	LDD  R30,Y+8
000cc4 78e0      	ANDI R30,LOW(0x80)
000cc5 f511      	BRNE _0x204008B
000cc6 85ad      	LDD  R26,Y+13
000cc7 85be      	LDD  R27,Y+13+1
000cc8 5aa6      	SUBI R26,LOW(-90)
000cc9 4fbf      	SBCI R27,HIGH(-90)
000cca 940e 120e 	CALL SUBOPT_0x32
000ccc f03c      	BRLT _0x204008D
000ccd 85ad      	LDD  R26,Y+13
000cce 85be      	LDD  R27,Y+13+1
000ccf 5aa6      	SUBI R26,LOW(-90)
000cd0 4fbf      	SBCI R27,HIGH(-90)
000cd1 940e 1213 	CALL SUBOPT_0x33
000cd3 f40c      	BRGE _0x204008E
                 _0x204008D:
000cd4 c013      	RJMP _0x204008C
                 _0x204008E:
                 _0x2040089:
000cd5 2333      	TST  R19
000cd6 f012      	BRMI _0x204008F
000cd7 940e 1201 	CALL SUBOPT_0x30
                 _0x204008F:
000cd9 81af      	LDD  R26,Y+7
000cda 30a2      	CPI  R26,LOW(0x2)
000cdb f020      	BRLO _0x2040091
                +
000cdc 3022     +CPI R18 , LOW ( 2 )
000cdd e0e0     +LDI R30 , HIGH ( 2 )
000cde 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
000cdf f40c      	BRGE _0x2040092
                 _0x2040091:
000ce0 c007      	RJMP _0x2040090
                 _0x2040092:
000ce1 940e 1205 	CALL SUBOPT_0x31
000ce3 f421      	BRNE _0x2040093
000ce4 930a      	ST   -Y,R16
000ce5 2fa2      	MOV  R26,R18
000ce6 50a1      	SUBI R26,LOW(1)
000ce7 dcf6      	RCALL _glcd_setpixel
                 _0x2040093:
                 _0x2040090:
                 _0x204008C:
                 _0x204008B:
000ce8 85e8      	LDD  R30,Y+8
000ce9 78e4      	ANDI R30,LOW(0x84)
000cea 38e4      	CPI  R30,LOW(0x84)
000ceb f071      	BREQ _0x2040095
000cec 85e8      	LDD  R30,Y+8
000ced 78e0      	ANDI R30,LOW(0x80)
000cee f4a9      	BRNE _0x2040097
000cef 85ad      	LDD  R26,Y+13
000cf0 85be      	LDD  R27,Y+13+1
000cf1 e0ee      	LDI  R30,LOW(270)
000cf2 e0f1      	LDI  R31,HIGH(270)
000cf3 940e 11f3 	CALL SUBOPT_0x2E
000cf5 f01c      	BRLT _0x2040099
000cf6 940e 11fc 	CALL SUBOPT_0x2F
000cf8 f40c      	BRGE _0x204009A
                 _0x2040099:
000cf9 c00a      	RJMP _0x2040098
                 _0x204009A:
                 _0x2040095:
000cfa 940e 1218 	CALL SUBOPT_0x34
000cfc f038      	BRLO _0x204009B
000cfd 940e 121f 	CALL SUBOPT_0x35
000cff f421      	BRNE _0x204009C
000d00 930a      	ST   -Y,R16
000d01 2fa4      	MOV  R26,R20
000d02 5faf      	SUBI R26,-LOW(1)
000d03 dcda      	RCALL _glcd_setpixel
                 _0x204009C:
                 _0x204009B:
                 _0x2040098:
                 _0x2040097:
                 _0x2040087:
000d04 89aa      	LDD  R26,Y+18
000d05 27bb      	CLR  R27
000d06 89e8      	LDD  R30,Y+16
000d07 940e 11b8 	CALL SUBOPT_0x25
000d09 89a9      	LDD  R26,Y+17
000d0a 27bb      	CLR  R27
000d0b 85ef      	LDD  R30,Y+15
000d0c 940e 11e4 	CALL SUBOPT_0x2C
000d0e 85ef      	LDD  R30,Y+15
000d0f 940e 11eb 	CALL SUBOPT_0x2D
000d11 f081      	BREQ _0x204009E
000d12 85e8      	LDD  R30,Y+8
000d13 78e0      	ANDI R30,LOW(0x80)
000d14 f4f1      	BRNE _0x20400A0
000d15 85eb      	LDD  R30,Y+11
000d16 85fc      	LDD  R31,Y+11+1
000d17 85ad      	LDD  R26,Y+13
000d18 85be      	LDD  R27,Y+13+1
000d19 17ae      	CP   R26,R30
000d1a 07bf      	CPC  R27,R31
000d1b f02c      	BRLT _0x20400A2
000d1c 85e9      	LDD  R30,Y+9
000d1d 85fa      	LDD  R31,Y+9+1
000d1e 17ea      	CP   R30,R26
000d1f 07fb      	CPC  R31,R27
000d20 f40c      	BRGE _0x20400A3
                 _0x20400A2:
000d21 c011      	RJMP _0x20400A1
                 _0x20400A3:
                 _0x204009E:
000d22 2333      	TST  R19
000d23 f07a      	BRMI _0x20400A4
000d24 940e 1201 	CALL SUBOPT_0x30
000d26 81af      	LDD  R26,Y+7
000d27 30a2      	CPI  R26,LOW(0x2)
000d28 f050      	BRLO _0x20400A5
000d29 2fe0      	MOV  R30,R16
000d2a 5fee      	SUBI R30,-LOW(2)
000d2b 940e 1228 	CALL SUBOPT_0x36
000d2d f429      	BRNE _0x20400A6
000d2e 2fe0      	MOV  R30,R16
000d2f 5fef      	SUBI R30,-LOW(1)
000d30 93ea      	ST   -Y,R30
000d31 2fa2      	MOV  R26,R18
000d32 dcab      	RCALL _glcd_setpixel
                 _0x20400A6:
                 _0x20400A5:
                 _0x20400A4:
                 _0x20400A1:
                 _0x20400A0:
000d33 85e8      	LDD  R30,Y+8
000d34 78e8      	ANDI R30,LOW(0x88)
000d35 38e8      	CPI  R30,LOW(0x88)
000d36 f071      	BREQ _0x20400A8
000d37 85e8      	LDD  R30,Y+8
000d38 78e0      	ANDI R30,LOW(0x80)
000d39 f4c1      	BRNE _0x20400AA
000d3a 85ad      	LDD  R26,Y+13
000d3b 85be      	LDD  R27,Y+13+1
000d3c e6e8      	LDI  R30,LOW(360)
000d3d e0f1      	LDI  R31,HIGH(360)
000d3e 940e 11f3 	CALL SUBOPT_0x2E
000d40 f01c      	BRLT _0x20400AC
000d41 940e 11fc 	CALL SUBOPT_0x2F
000d43 f40c      	BRGE _0x20400AD
                 _0x20400AC:
000d44 c00d      	RJMP _0x20400AB
                 _0x20400AD:
                 _0x20400A8:
000d45 940e 1218 	CALL SUBOPT_0x34
000d47 f050      	BRLO _0x20400AE
000d48 2fe0      	MOV  R30,R16
000d49 5fee      	SUBI R30,-LOW(2)
000d4a 940e 1230 	CALL SUBOPT_0x37
000d4c f429      	BRNE _0x20400AF
000d4d 2fe0      	MOV  R30,R16
000d4e 5fef      	SUBI R30,-LOW(1)
000d4f 93ea      	ST   -Y,R30
000d50 2fa4      	MOV  R26,R20
000d51 dc8c      	RCALL _glcd_setpixel
                 _0x20400AF:
                 _0x20400AE:
                 _0x20400AB:
                 _0x20400AA:
000d52 89aa      	LDD  R26,Y+18
000d53 27bb      	CLR  R27
000d54 89e8      	LDD  R30,Y+16
000d55 e0f0      	LDI  R31,0
000d56 1bae      	SUB  R26,R30
000d57 0bbf      	SBC  R27,R31
000d58 018d      	MOVW R16,R26
000d59 2311      	TST  R17
000d5a f40a      	BRPL PC+2
000d5b c050      	RJMP _0x20400B0
000d5c 85e8      	LDD  R30,Y+8
000d5d 78e2      	ANDI R30,LOW(0x82)
000d5e 38e2      	CPI  R30,LOW(0x82)
000d5f f071      	BREQ _0x20400B2
000d60 85e8      	LDD  R30,Y+8
000d61 78e0      	ANDI R30,LOW(0x80)
000d62 f509      	BRNE _0x20400B4
000d63 85ad      	LDD  R26,Y+13
000d64 85be      	LDD  R27,Y+13+1
000d65 ebe4      	LDI  R30,LOW(180)
000d66 e0f0      	LDI  R31,HIGH(180)
000d67 940e 11f3 	CALL SUBOPT_0x2E
000d69 f01c      	BRLT _0x20400B6
000d6a 940e 11fc 	CALL SUBOPT_0x2F
000d6c f40c      	BRGE _0x20400B7
                 _0x20400B6:
000d6d c016      	RJMP _0x20400B5
                 _0x20400B7:
                 _0x20400B2:
000d6e 2333      	TST  R19
000d6f f0a2      	BRMI _0x20400B8
000d70 940e 1201 	CALL SUBOPT_0x30
000d72 81af      	LDD  R26,Y+7
000d73 30a2      	CPI  R26,LOW(0x2)
000d74 f020      	BRLO _0x20400BA
                +
000d75 3002     +CPI R16 , LOW ( 2 )
000d76 e0e0     +LDI R30 , HIGH ( 2 )
000d77 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000d78 f40c      	BRGE _0x20400BB
                 _0x20400BA:
000d79 c00a      	RJMP _0x20400B9
                 _0x20400BB:
000d7a 2fe0      	MOV  R30,R16
000d7b 50e2      	SUBI R30,LOW(2)
000d7c 940e 1228 	CALL SUBOPT_0x36
000d7e f429      	BRNE _0x20400BC
000d7f 2fe0      	MOV  R30,R16
000d80 50e1      	SUBI R30,LOW(1)
000d81 93ea      	ST   -Y,R30
000d82 2fa2      	MOV  R26,R18
000d83 dc5a      	RCALL _glcd_setpixel
                 _0x20400BC:
                 _0x20400B9:
                 _0x20400B8:
                 _0x20400B5:
                 _0x20400B4:
000d84 85e8      	LDD  R30,Y+8
000d85 78e4      	ANDI R30,LOW(0x84)
000d86 38e4      	CPI  R30,LOW(0x84)
000d87 f091      	BREQ _0x20400BE
000d88 85e8      	LDD  R30,Y+8
000d89 78e0      	ANDI R30,LOW(0x80)
000d8a f509      	BRNE _0x20400C0
000d8b 85ad      	LDD  R26,Y+13
000d8c 85be      	LDD  R27,Y+13+1
000d8d 54ac      	SUBI R26,LOW(-180)
000d8e 4fbf      	SBCI R27,HIGH(-180)
000d8f 940e 120e 	CALL SUBOPT_0x32
000d91 f03c      	BRLT _0x20400C2
000d92 85ad      	LDD  R26,Y+13
000d93 85be      	LDD  R27,Y+13+1
000d94 54ac      	SUBI R26,LOW(-180)
000d95 4fbf      	SBCI R27,HIGH(-180)
000d96 940e 1213 	CALL SUBOPT_0x33
000d98 f40c      	BRGE _0x20400C3
                 _0x20400C2:
000d99 c012      	RJMP _0x20400C1
                 _0x20400C3:
                 _0x20400BE:
000d9a 940e 1218 	CALL SUBOPT_0x34
000d9c f020      	BRLO _0x20400C5
                +
000d9d 3002     +CPI R16 , LOW ( 2 )
000d9e e0e0     +LDI R30 , HIGH ( 2 )
000d9f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000da0 f40c      	BRGE _0x20400C6
                 _0x20400C5:
000da1 c00a      	RJMP _0x20400C4
                 _0x20400C6:
000da2 2fe0      	MOV  R30,R16
000da3 50e2      	SUBI R30,LOW(2)
000da4 940e 1230 	CALL SUBOPT_0x37
000da6 f429      	BRNE _0x20400C7
000da7 2fe0      	MOV  R30,R16
000da8 50e1      	SUBI R30,LOW(1)
000da9 93ea      	ST   -Y,R30
000daa 2fa4      	MOV  R26,R20
000dab dc32      	RCALL _glcd_setpixel
                 _0x20400C7:
                 _0x20400C4:
                 _0x20400C1:
                 _0x20400C0:
                 _0x20400B0:
000dac 940e 14f0 	CALL __LOADLOCR6
000dae 9663      	ADIW R28,19
000daf 9508      	RET
                 ; .FEND
                 _glcd_line2_G102:
                 ; .FSTART _glcd_line2_G102
000db0 93aa      	ST   -Y,R26
000db1 940e 14eb 	CALL __SAVELOCR4
000db3 81af      	LDD  R26,Y+7
000db4 27bb      	CLR  R27
000db5 81ed      	LDD  R30,Y+5
000db6 e0f0      	LDI  R31,0
000db7 1bae      	SUB  R26,R30
000db8 0bbf      	SBC  R27,R31
000db9 dc00      	RCALL _glcd_clipx
000dba 2f1e      	MOV  R17,R30
000dbb 81af      	LDD  R26,Y+7
000dbc 27bb      	CLR  R27
000dbd 81ed      	LDD  R30,Y+5
000dbe e0f0      	LDI  R31,0
000dbf 0fae      	ADD  R26,R30
000dc0 1fbf      	ADC  R27,R31
000dc1 dbf8      	RCALL _glcd_clipx
000dc2 2f0e      	MOV  R16,R30
000dc3 81ae      	LDD  R26,Y+6
000dc4 27bb      	CLR  R27
000dc5 81ec      	LDD  R30,Y+4
000dc6 e0f0      	LDI  R31,0
000dc7 1bae      	SUB  R26,R30
000dc8 0bbf      	SBC  R27,R31
000dc9 dc02      	RCALL _glcd_clipy
000dca 2f3e      	MOV  R19,R30
000dcb 81ae      	LDD  R26,Y+6
000dcc 27bb      	CLR  R27
000dcd 81ec      	LDD  R30,Y+4
000dce e0f0      	LDI  R31,0
000dcf 0fae      	ADD  R26,R30
000dd0 1fbf      	ADC  R27,R31
000dd1 dbfa      	RCALL _glcd_clipy
000dd2 2f2e      	MOV  R18,R30
000dd3 931a      	ST   -Y,R17
000dd4 933a      	ST   -Y,R19
000dd5 930a      	ST   -Y,R16
000dd6 2fa3      	MOV  R26,R19
000dd7 dd8b      	RCALL _glcd_line
000dd8 931a      	ST   -Y,R17
000dd9 932a      	ST   -Y,R18
000dda 930a      	ST   -Y,R16
000ddb 2fa2      	MOV  R26,R18
000ddc dd86      	RCALL _glcd_line
000ddd 940e 14f2 	CALL __LOADLOCR4
                 _0x2120006:
000ddf 9628      	ADIW R28,8
000de0 9508      	RET
                 ; .FEND
                 _glcd_quadrant_G102:
                 ; .FSTART _glcd_quadrant_G102
000de1 93aa      	ST   -Y,R26
000de2 940e 14e9 	CALL __SAVELOCR6
000de4 85a9      	LDD  R26,Y+9
000de5 38a0      	CPI  R26,LOW(0x80)
000de6 f418      	BRSH _0x20400C9
000de7 85a8      	LDD  R26,Y+8
000de8 34a0      	CPI  R26,LOW(0x40)
000de9 f008      	BRLO _0x20400C8
                 _0x20400C9:
000dea c04f      	RJMP _0x2120005
                 _0x20400C8:
                +
000deb 9150 017c+LDS R21 , _glcd_state + ( 8 )
                 	__GETBRMN 21,_glcd_state,8
                 _0x20400CB:
000ded 2fe5      	MOV  R30,R21
000dee 5051      	SUBI R21,1
000def 30e0      	CPI  R30,0
000df0 f409      	BRNE PC+2
000df1 c048      	RJMP _0x20400CD
000df2 81ef      	LDD  R30,Y+7
000df3 30e0      	CPI  R30,0
000df4 f409      	BRNE _0x20400CE
000df5 c044      	RJMP _0x2120005
                 _0x20400CE:
000df6 81ef      	LDD  R30,Y+7
000df7 50e1      	SUBI R30,LOW(1)
000df8 83ef      	STD  Y+7,R30
000df9 5fef      	SUBI R30,-LOW(1)
000dfa 2f0e      	MOV  R16,R30
000dfb e0f0      	LDI  R31,0
000dfc e0a5      	LDI  R26,LOW(5)
000dfd e0b0      	LDI  R27,HIGH(5)
000dfe 1bae      	SUB  R26,R30
000dff 0bbf      	SBC  R27,R31
000e00 01fd      	MOVW R30,R26
000e01 940e 143c 	CALL __LSLW2
000e03 940e 1441 	CALL __ASRW2
000e05 019f      	MOVW R18,R30
000e06 e010      	LDI  R17,LOW(0)
                 _0x20400D0:
000e07 81ae      	LDD  R26,Y+6
000e08 34a0      	CPI  R26,LOW(0x40)
000e09 f459      	BRNE _0x20400D2
000e0a 940e 1238 	CALL SUBOPT_0x38
000e0c 931a      	ST   -Y,R17
000e0d 2fa0      	MOV  R26,R16
000e0e dfa1      	RCALL _glcd_line2_G102
000e0f 940e 1238 	CALL SUBOPT_0x38
000e11 930a      	ST   -Y,R16
000e12 2fa1      	MOV  R26,R17
000e13 df9c      	RCALL _glcd_line2_G102
000e14 c00f      	RJMP _0x20400D3
                 _0x20400D2:
000e15 940e 1238 	CALL SUBOPT_0x38
000e17 931a      	ST   -Y,R17
000e18 930a      	ST   -Y,R16
000e19 85ea      	LDD  R30,Y+10
000e1a e0f0      	LDI  R31,0
000e1b 93fa      	ST   -Y,R31
000e1c 93ea      	ST   -Y,R30
000e1d e0e0      	LDI  R30,LOW(0)
000e1e e0f0      	LDI  R31,HIGH(0)
000e1f 93fa      	ST   -Y,R31
000e20 93ea      	ST   -Y,R30
000e21 e0a0      	LDI  R26,LOW(0)
000e22 e0b0      	LDI  R27,0
000e23 de35      	RCALL _glcd_plot8_G102
                 _0x20400D3:
000e24 5f1f      	SUBI R17,-1
000e25 2333      	TST  R19
000e26 f41a      	BRPL _0x20400D4
000e27 2fe1      	MOV  R30,R17
000e28 e0f0      	LDI  R31,0
000e29 c008      	RJMP _0x204011C
                 _0x20400D4:
000e2a 5001      	SUBI R16,1
000e2b 2fa1      	MOV  R26,R17
000e2c 27bb      	CLR  R27
000e2d 2fe0      	MOV  R30,R16
000e2e e0f0      	LDI  R31,0
000e2f 1bae      	SUB  R26,R30
000e30 0bbf      	SBC  R27,R31
000e31 01fd      	MOVW R30,R26
                 _0x204011C:
000e32 0fee      	LSL  R30
000e33 1fff      	ROL  R31
000e34 9631      	ADIW R30,1
                +
000e35 0f2e     +ADD R18 , R30
000e36 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
000e37 1701      	CP   R16,R17
000e38 f670      	BRSH _0x20400D0
000e39 cfb3      	RJMP _0x20400CB
                 _0x20400CD:
                 _0x2120005:
000e3a 940e 14f0 	CALL __LOADLOCR6
000e3c 962a      	ADIW R28,10
000e3d 9508      	RET
                 ; .FEND
                 _glcd_circle:
                 ; .FSTART _glcd_circle
000e3e 93aa      	ST   -Y,R26
000e3f 81ea      	LDD  R30,Y+2
000e40 93ea      	ST   -Y,R30
000e41 81ea      	LDD  R30,Y+2
000e42 93ea      	ST   -Y,R30
000e43 81ea      	LDD  R30,Y+2
000e44 93ea      	ST   -Y,R30
000e45 e8af      	LDI  R26,LOW(143)
000e46 df9a      	RCALL _glcd_quadrant_G102
000e47 940c 1063 	JMP  _0x2120001
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G104:
                 ; .FSTART _put_buff_G104
000e49 93ba      	ST   -Y,R27
000e4a 93aa      	ST   -Y,R26
000e4b 931a      	ST   -Y,R17
000e4c 930a      	ST   -Y,R16
000e4d 81aa      	LDD  R26,Y+2
000e4e 81bb      	LDD  R27,Y+2+1
000e4f 9612      	ADIW R26,2
000e50 940e 1495 	CALL __GETW1P
000e52 9730      	SBIW R30,0
000e53 f129      	BREQ _0x2080010
000e54 81aa      	LDD  R26,Y+2
000e55 81bb      	LDD  R27,Y+2+1
000e56 9614      	ADIW R26,4
000e57 940e 1495 	CALL __GETW1P
000e59 018f      	MOVW R16,R30
000e5a 9730      	SBIW R30,0
000e5b f061      	BREQ _0x2080012
                +
000e5c 3002     +CPI R16 , LOW ( 2 )
000e5d e0e0     +LDI R30 , HIGH ( 2 )
000e5e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000e5f f080      	BRLO _0x2080013
000e60 01f8      	MOVW R30,R16
000e61 9731      	SBIW R30,1
000e62 018f      	MOVW R16,R30
                +
000e63 81aa     +LDD R26 , Y + 2
000e64 81bb     +LDD R27 , Y + 2 + 1
000e65 9614     +ADIW R26 , 4
000e66 93ed     +ST X + , R30
000e67 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2080012:
000e68 81aa      	LDD  R26,Y+2
000e69 81bb      	LDD  R27,Y+2+1
000e6a 9612      	ADIW R26,2
000e6b 940e 111e 	CALL SUBOPT_0xF
000e6d 9731      	SBIW R30,1
000e6e 81ac      	LDD  R26,Y+4
000e6f 83a0      	STD  Z+0,R26
                 _0x2080013:
000e70 81aa      	LDD  R26,Y+2
000e71 81bb      	LDD  R27,Y+2+1
000e72 940e 1495 	CALL __GETW1P
000e74 23ff      	TST  R31
000e75 f012      	BRMI _0x2080014
000e76 940e 111e 	CALL SUBOPT_0xF
                 _0x2080014:
000e78 c006      	RJMP _0x2080015
                 _0x2080010:
000e79 81aa      	LDD  R26,Y+2
000e7a 81bb      	LDD  R27,Y+2+1
000e7b efef      	LDI  R30,LOW(65535)
000e7c efff      	LDI  R31,HIGH(65535)
000e7d 93ed      	ST   X+,R30
000e7e 93fc      	ST   X,R31
                 _0x2080015:
000e7f 8119      	LDD  R17,Y+1
000e80 8108      	LDD  R16,Y+0
000e81 c176      	RJMP _0x2120003
                 ; .FEND
                 __print_G104:
                 ; .FSTART __print_G104
000e82 93ba      	ST   -Y,R27
000e83 93aa      	ST   -Y,R26
000e84 9726      	SBIW R28,6
000e85 940e 14e9 	CALL __SAVELOCR6
000e87 e010      	LDI  R17,0
000e88 85ac      	LDD  R26,Y+12
000e89 85bd      	LDD  R27,Y+12+1
000e8a e0e0      	LDI  R30,LOW(0)
000e8b e0f0      	LDI  R31,HIGH(0)
000e8c 93ed      	ST   X+,R30
000e8d 93fc      	ST   X,R31
                 _0x2080016:
000e8e 89ea      	LDD  R30,Y+18
000e8f 89fb      	LDD  R31,Y+18+1
000e90 9631      	ADIW R30,1
000e91 8bea      	STD  Y+18,R30
000e92 8bfb      	STD  Y+18+1,R31
000e93 9731      	SBIW R30,1
000e94 91e4      	LPM  R30,Z
000e95 2f2e      	MOV  R18,R30
000e96 30e0      	CPI  R30,0
000e97 f409      	BRNE PC+2
000e98 c115      	RJMP _0x2080018
000e99 2fe1      	MOV  R30,R17
000e9a 30e0      	CPI  R30,0
000e9b f439      	BRNE _0x208001C
000e9c 3225      	CPI  R18,37
000e9d f411      	BRNE _0x208001D
000e9e e011      	LDI  R17,LOW(1)
000e9f c002      	RJMP _0x208001E
                 _0x208001D:
000ea0 940e 123d 	CALL SUBOPT_0x39
                 _0x208001E:
000ea2 c10a      	RJMP _0x208001B
                 _0x208001C:
000ea3 30e1      	CPI  R30,LOW(0x1)
000ea4 f4a9      	BRNE _0x208001F
000ea5 3225      	CPI  R18,37
000ea6 f419      	BRNE _0x2080020
000ea7 940e 123d 	CALL SUBOPT_0x39
000ea9 c102      	RJMP _0x20800CC
                 _0x2080020:
000eaa e012      	LDI  R17,LOW(2)
000eab e040      	LDI  R20,LOW(0)
000eac e000      	LDI  R16,LOW(0)
000ead 322d      	CPI  R18,45
000eae f411      	BRNE _0x2080021
000eaf e001      	LDI  R16,LOW(1)
000eb0 c0fc      	RJMP _0x208001B
                 _0x2080021:
000eb1 322b      	CPI  R18,43
000eb2 f411      	BRNE _0x2080022
000eb3 e24b      	LDI  R20,LOW(43)
000eb4 c0f8      	RJMP _0x208001B
                 _0x2080022:
000eb5 3220      	CPI  R18,32
000eb6 f411      	BRNE _0x2080023
000eb7 e240      	LDI  R20,LOW(32)
000eb8 c0f4      	RJMP _0x208001B
                 _0x2080023:
000eb9 c002      	RJMP _0x2080024
                 _0x208001F:
000eba 30e2      	CPI  R30,LOW(0x2)
000ebb f439      	BRNE _0x2080025
                 _0x2080024:
000ebc e050      	LDI  R21,LOW(0)
000ebd e013      	LDI  R17,LOW(3)
000ebe 3320      	CPI  R18,48
000ebf f411      	BRNE _0x2080026
000ec0 6800      	ORI  R16,LOW(128)
000ec1 c0eb      	RJMP _0x208001B
                 _0x2080026:
000ec2 c003      	RJMP _0x2080027
                 _0x2080025:
000ec3 30e3      	CPI  R30,LOW(0x3)
000ec4 f009      	BREQ PC+2
000ec5 c0e7      	RJMP _0x208001B
                 _0x2080027:
000ec6 3320      	CPI  R18,48
000ec7 f010      	BRLO _0x208002A
000ec8 332a      	CPI  R18,58
000ec9 f008      	BRLO _0x208002B
                 _0x208002A:
000eca c007      	RJMP _0x2080029
                 _0x208002B:
000ecb e0aa      	LDI  R26,LOW(10)
000ecc 9f5a      	MUL  R21,R26
000ecd 2d50      	MOV  R21,R0
000ece 2fe2      	MOV  R30,R18
000ecf 53e0      	SUBI R30,LOW(48)
000ed0 0f5e      	ADD  R21,R30
000ed1 c0db      	RJMP _0x208001B
                 _0x2080029:
000ed2 2fe2      	MOV  R30,R18
000ed3 36e3      	CPI  R30,LOW(0x63)
000ed4 f449      	BRNE _0x208002F
000ed5 940e 1244 	CALL SUBOPT_0x3A
000ed7 89e8      	LDD  R30,Y+16
000ed8 89f9      	LDD  R31,Y+16+1
000ed9 81a4      	LDD  R26,Z+4
000eda 93aa      	ST   -Y,R26
000edb 940e 124a 	CALL SUBOPT_0x3B
000edd c0ce      	RJMP _0x2080030
                 _0x208002F:
000ede 37e3      	CPI  R30,LOW(0x73)
000edf f441      	BRNE _0x2080032
000ee0 940e 1244 	CALL SUBOPT_0x3A
000ee2 940e 1250 	CALL SUBOPT_0x3C
000ee4 940e 0ffa 	CALL _strlen
000ee6 2f1e      	MOV  R17,R30
000ee7 c00a      	RJMP _0x2080033
                 _0x2080032:
000ee8 37e0      	CPI  R30,LOW(0x70)
000ee9 f461      	BRNE _0x2080035
000eea 940e 1244 	CALL SUBOPT_0x3A
000eec 940e 1250 	CALL SUBOPT_0x3C
000eee 940e 1006 	CALL _strlenf
000ef0 2f1e      	MOV  R17,R30
000ef1 6008      	ORI  R16,LOW(8)
                 _0x2080033:
000ef2 6002      	ORI  R16,LOW(2)
000ef3 770f      	ANDI R16,LOW(127)
000ef4 e030      	LDI  R19,LOW(0)
000ef5 c034      	RJMP _0x2080036
                 _0x2080035:
000ef6 36e4      	CPI  R30,LOW(0x64)
000ef7 f011      	BREQ _0x2080039
000ef8 36e9      	CPI  R30,LOW(0x69)
000ef9 f411      	BRNE _0x208003A
                 _0x2080039:
000efa 6004      	ORI  R16,LOW(4)
000efb c002      	RJMP _0x208003B
                 _0x208003A:
000efc 37e5      	CPI  R30,LOW(0x75)
000efd f431      	BRNE _0x208003C
                 _0x208003B:
000efe e8ee      	LDI  R30,LOW(_tbl10_G104*2)
000eff e0f6      	LDI  R31,HIGH(_tbl10_G104*2)
000f00 83ee      	STD  Y+6,R30
000f01 83ff      	STD  Y+6+1,R31
000f02 e015      	LDI  R17,LOW(5)
000f03 c00c      	RJMP _0x208003D
                 _0x208003C:
000f04 35e8      	CPI  R30,LOW(0x58)
000f05 f411      	BRNE _0x208003F
000f06 6008      	ORI  R16,LOW(8)
000f07 c003      	RJMP _0x2080040
                 _0x208003F:
000f08 37e8      	CPI  R30,LOW(0x78)
000f09 f009      	BREQ PC+2
000f0a c0a1      	RJMP _0x2080071
                 _0x2080040:
000f0b e9e8      	LDI  R30,LOW(_tbl16_G104*2)
000f0c e0f6      	LDI  R31,HIGH(_tbl16_G104*2)
000f0d 83ee      	STD  Y+6,R30
000f0e 83ff      	STD  Y+6+1,R31
000f0f e014      	LDI  R17,LOW(4)
                 _0x208003D:
000f10 ff02      	SBRS R16,2
000f11 c014      	RJMP _0x2080042
000f12 940e 1244 	CALL SUBOPT_0x3A
000f14 940e 125a 	CALL SUBOPT_0x3D
000f16 85ab      	LDD  R26,Y+11
000f17 23aa      	TST  R26
000f18 f43a      	BRPL _0x2080043
000f19 85ea      	LDD  R30,Y+10
000f1a 85fb      	LDD  R31,Y+10+1
000f1b 940e 1420 	CALL __ANEGW1
000f1d 87ea      	STD  Y+10,R30
000f1e 87fb      	STD  Y+10+1,R31
000f1f e24d      	LDI  R20,LOW(45)
                 _0x2080043:
000f20 3040      	CPI  R20,0
000f21 f011      	BREQ _0x2080044
000f22 5f1f      	SUBI R17,-LOW(1)
000f23 c001      	RJMP _0x2080045
                 _0x2080044:
000f24 7f0b      	ANDI R16,LOW(251)
                 _0x2080045:
000f25 c004      	RJMP _0x2080046
                 _0x2080042:
000f26 940e 1244 	CALL SUBOPT_0x3A
000f28 940e 125a 	CALL SUBOPT_0x3D
                 _0x2080046:
                 _0x2080036:
000f2a fd00      	SBRC R16,0
000f2b c011      	RJMP _0x2080047
                 _0x2080048:
000f2c 1715      	CP   R17,R21
000f2d f478      	BRSH _0x208004A
000f2e ff07      	SBRS R16,7
000f2f c008      	RJMP _0x208004B
000f30 ff02      	SBRS R16,2
000f31 c004      	RJMP _0x208004C
000f32 7f0b      	ANDI R16,LOW(251)
000f33 2f24      	MOV  R18,R20
000f34 5011      	SUBI R17,LOW(1)
000f35 c001      	RJMP _0x208004D
                 _0x208004C:
000f36 e320      	LDI  R18,LOW(48)
                 _0x208004D:
000f37 c001      	RJMP _0x208004E
                 _0x208004B:
000f38 e220      	LDI  R18,LOW(32)
                 _0x208004E:
000f39 940e 123d 	CALL SUBOPT_0x39
000f3b 5051      	SUBI R21,LOW(1)
000f3c cfef      	RJMP _0x2080048
                 _0x208004A:
                 _0x2080047:
000f3d 2f31      	MOV  R19,R17
000f3e ff01      	SBRS R16,1
000f3f c017      	RJMP _0x208004F
                 _0x2080050:
000f40 3030      	CPI  R19,0
000f41 f0a1      	BREQ _0x2080052
000f42 ff03      	SBRS R16,3
000f43 c006      	RJMP _0x2080053
000f44 81ee      	LDD  R30,Y+6
000f45 81ff      	LDD  R31,Y+6+1
000f46 9125      	LPM  R18,Z+
000f47 83ee      	STD  Y+6,R30
000f48 83ff      	STD  Y+6+1,R31
000f49 c005      	RJMP _0x2080054
                 _0x2080053:
000f4a 81ae      	LDD  R26,Y+6
000f4b 81bf      	LDD  R27,Y+6+1
000f4c 912d      	LD   R18,X+
000f4d 83ae      	STD  Y+6,R26
000f4e 83bf      	STD  Y+6+1,R27
                 _0x2080054:
000f4f 940e 123d 	CALL SUBOPT_0x39
000f51 3050      	CPI  R21,0
000f52 f009      	BREQ _0x2080055
000f53 5051      	SUBI R21,LOW(1)
                 _0x2080055:
000f54 5031      	SUBI R19,LOW(1)
000f55 cfea      	RJMP _0x2080050
                 _0x2080052:
000f56 c04b      	RJMP _0x2080056
                 _0x208004F:
                 _0x2080058:
000f57 e320      	LDI  R18,LOW(48)
000f58 81ee      	LDD  R30,Y+6
000f59 81ff      	LDD  R31,Y+6+1
000f5a 940e 1499 	CALL __GETW1PF
000f5c 87e8      	STD  Y+8,R30
000f5d 87f9      	STD  Y+8+1,R31
000f5e 81ee      	LDD  R30,Y+6
000f5f 81ff      	LDD  R31,Y+6+1
000f60 9632      	ADIW R30,2
000f61 83ee      	STD  Y+6,R30
000f62 83ff      	STD  Y+6+1,R31
                 _0x208005A:
000f63 85e8      	LDD  R30,Y+8
000f64 85f9      	LDD  R31,Y+8+1
000f65 85aa      	LDD  R26,Y+10
000f66 85bb      	LDD  R27,Y+10+1
000f67 17ae      	CP   R26,R30
000f68 07bf      	CPC  R27,R31
000f69 f050      	BRLO _0x208005C
000f6a 5f2f      	SUBI R18,-LOW(1)
000f6b 85a8      	LDD  R26,Y+8
000f6c 85b9      	LDD  R27,Y+8+1
000f6d 85ea      	LDD  R30,Y+10
000f6e 85fb      	LDD  R31,Y+10+1
000f6f 1bea      	SUB  R30,R26
000f70 0bfb      	SBC  R31,R27
000f71 87ea      	STD  Y+10,R30
000f72 87fb      	STD  Y+10+1,R31
000f73 cfef      	RJMP _0x208005A
                 _0x208005C:
000f74 332a      	CPI  R18,58
000f75 f028      	BRLO _0x208005D
000f76 ff03      	SBRS R16,3
000f77 c002      	RJMP _0x208005E
000f78 5f29      	SUBI R18,-LOW(7)
000f79 c001      	RJMP _0x208005F
                 _0x208005E:
000f7a 5d29      	SUBI R18,-LOW(39)
                 _0x208005F:
                 _0x208005D:
000f7b fd04      	SBRC R16,4
000f7c c01a      	RJMP _0x2080061
000f7d 3321      	CPI  R18,49
000f7e f420      	BRSH _0x2080063
000f7f 85a8      	LDD  R26,Y+8
000f80 85b9      	LDD  R27,Y+8+1
000f81 9711      	SBIW R26,1
000f82 f409      	BRNE _0x2080062
                 _0x2080063:
000f83 c009      	RJMP _0x20800CD
                 _0x2080062:
000f84 1753      	CP   R21,R19
000f85 f010      	BRLO _0x2080067
000f86 ff00      	SBRS R16,0
000f87 c001      	RJMP _0x2080068
                 _0x2080067:
000f88 c013      	RJMP _0x2080066
                 _0x2080068:
000f89 e220      	LDI  R18,LOW(32)
000f8a ff07      	SBRS R16,7
000f8b c00b      	RJMP _0x2080069
000f8c e320      	LDI  R18,LOW(48)
                 _0x20800CD:
000f8d 6100      	ORI  R16,LOW(16)
000f8e ff02      	SBRS R16,2
000f8f c007      	RJMP _0x208006A
000f90 7f0b      	ANDI R16,LOW(251)
000f91 934a      	ST   -Y,R20
000f92 940e 124a 	CALL SUBOPT_0x3B
000f94 3050      	CPI  R21,0
000f95 f009      	BREQ _0x208006B
000f96 5051      	SUBI R21,LOW(1)
                 _0x208006B:
                 _0x208006A:
                 _0x2080069:
                 _0x2080061:
000f97 940e 123d 	CALL SUBOPT_0x39
000f99 3050      	CPI  R21,0
000f9a f009      	BREQ _0x208006C
000f9b 5051      	SUBI R21,LOW(1)
                 _0x208006C:
                 _0x2080066:
000f9c 5031      	SUBI R19,LOW(1)
000f9d 85a8      	LDD  R26,Y+8
000f9e 85b9      	LDD  R27,Y+8+1
000f9f 9712      	SBIW R26,2
000fa0 f008      	BRLO _0x2080059
000fa1 cfb5      	RJMP _0x2080058
                 _0x2080059:
                 _0x2080056:
000fa2 ff00      	SBRS R16,0
000fa3 c008      	RJMP _0x208006D
                 _0x208006E:
000fa4 3050      	CPI  R21,0
000fa5 f031      	BREQ _0x2080070
000fa6 5051      	SUBI R21,LOW(1)
000fa7 e2e0      	LDI  R30,LOW(32)
000fa8 93ea      	ST   -Y,R30
000fa9 940e 124a 	CALL SUBOPT_0x3B
000fab cff8      	RJMP _0x208006E
                 _0x2080070:
                 _0x208006D:
                 _0x2080071:
                 _0x2080030:
                 _0x20800CC:
000fac e010      	LDI  R17,LOW(0)
                 _0x208001B:
000fad cee0      	RJMP _0x2080016
                 _0x2080018:
000fae 85ac      	LDD  R26,Y+12
000faf 85bd      	LDD  R27,Y+12+1
000fb0 940e 1495 	CALL __GETW1P
000fb2 940e 14f0 	CALL __LOADLOCR6
000fb4 9664      	ADIW R28,20
000fb5 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000fb6 92ff      	PUSH R15
000fb7 2ef8      	MOV  R15,R24
000fb8 9726      	SBIW R28,6
000fb9 940e 14eb 	CALL __SAVELOCR4
000fbb 940e 1262 	CALL SUBOPT_0x3E
000fbd 9730      	SBIW R30,0
000fbe f419      	BRNE _0x2080072
000fbf efef      	LDI  R30,LOW(65535)
000fc0 efff      	LDI  R31,HIGH(65535)
000fc1 c023      	RJMP _0x2120004
                 _0x2080072:
000fc2 01de      	MOVW R26,R28
000fc3 9616      	ADIW R26,6
000fc4 940e 141c 	CALL __ADDW2R15
000fc6 018d      	MOVW R16,R26
000fc7 940e 1262 	CALL SUBOPT_0x3E
000fc9 83ee      	STD  Y+6,R30
000fca 83ff      	STD  Y+6+1,R31
000fcb e0e0      	LDI  R30,LOW(0)
000fcc 87e8      	STD  Y+8,R30
000fcd 87e9      	STD  Y+8+1,R30
000fce 01de      	MOVW R26,R28
000fcf 961a      	ADIW R26,10
000fd0 940e 141c 	CALL __ADDW2R15
000fd2 940e 1495 	CALL __GETW1P
000fd4 93fa      	ST   -Y,R31
000fd5 93ea      	ST   -Y,R30
000fd6 931a      	ST   -Y,R17
000fd7 930a      	ST   -Y,R16
000fd8 e4e9      	LDI  R30,LOW(_put_buff_G104)
000fd9 e0fe      	LDI  R31,HIGH(_put_buff_G104)
000fda 93fa      	ST   -Y,R31
000fdb 93ea      	ST   -Y,R30
000fdc 01de      	MOVW R26,R28
000fdd 961a      	ADIW R26,10
000fde dea3      	RCALL __print_G104
000fdf 019f      	MOVW R18,R30
000fe0 81ae      	LDD  R26,Y+6
000fe1 81bf      	LDD  R27,Y+6+1
000fe2 e0e0      	LDI  R30,LOW(0)
000fe3 93ec      	ST   X,R30
000fe4 01f9      	MOVW R30,R18
                 _0x2120004:
000fe5 940e 14f2 	CALL __LOADLOCR4
000fe7 962a      	ADIW R28,10
000fe8 90ff      	POP  R15
000fe9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000fea 93ba      	ST   -Y,R27
000feb 93aa      	ST   -Y,R26
000fec 81b9          ldd  r27,y+1
000fed 81a8          ld   r26,y
000fee 9610          adiw r26,0
000fef f031          breq memset1
000ff0 81fc          ldd  r31,y+4
000ff1 81eb          ldd  r30,y+3
000ff2 816a          ldd  r22,y+2
                 memset0:
000ff3 9361          st   z+,r22
000ff4 9711          sbiw r26,1
000ff5 f7e9          brne memset0
                 memset1:
000ff6 81eb          ldd  r30,y+3
000ff7 81fc          ldd  r31,y+4
                 _0x2120003:
000ff8 9625      	ADIW R28,5
000ff9 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000ffa 93ba      	ST   -Y,R27
000ffb 93aa      	ST   -Y,R26
000ffc 91a9          ld   r26,y+
000ffd 91b9          ld   r27,y+
000ffe 27ee          clr  r30
000fff 27ff          clr  r31
                 strlen0:
001000 916d          ld   r22,x+
001001 2366          tst  r22
001002 f011          breq strlen1
001003 9631          adiw r30,1
001004 cffb          rjmp strlen0
                 strlen1:
001005 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
001006 93ba      	ST   -Y,R27
001007 93aa      	ST   -Y,R26
001008 27aa          clr  r26
001009 27bb          clr  r27
00100a 91e9          ld   r30,y+
00100b 91f9          ld   r31,y+
                 strlenf0:
00100c 9005      	lpm  r0,z+
00100d 2000          tst  r0
00100e f011          breq strlenf1
00100f 9611          adiw r26,1
001010 cffb          rjmp strlenf0
                 strlenf1:
001011 01fd          movw r30,r26
001012 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
001013 93aa      	ST   -Y,R26
001014 81e8      	LD   R30,Y
001015 e0f0      	LDI  R31,0
001016 57ec      	SUBI R30,LOW(-__glcd_mask*2)
001017 4ff9      	SBCI R31,HIGH(-__glcd_mask*2)
001018 91a4      	LPM  R26,Z
001019 81e9      	LDD  R30,Y+1
00101a 940e 142c 	CALL __LSLB12
                 _0x2120002:
00101c 9622      	ADIW R28,2
00101d 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
00101e 93aa      	ST   -Y,R26
00101f 931a      	ST   -Y,R17
001020 81e9      	LDD  R30,Y+1
001021 30e7      	CPI  R30,LOW(0x7)
001022 f011      	BREQ _0x20E0007
001023 30ea      	CPI  R30,LOW(0xA)
001024 f419      	BRNE _0x20E0008
                 _0x20E0007:
001025 9110 0174 	LDS  R17,_glcd_state
001027 c009      	RJMP _0x20E0009
                 _0x20E0008:
001028 30e9      	CPI  R30,LOW(0x9)
001029 f419      	BRNE _0x20E000B
                +
00102a 9110 0175+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
00102c c004      	RJMP _0x20E0009
                 _0x20E000B:
00102d 30e8      	CPI  R30,LOW(0x8)
00102e f4a1      	BRNE _0x20E0005
                +
00102f 9110 0184+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20E0009:
                +
001031 91e0 0175+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
001033 30e0      	CPI  R30,0
001034 f049      	BREQ _0x20E000E
001035 3010      	CPI  R17,0
001036 f019      	BREQ _0x20E000F
001037 efef      	LDI  R30,LOW(255)
001038 8118      	LDD  R17,Y+0
001039 c029      	RJMP _0x2120001
                 _0x20E000F:
00103a 81ea      	LDD  R30,Y+2
00103b 95e0      	COM  R30
00103c 8118      	LDD  R17,Y+0
00103d c025      	RJMP _0x2120001
                 _0x20E000E:
00103e 3010      	CPI  R17,0
00103f f419      	BRNE _0x20E0011
001040 e0e0      	LDI  R30,LOW(0)
001041 8118      	LDD  R17,Y+0
001042 c020      	RJMP _0x2120001
                 _0x20E0011:
                 _0x20E0005:
001043 81ea      	LDD  R30,Y+2
001044 8118      	LDD  R17,Y+0
001045 c01d      	RJMP _0x2120001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
001046 93ba      	ST   -Y,R27
001047 93aa      	ST   -Y,R26
001048 81ea      	LDD  R30,Y+2
001049 30e1      	CPI  R30,LOW(0x1)
00104a f421      	BRNE _0x20E0015
00104b 81e8      	LD   R30,Y
00104c 81f9      	LDD  R31,Y+1
00104d 91e4      	LPM  R30,Z
00104e c014      	RJMP _0x2120001
                 _0x20E0015:
00104f 30e2      	CPI  R30,LOW(0x2)
001050 f429      	BRNE _0x20E0016
001051 81a8      	LD   R26,Y
001052 81b9      	LDD  R27,Y+1
001053 940e 14c8 	CALL __EEPROMRDB
001055 c00d      	RJMP _0x2120001
                 _0x20E0016:
001056 30e3      	CPI  R30,LOW(0x3)
001057 f441      	BRNE _0x20E0018
001058 81a8      	LD   R26,Y
001059 81b9      	LDD  R27,Y+1
                +
00105a 91e0 018d+LDS R30 , _glcd_state + ( 25 )
00105c 91f0 018e+LDS R31 , _glcd_state + ( 25 ) + 1
00105e 9509     +ICALL
                 	__CALL1MN _glcd_state,25
00105f c003      	RJMP _0x2120001
                 _0x20E0018:
001060 81a8      	LD   R26,Y
001061 81b9      	LDD  R27,Y+1
001062 91ec      	LD   R30,X
                 _0x2120001:
001063 9623      	ADIW R28,3
001064 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
001065 93aa      	ST   -Y,R26
001066 81eb      	LDD  R30,Y+3
001067 30e0      	CPI  R30,0
001068 f429      	BRNE _0x20E001C
001069 81e8      	LD   R30,Y
00106a 81a9      	LDD  R26,Y+1
00106b 81ba      	LDD  R27,Y+1+1
00106c 93ec      	ST   X,R30
00106d c014      	RJMP _0x20E001B
                 _0x20E001C:
00106e 30e2      	CPI  R30,LOW(0x2)
00106f f431      	BRNE _0x20E001D
001070 81e8      	LD   R30,Y
001071 81a9      	LDD  R26,Y+1
001072 81ba      	LDD  R27,Y+1+1
001073 940e 14d4 	CALL __EEPROMWRB
001075 c00c      	RJMP _0x20E001B
                 _0x20E001D:
001076 30e3      	CPI  R30,LOW(0x3)
001077 f451      	BRNE _0x20E001B
001078 81e9      	LDD  R30,Y+1
001079 81fa      	LDD  R31,Y+1+1
00107a 93fa      	ST   -Y,R31
00107b 93ea      	ST   -Y,R30
00107c 81aa      	LDD  R26,Y+2
                +
00107d 91e0 018f+LDS R30 , _glcd_state + ( 27 )
00107f 91f0 0190+LDS R31 , _glcd_state + ( 27 ) + 1
001081 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20E001B:
001082 9624      	ADIW R28,4
001083 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000174           	.BYTE 0x1D
                 _j:
000191           	.BYTE 0x2
                 _R_data:
000193           	.BYTE 0x8
                 _ks0108_coord_G101:
00019b           	.BYTE 0x3
                 __seed_G105:
00019e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
001084 940e 14b1 	CALL __PUTPARD2
001086 940e 14a2 	CALL __GETD2S0
001088 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
001089 93aa      	ST   -Y,R26
00108a 931a      	ST   -Y,R17
00108b 930a      	ST   -Y,R16
00108c 81ea      	LDD  R30,Y+2
00108d e0f0      	LDI  R31,0
00108e 37e3      	CPI  R30,LOW(0x73)
00108f e0a0      	LDI  R26,HIGH(0x73)
001090 07fa      	CPC  R31,R26
001091 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
001092 81eb      	LDD  R30,Y+3
001093 81fc      	LDD  R31,Y+3+1
001094 e0a6      	LDI  R26,LOW(6)
001095 e0b0      	LDI  R27,HIGH(6)
001096 940e 1478 	CALL __MULW12
001098 940e 1446 	CALL __CWD1
00109a 940e 12df 	CALL __CDF1
00109c 01df      	MOVW R26,R30
00109d 01cb      	MOVW R24,R22
00109e 940e 03f2 	CALL _get_radian
0010a0 01df      	MOVW R26,R30
0010a1 01cb      	MOVW R24,R22
0010a2 940c 05c4 	JMP  _sin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
                +
0010a4 e0a0     +LDI R26 , LOW ( 0x41D80000 )
0010a5 e0b0     +LDI R27 , HIGH ( 0x41D80000 )
0010a6 ed88     +LDI R24 , BYTE3 ( 0x41D80000 )
0010a7 e491     +LDI R25 , BYTE4 ( 0x41D80000 )
                 	__GETD2N 0x41D80000
0010a8 940e 1369 	CALL __MULF12
0010aa 81ad      	LDD  R26,Y+5
0010ab 81be      	LDD  R27,Y+5+1
0010ac 940e 144b 	CALL __CWD2
0010ae 940e 14b8 	CALL __CDF2
0010b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
0010b1 940e 1319 	CALL __ADDF12
0010b3 940e 12a8 	CALL __CFD1
0010b5 018f      	MOVW R16,R30
0010b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5:
                +
0010b7 e0a0     +LDI R26 , LOW ( 0x41B80000 )
0010b8 e0b0     +LDI R27 , HIGH ( 0x41B80000 )
0010b9 eb88     +LDI R24 , BYTE3 ( 0x41B80000 )
0010ba e491     +LDI R25 , BYTE4 ( 0x41B80000 )
                 	__GETD2N 0x41B80000
0010bb 940e 1369 	CALL __MULF12
0010bd 81ad      	LDD  R26,Y+5
0010be 81be      	LDD  R27,Y+5+1
0010bf 940e 144b 	CALL __CWD2
0010c1 940e 14b8 	CALL __CDF2
0010c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x6:
0010c4 81eb      	LDD  R30,Y+3
0010c5 81fc      	LDD  R31,Y+3+1
0010c6 e1ae      	LDI  R26,LOW(30)
0010c7 e0b0      	LDI  R27,HIGH(30)
0010c8 940e 1478 	CALL __MULW12
0010ca 940e 1446 	CALL __CWD1
0010cc 940e 12df 	CALL __CDF1
0010ce 01df      	MOVW R26,R30
0010cf 01cb      	MOVW R24,R22
0010d0 940e 03f2 	CALL _get_radian
0010d2 01df      	MOVW R26,R30
0010d3 01cb      	MOVW R24,R22
0010d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7:
                +
0010d5 e0a0     +LDI R26 , LOW ( 0x41900000 )
0010d6 e0b0     +LDI R27 , HIGH ( 0x41900000 )
0010d7 e980     +LDI R24 , BYTE3 ( 0x41900000 )
0010d8 e491     +LDI R25 , BYTE4 ( 0x41900000 )
                 	__GETD2N 0x41900000
0010d9 940e 1369 	CALL __MULF12
0010db 81ad      	LDD  R26,Y+5
0010dc 81be      	LDD  R27,Y+5+1
0010dd 940e 144b 	CALL __CWD2
0010df 940e 14b8 	CALL __CDF2
0010e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8:
0010e2 81eb      	LDD  R30,Y+3
0010e3 81fc      	LDD  R31,Y+3+1
0010e4 e0a6      	LDI  R26,LOW(6)
0010e5 e0b0      	LDI  R27,HIGH(6)
0010e6 940e 1478 	CALL __MULW12
0010e8 940e 1446 	CALL __CWD1
0010ea 940e 12df 	CALL __CDF1
0010ec 01df      	MOVW R26,R30
0010ed 01cb      	MOVW R24,R22
0010ee 940e 03f2 	CALL _get_radian
0010f0 01df      	MOVW R26,R30
0010f1 01cb      	MOVW R24,R22
0010f2 940c 0650 	JMP  _cos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
0010f4 940e 14bb 	CALL __SWAPD12
0010f6 940e 1312 	CALL __SUBF12
0010f8 940e 12a8 	CALL __CFD1
0010fa 018f      	MOVW R16,R30
0010fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
0010fc 931a      	ST   -Y,R17
0010fd 930a      	ST   -Y,R16
0010fe 85eb      	LDD  R30,Y+11
0010ff 85fc      	LDD  R31,Y+11+1
001100 93fa      	ST   -Y,R31
001101 93ea      	ST   -Y,R30
001102 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xB:
001103 940e 03fc 	CALL _get_clock_unit_x2
001105 019f      	MOVW R18,R30
001106 935a      	ST   -Y,R21
001107 934a      	ST   -Y,R20
001108 85eb      	LDD  R30,Y+11
001109 85fc      	LDD  R31,Y+11+1
00110a 93fa      	ST   -Y,R31
00110b 93ea      	ST   -Y,R30
00110c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
00110d 940e 041e 	CALL _get_clock_unit_y2
00110f 83ee      	STD  Y+6,R30
001110 83ff      	STD  Y+6+1,R31
001111 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
001112 940e 1446 	CALL __CWD1
001114 940e 14ac 	CALL __PUTPARD1
001116 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
001117 940e 0af8 	CALL _glcd_outtextxy
001119 e1ee      	LDI  R30,LOW(30)
00111a 93ea      	ST   -Y,R30
00111b e3e2      	LDI  R30,LOW(50)
00111c 93ea      	ST   -Y,R30
00111d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00111e 91ed      	LD   R30,X+
00111f 91fd      	LD   R31,X+
001120 9631      	ADIW R30,1
001121 93fe      	ST   -X,R31
001122 93ee      	ST   -X,R30
001123 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x10:
                +
001124 81ad     +LDD R26 , Y + 5
001125 81be     +LDD R27 , Y + 5 + 1
001126 818f     +LDD R24 , Y + 5 + 2
001127 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
001128 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
001129 83ed     +STD Y + 5 , R30
00112a 83fe     +STD Y + 5 + 1 , R31
00112b 836f     +STD Y + 5 + 2 , R22
00112c 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00112d cff6      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
                +
00112e 81ed     +LDD R30 , Y + 5
00112f 81fe     +LDD R31 , Y + 5 + 1
001130 816f     +LDD R22 , Y + 5 + 2
001131 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
001132 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
001133 940e 1312 	CALL __SUBF12
                +
001135 83ed     +STD Y + 5 , R30
001136 83fe     +STD Y + 5 + 1 , R31
001137 836f     +STD Y + 5 + 2 , R22
001138 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
001139 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
                +
00113a 81a9     +LDD R26 , Y + 1
00113b 81ba     +LDD R27 , Y + 1 + 1
00113c 818b     +LDD R24 , Y + 1 + 2
00113d 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00113e 940e 1369 	CALL __MULF12
001140 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x15:
001141 9891      	CBI  0x12,1
001142 efef      	LDI  R30,LOW(255)
001143 bbe4      	OUT  0x14,R30
001144 81e8      	LD   R30,Y
001145 bbe5      	OUT  0x15,R30
001146 940e 065c 	CALL _ks0108_enable_G101
001148 940c 0660 	JMP  _ks0108_disable_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
00114a 95e6      	LSR  R30
00114b 95e6      	LSR  R30
00114c 95e6      	LSR  R30
00114d 2fae      	MOV  R26,R30
00114e 940c 069c 	JMP  _ks0108_gotoxp_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
001150 940e 06c0 	CALL _ks0108_wrdata_G101
001152 940c 06ab 	JMP  _ks0108_nextx_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
001154 0fea      	ADD  R30,R26
001155 1ffb      	ADC  R31,R27
001156 83ee      	STD  Y+6,R30
001157 83ff      	STD  Y+6+1,R31
001158 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x19:
001159 85ec      	LDD  R30,Y+12
00115a 93ea      	ST   -Y,R30
00115b 81ef      	LDD  R30,Y+7
00115c 85f8      	LDD  R31,Y+7+1
00115d 9631      	ADIW R30,1
00115e 83ef      	STD  Y+7,R30
00115f 87f8      	STD  Y+7+1,R31
001160 9731      	SBIW R30,1
001161 93fa      	ST   -Y,R31
001162 93ea      	ST   -Y,R30
001163 e0a0      	LDI  R26,LOW(0)
001164 940c 1065 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1A:
001166 85ec      	LDD  R30,Y+12
001167 93ea      	ST   -Y,R30
001168 81ef      	LDD  R30,Y+7
001169 85f8      	LDD  R31,Y+7+1
00116a 9631      	ADIW R30,1
00116b 83ef      	STD  Y+7,R30
00116c 87f8      	STD  Y+7+1,R31
00116d 9731      	SBIW R30,1
00116e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B:
00116f 2766      	CLR  R22
001170 2777      	CLR  R23
001171 01df      	MOVW R26,R30
001172 01cb      	MOVW R24,R22
001173 940c 1046 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
001175 935a      	ST   -Y,R21
001176 85aa      	LDD  R26,Y+10
001177 940c 101e 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
001179 930a      	ST   -Y,R16
00117a 9503      	INC  R16
00117b 89e8      	LDD  R30,Y+16
00117c 93ea      	ST   -Y,R30
00117d 935a      	ST   -Y,R21
00117e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
00117f 930a      	ST   -Y,R16
001180 9503      	INC  R16
001181 89a8      	LDD  R26,Y+16
001182 940e 06d2 	CALL _ks0108_rdbyte_G101
001184 23e4      	AND  R30,R20
001185 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
001186 2f5e      	MOV  R21,R30
001187 85ec      	LDD  R30,Y+12
001188 93ea      	ST   -Y,R30
001189 81af      	LDD  R26,Y+7
00118a 85b8      	LDD  R27,Y+7+1
00118b 2788      	CLR  R24
00118c 2799      	CLR  R25
00118d 940e 1046 	CALL _glcd_readmem
00118f 2e1e      	MOV  R1,R30
001190 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20:
001191 930a      	ST   -Y,R16
001192 9503      	INC  R16
001193 89e8      	LDD  R30,Y+16
001194 93ea      	ST   -Y,R30
001195 85ee      	LDD  R30,Y+14
001196 93ea      	ST   -Y,R30
001197 85e9      	LDD  R30,Y+9
001198 85fa      	LDD  R31,Y+9+1
001199 9631      	ADIW R30,1
00119a 87e9      	STD  Y+9,R30
00119b 87fa      	STD  Y+9+1,R31
00119c 9731      	SBIW R30,1
00119d cfd1      	RJMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
00119e 93ba      	ST   -Y,R27
00119f 93aa      	ST   -Y,R26
0011a0 81a8      	LD   R26,Y
0011a1 81b9      	LDD  R27,Y+1
0011a2 940e 14e5 	CALL __CPW02
0011a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
0011a5 940e 14e9 	CALL __SAVELOCR6
                +
0011a7 91e0 0178+LDS R30 , _glcd_state + ( 4 )
0011a9 91f0 0179+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0011ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
0011ac 01f8      	MOVW R30,R16
                +
0011ad 5f0f     +SUBI R16 , LOW ( - 1 )
0011ae 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0011af 9004      	LPM  R0,Z
0011b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24:
                +
0011b1 91e0 0178+LDS R30 , _glcd_state + ( 4 )
0011b3 91f0 0179+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0011b5 9631      	ADIW R30,1
0011b6 91e4      	LPM  R30,Z
0011b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
0011b8 e0f0      	LDI  R31,0
0011b9 0fea      	ADD  R30,R26
0011ba 1ffb      	ADC  R31,R27
0011bb 018f      	MOVW R16,R30
0011bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
0011bd 93ea      	ST   -Y,R30
0011be e0e0      	LDI  R30,LOW(0)
0011bf 93ea      	ST   -Y,R30
0011c0 e0e0      	LDI  R30,LOW(0)
0011c1 e0f0      	LDI  R31,HIGH(0)
0011c2 93fa      	ST   -Y,R31
0011c3 93ea      	ST   -Y,R30
0011c4 e0a9      	LDI  R26,LOW(9)
0011c5 940c 07dd 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
0011c7 83ed      	STD  Y+5,R30
0011c8 83fe      	STD  Y+5+1,R31
0011c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x28:
0011ca 81ae      	LDD  R26,Y+6
0011cb 5faf      	SUBI R26,-LOW(1)
0011cc 83ae      	STD  Y+6,R26
0011cd 50a1      	SUBI R26,LOW(1)
                +
0011ce 91e0 017c+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0011d0 17ae      	CP   R26,R30
0011d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0011d2 933a      	ST   -Y,R19
0011d3 85aa      	LDD  R26,Y+10
0011d4 940c 0b3b 	JMP  _glcd_putpixelm_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0011d6 85a9      	LDD  R26,Y+9
0011d7 85ba      	LDD  R27,Y+9+1
0011d8 0fea      	ADD  R30,R26
0011d9 1ffb      	ADC  R31,R27
0011da 87e9      	STD  Y+9,R30
0011db 87fa      	STD  Y+9+1,R31
0011dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
0011dd 85e9      	LDD  R30,Y+9
0011de 85fa      	LDD  R31,Y+9+1
0011df 1bea      	SUB  R30,R26
0011e0 0bfb      	SBC  R31,R27
0011e1 87e9      	STD  Y+9,R30
0011e2 87fa      	STD  Y+9+1,R31
0011e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
0011e4 e0f0      	LDI  R31,0
0011e5 1bae      	SUB  R26,R30
0011e6 0bbf      	SBC  R27,R31
0011e7 019d      	MOVW R18,R26
0011e8 89a9      	LDD  R26,Y+17
0011e9 27bb      	CLR  R27
0011ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2D:
0011eb e0f0      	LDI  R31,0
0011ec 0fea      	ADD  R30,R26
0011ed 1ffb      	ADC  R31,R27
0011ee 01af      	MOVW R20,R30
0011ef 85e8      	LDD  R30,Y+8
0011f0 78e1      	ANDI R30,LOW(0x81)
0011f1 38e1      	CPI  R30,LOW(0x81)
0011f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2E:
0011f3 1bea      	SUB  R30,R26
0011f4 0bfb      	SBC  R31,R27
0011f5 010f      	MOVW R0,R30
0011f6 01df      	MOVW R26,R30
0011f7 85eb      	LDD  R30,Y+11
0011f8 85fc      	LDD  R31,Y+11+1
0011f9 17ae      	CP   R26,R30
0011fa 07bf      	CPC  R27,R31
0011fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
0011fc 85e9      	LDD  R30,Y+9
0011fd 85fa      	LDD  R31,Y+9+1
0011fe 15e0      	CP   R30,R0
0011ff 05f1      	CPC  R31,R1
001200 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
001201 930a      	ST   -Y,R16
001202 2fa2      	MOV  R26,R18
001203 940c 09de 	JMP  _glcd_setpixel
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31:
001205 930a      	ST   -Y,R16
001206 2fa2      	MOV  R26,R18
001207 50a2      	SUBI R26,LOW(2)
001208 940e 0789 	CALL _glcd_getpixel
00120a 2fae      	MOV  R26,R30
00120b 81ee      	LDD  R30,Y+6
00120c 17ea      	CP   R30,R26
00120d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
00120e 85eb      	LDD  R30,Y+11
00120f 85fc      	LDD  R31,Y+11+1
001210 17ae      	CP   R26,R30
001211 07bf      	CPC  R27,R31
001212 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
001213 85e9      	LDD  R30,Y+9
001214 85fa      	LDD  R31,Y+9+1
001215 17ea      	CP   R30,R26
001216 07fb      	CPC  R31,R27
001217 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x34:
001218 930a      	ST   -Y,R16
001219 2fa4      	MOV  R26,R20
00121a 940e 09de 	CALL _glcd_setpixel
00121c 81af      	LDD  R26,Y+7
00121d 30a2      	CPI  R26,LOW(0x2)
00121e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35:
00121f 930a      	ST   -Y,R16
001220 2fa4      	MOV  R26,R20
001221 5fae      	SUBI R26,-LOW(2)
001222 940e 0789 	CALL _glcd_getpixel
001224 2fae      	MOV  R26,R30
001225 81ee      	LDD  R30,Y+6
001226 17ea      	CP   R30,R26
001227 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x36:
001228 93ea      	ST   -Y,R30
001229 2fa2      	MOV  R26,R18
00122a 940e 0789 	CALL _glcd_getpixel
00122c 2fae      	MOV  R26,R30
00122d 81ee      	LDD  R30,Y+6
00122e 17ea      	CP   R30,R26
00122f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37:
001230 93ea      	ST   -Y,R30
001231 2fa4      	MOV  R26,R20
001232 940e 0789 	CALL _glcd_getpixel
001234 2fae      	MOV  R26,R30
001235 81ee      	LDD  R30,Y+6
001236 17ea      	CP   R30,R26
001237 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
001238 85e9      	LDD  R30,Y+9
001239 93ea      	ST   -Y,R30
00123a 85e9      	LDD  R30,Y+9
00123b 93ea      	ST   -Y,R30
00123c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x39:
00123d 932a      	ST   -Y,R18
00123e 85ad      	LDD  R26,Y+13
00123f 85be      	LDD  R27,Y+13+1
001240 85ef      	LDD  R30,Y+15
001241 89f8      	LDD  R31,Y+15+1
001242 9509      	ICALL
001243 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3A:
001244 89e8      	LDD  R30,Y+16
001245 89f9      	LDD  R31,Y+16+1
001246 9734      	SBIW R30,4
001247 8be8      	STD  Y+16,R30
001248 8bf9      	STD  Y+16+1,R31
001249 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
00124a 85ad      	LDD  R26,Y+13
00124b 85be      	LDD  R27,Y+13+1
00124c 85ef      	LDD  R30,Y+15
00124d 89f8      	LDD  R31,Y+15+1
00124e 9509      	ICALL
00124f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3C:
001250 89a8      	LDD  R26,Y+16
001251 89b9      	LDD  R27,Y+16+1
001252 9614      	ADIW R26,4
001253 940e 1495 	CALL __GETW1P
001255 83ee      	STD  Y+6,R30
001256 83ff      	STD  Y+6+1,R31
001257 81ae      	LDD  R26,Y+6
001258 81bf      	LDD  R27,Y+6+1
001259 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D:
00125a 89a8      	LDD  R26,Y+16
00125b 89b9      	LDD  R27,Y+16+1
00125c 9614      	ADIW R26,4
00125d 940e 1495 	CALL __GETW1P
00125f 87ea      	STD  Y+10,R30
001260 87fb      	STD  Y+10+1,R31
001261 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E:
001262 01de      	MOVW R26,R28
001263 961c      	ADIW R26,12
001264 940e 141c 	CALL __ADDW2R15
001266 940e 1495 	CALL __GETW1P
001268 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001269 9610      	adiw r26,0
00126a f039      	breq __delay_ms1
                 __delay_ms0:
                +
00126b ed80     +LDI R24 , LOW ( 0x7D0 )
00126c e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00126d 9701     +SBIW R24 , 1
00126e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00126f 95a8      	wdr
001270 9711      	sbiw r26,1
001271 f7c9      	brne __delay_ms0
                 __delay_ms1:
001272 9508      	ret
                 
                 __ANEGF1:
001273 9730      	SBIW R30,0
001274 4060      	SBCI R22,0
001275 4070      	SBCI R23,0
001276 f009      	BREQ __ANEGF10
001277 5870      	SUBI R23,0x80
                 __ANEGF10:
001278 9508      	RET
                 
                 __ROUND_REPACK:
001279 2355      	TST  R21
00127a f442      	BRPL __REPACK
00127b 3850      	CPI  R21,0x80
00127c f411      	BRNE __ROUND_REPACK0
00127d ffe0      	SBRS R30,0
00127e c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00127f 9631      	ADIW R30,1
001280 1f69      	ADC  R22,R25
001281 1f79      	ADC  R23,R25
001282 f06b      	BRVS __REPACK1
                 
                 __REPACK:
001283 e850      	LDI  R21,0x80
001284 2757      	EOR  R21,R23
001285 f411      	BRNE __REPACK0
001286 935f      	PUSH R21
001287 c0cf      	RJMP __ZERORES
                 __REPACK0:
001288 3f5f      	CPI  R21,0xFF
001289 f031      	BREQ __REPACK1
00128a 0f66      	LSL  R22
00128b 0c00      	LSL  R0
00128c 9557      	ROR  R21
00128d 9567      	ROR  R22
00128e 2f75      	MOV  R23,R21
00128f 9508      	RET
                 __REPACK1:
001290 935f      	PUSH R21
001291 2000      	TST  R0
001292 f00a      	BRMI __REPACK2
001293 c0cf      	RJMP __MAXRES
                 __REPACK2:
001294 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
001295 e850      	LDI  R21,0x80
001296 2e19      	MOV  R1,R25
001297 2215      	AND  R1,R21
001298 0f88      	LSL  R24
001299 1f99      	ROL  R25
00129a 2795      	EOR  R25,R21
00129b 0f55      	LSL  R21
00129c 9587      	ROR  R24
                 
                 __UNPACK1:
00129d e850      	LDI  R21,0x80
00129e 2e07      	MOV  R0,R23
00129f 2205      	AND  R0,R21
0012a0 0f66      	LSL  R22
0012a1 1f77      	ROL  R23
0012a2 2775      	EOR  R23,R21
0012a3 0f55      	LSL  R21
0012a4 9567      	ROR  R22
0012a5 9508      	RET
                 
                 __CFD1U:
0012a6 9468      	SET
0012a7 c001      	RJMP __CFD1U0
                 __CFD1:
0012a8 94e8      	CLT
                 __CFD1U0:
0012a9 935f      	PUSH R21
0012aa dff2      	RCALL __UNPACK1
0012ab 3870      	CPI  R23,0x80
0012ac f018      	BRLO __CFD10
0012ad 3f7f      	CPI  R23,0xFF
0012ae f408      	BRCC __CFD10
0012af c0a7      	RJMP __ZERORES
                 __CFD10:
0012b0 e156      	LDI  R21,22
0012b1 1b57      	SUB  R21,R23
0012b2 f4aa      	BRPL __CFD11
0012b3 9551      	NEG  R21
0012b4 3058      	CPI  R21,8
0012b5 f40e      	BRTC __CFD19
0012b6 3059      	CPI  R21,9
                 __CFD19:
0012b7 f030      	BRLO __CFD17
0012b8 efef      	SER  R30
0012b9 efff      	SER  R31
0012ba ef6f      	SER  R22
0012bb e77f      	LDI  R23,0x7F
0012bc f977      	BLD  R23,7
0012bd c01a      	RJMP __CFD15
                 __CFD17:
0012be 2777      	CLR  R23
0012bf 2355      	TST  R21
0012c0 f0b9      	BREQ __CFD15
                 __CFD18:
0012c1 0fee      	LSL  R30
0012c2 1fff      	ROL  R31
0012c3 1f66      	ROL  R22
0012c4 1f77      	ROL  R23
0012c5 955a      	DEC  R21
0012c6 f7d1      	BRNE __CFD18
0012c7 c010      	RJMP __CFD15
                 __CFD11:
0012c8 2777      	CLR  R23
                 __CFD12:
0012c9 3058      	CPI  R21,8
0012ca f028      	BRLO __CFD13
0012cb 2fef      	MOV  R30,R31
0012cc 2ff6      	MOV  R31,R22
0012cd 2f67      	MOV  R22,R23
0012ce 5058      	SUBI R21,8
0012cf cff9      	RJMP __CFD12
                 __CFD13:
0012d0 2355      	TST  R21
0012d1 f031      	BREQ __CFD15
                 __CFD14:
0012d2 9576      	LSR  R23
0012d3 9567      	ROR  R22
0012d4 95f7      	ROR  R31
0012d5 95e7      	ROR  R30
0012d6 955a      	DEC  R21
0012d7 f7d1      	BRNE __CFD14
                 __CFD15:
0012d8 2000      	TST  R0
0012d9 f40a      	BRPL __CFD16
0012da d149      	RCALL __ANEGD1
                 __CFD16:
0012db 915f      	POP  R21
0012dc 9508      	RET
                 
                 __CDF1U:
0012dd 9468      	SET
0012de c001      	RJMP __CDF1U0
                 __CDF1:
0012df 94e8      	CLT
                 __CDF1U0:
0012e0 9730      	SBIW R30,0
0012e1 4060      	SBCI R22,0
0012e2 4070      	SBCI R23,0
0012e3 f0b1      	BREQ __CDF10
0012e4 2400      	CLR  R0
0012e5 f026      	BRTS __CDF11
0012e6 2377      	TST  R23
0012e7 f412      	BRPL __CDF11
0012e8 9400      	COM  R0
0012e9 d13a      	RCALL __ANEGD1
                 __CDF11:
0012ea 2e17      	MOV  R1,R23
0012eb e17e      	LDI  R23,30
0012ec 2011      	TST  R1
                 __CDF12:
0012ed f032      	BRMI __CDF13
0012ee 957a      	DEC  R23
0012ef 0fee      	LSL  R30
0012f0 1fff      	ROL  R31
0012f1 1f66      	ROL  R22
0012f2 1c11      	ROL  R1
0012f3 cff9      	RJMP __CDF12
                 __CDF13:
0012f4 2fef      	MOV  R30,R31
0012f5 2ff6      	MOV  R31,R22
0012f6 2d61      	MOV  R22,R1
0012f7 935f      	PUSH R21
0012f8 df8a      	RCALL __REPACK
0012f9 915f      	POP  R21
                 __CDF10:
0012fa 9508      	RET
                 
                 __SWAPACC:
0012fb 934f      	PUSH R20
0012fc 01af      	MOVW R20,R30
0012fd 01fd      	MOVW R30,R26
0012fe 01da      	MOVW R26,R20
0012ff 01ab      	MOVW R20,R22
001300 01bc      	MOVW R22,R24
001301 01ca      	MOVW R24,R20
001302 2d40      	MOV  R20,R0
001303 2c01      	MOV  R0,R1
001304 2e14      	MOV  R1,R20
001305 914f      	POP  R20
001306 9508      	RET
                 
                 __UADD12:
001307 0fea      	ADD  R30,R26
001308 1ffb      	ADC  R31,R27
001309 1f68      	ADC  R22,R24
00130a 9508      	RET
                 
                 __NEGMAN1:
00130b 95e0      	COM  R30
00130c 95f0      	COM  R31
00130d 9560      	COM  R22
00130e 5fef      	SUBI R30,-1
00130f 4fff      	SBCI R31,-1
001310 4f6f      	SBCI R22,-1
001311 9508      	RET
                 
                 __SUBF12:
001312 935f      	PUSH R21
001313 df81      	RCALL __UNPACK
001314 3890      	CPI  R25,0x80
001315 f171      	BREQ __ADDF129
001316 e850      	LDI  R21,0x80
001317 2615      	EOR  R1,R21
                 
001318 c004      	RJMP __ADDF120
                 
                 __ADDF12:
001319 935f      	PUSH R21
00131a df7a      	RCALL __UNPACK
00131b 3890      	CPI  R25,0x80
00131c f139      	BREQ __ADDF129
                 
                 __ADDF120:
00131d 3870      	CPI  R23,0x80
00131e f121      	BREQ __ADDF128
                 __ADDF121:
00131f 2f57      	MOV  R21,R23
001320 1b59      	SUB  R21,R25
001321 f12b      	BRVS __ADDF1211
001322 f412      	BRPL __ADDF122
001323 dfd7      	RCALL __SWAPACC
001324 cffa      	RJMP __ADDF121
                 __ADDF122:
001325 3158      	CPI  R21,24
001326 f018      	BRLO __ADDF123
001327 27aa      	CLR  R26
001328 27bb      	CLR  R27
001329 2788      	CLR  R24
                 __ADDF123:
00132a 3058      	CPI  R21,8
00132b f028      	BRLO __ADDF124
00132c 2fab      	MOV  R26,R27
00132d 2fb8      	MOV  R27,R24
00132e 2788      	CLR  R24
00132f 5058      	SUBI R21,8
001330 cff9      	RJMP __ADDF123
                 __ADDF124:
001331 2355      	TST  R21
001332 f029      	BREQ __ADDF126
                 __ADDF125:
001333 9586      	LSR  R24
001334 95b7      	ROR  R27
001335 95a7      	ROR  R26
001336 955a      	DEC  R21
001337 f7d9      	BRNE __ADDF125
                 __ADDF126:
001338 2d50      	MOV  R21,R0
001339 2551      	EOR  R21,R1
00133a f072      	BRMI __ADDF127
00133b dfcb      	RCALL __UADD12
00133c f438      	BRCC __ADDF129
00133d 9567      	ROR  R22
00133e 95f7      	ROR  R31
00133f 95e7      	ROR  R30
001340 9573      	INC  R23
001341 f413      	BRVC __ADDF129
001342 c020      	RJMP __MAXRES
                 __ADDF128:
001343 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001344 df3e      	RCALL __REPACK
001345 915f      	POP  R21
001346 9508      	RET
                 __ADDF1211:
001347 f7d8      	BRCC __ADDF128
001348 cffb      	RJMP __ADDF129
                 __ADDF127:
001349 1bea      	SUB  R30,R26
00134a 0bfb      	SBC  R31,R27
00134b 0b68      	SBC  R22,R24
00134c f051      	BREQ __ZERORES
00134d f410      	BRCC __ADDF1210
00134e 9400      	COM  R0
00134f dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
001350 2366      	TST  R22
001351 f392      	BRMI __ADDF129
001352 0fee      	LSL  R30
001353 1fff      	ROL  R31
001354 1f66      	ROL  R22
001355 957a      	DEC  R23
001356 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
001357 27ee      	CLR  R30
001358 27ff      	CLR  R31
001359 2766      	CLR  R22
00135a 2777      	CLR  R23
00135b 915f      	POP  R21
00135c 9508      	RET
                 
                 __MINRES:
00135d efef      	SER  R30
00135e efff      	SER  R31
00135f e76f      	LDI  R22,0x7F
001360 ef7f      	SER  R23
001361 915f      	POP  R21
001362 9508      	RET
                 
                 __MAXRES:
001363 efef      	SER  R30
001364 efff      	SER  R31
001365 e76f      	LDI  R22,0x7F
001366 e77f      	LDI  R23,0x7F
001367 915f      	POP  R21
001368 9508      	RET
                 
                 __MULF12:
001369 935f      	PUSH R21
00136a df2a      	RCALL __UNPACK
00136b 3870      	CPI  R23,0x80
00136c f351      	BREQ __ZERORES
00136d 3890      	CPI  R25,0x80
00136e f341      	BREQ __ZERORES
00136f 2401      	EOR  R0,R1
001370 9408      	SEC
001371 1f79      	ADC  R23,R25
001372 f423      	BRVC __MULF124
001373 f31c      	BRLT __ZERORES
                 __MULF125:
001374 2000      	TST  R0
001375 f33a      	BRMI __MINRES
001376 cfec      	RJMP __MAXRES
                 __MULF124:
001377 920f      	PUSH R0
001378 931f      	PUSH R17
001379 932f      	PUSH R18
00137a 933f      	PUSH R19
00137b 934f      	PUSH R20
00137c 2711      	CLR  R17
00137d 2722      	CLR  R18
00137e 2799      	CLR  R25
00137f 9f68      	MUL  R22,R24
001380 01a0      	MOVW R20,R0
001381 9f8f      	MUL  R24,R31
001382 2d30      	MOV  R19,R0
001383 0d41      	ADD  R20,R1
001384 1f59      	ADC  R21,R25
001385 9f6b      	MUL  R22,R27
001386 0d30      	ADD  R19,R0
001387 1d41      	ADC  R20,R1
001388 1f59      	ADC  R21,R25
001389 9f8e      	MUL  R24,R30
00138a d027      	RCALL __MULF126
00138b 9fbf      	MUL  R27,R31
00138c d025      	RCALL __MULF126
00138d 9f6a      	MUL  R22,R26
00138e d023      	RCALL __MULF126
00138f 9fbe      	MUL  R27,R30
001390 d01d      	RCALL __MULF127
001391 9faf      	MUL  R26,R31
001392 d01b      	RCALL __MULF127
001393 9fae      	MUL  R26,R30
001394 0d11      	ADD  R17,R1
001395 1f29      	ADC  R18,R25
001396 1f39      	ADC  R19,R25
001397 1f49      	ADC  R20,R25
001398 1f59      	ADC  R21,R25
001399 2fe3      	MOV  R30,R19
00139a 2ff4      	MOV  R31,R20
00139b 2f65      	MOV  R22,R21
00139c 2f52      	MOV  R21,R18
00139d 914f      	POP  R20
00139e 913f      	POP  R19
00139f 912f      	POP  R18
0013a0 911f      	POP  R17
0013a1 900f      	POP  R0
0013a2 2366      	TST  R22
0013a3 f02a      	BRMI __MULF122
0013a4 0f55      	LSL  R21
0013a5 1fee      	ROL  R30
0013a6 1fff      	ROL  R31
0013a7 1f66      	ROL  R22
0013a8 c002      	RJMP __MULF123
                 __MULF122:
0013a9 9573      	INC  R23
0013aa f24b      	BRVS __MULF125
                 __MULF123:
0013ab decd      	RCALL __ROUND_REPACK
0013ac 915f      	POP  R21
0013ad 9508      	RET
                 
                 __MULF127:
0013ae 0d10      	ADD  R17,R0
0013af 1d21      	ADC  R18,R1
0013b0 1f39      	ADC  R19,R25
0013b1 c002      	RJMP __MULF128
                 __MULF126:
0013b2 0d20      	ADD  R18,R0
0013b3 1d31      	ADC  R19,R1
                 __MULF128:
0013b4 1f49      	ADC  R20,R25
0013b5 1f59      	ADC  R21,R25
0013b6 9508      	RET
                 
                 __DIVF21:
0013b7 935f      	PUSH R21
0013b8 dedc      	RCALL __UNPACK
0013b9 3870      	CPI  R23,0x80
0013ba f421      	BRNE __DIVF210
0013bb 2011      	TST  R1
                 __DIVF211:
0013bc f40a      	BRPL __DIVF219
0013bd cf9f      	RJMP __MINRES
                 __DIVF219:
0013be cfa4      	RJMP __MAXRES
                 __DIVF210:
0013bf 3890      	CPI  R25,0x80
0013c0 f409      	BRNE __DIVF218
                 __DIVF217:
0013c1 cf95      	RJMP __ZERORES
                 __DIVF218:
0013c2 2401      	EOR  R0,R1
0013c3 9408      	SEC
0013c4 0b97      	SBC  R25,R23
0013c5 f41b      	BRVC __DIVF216
0013c6 f3d4      	BRLT __DIVF217
0013c7 2000      	TST  R0
0013c8 cff3      	RJMP __DIVF211
                 __DIVF216:
0013c9 2f79      	MOV  R23,R25
0013ca 931f      	PUSH R17
0013cb 932f      	PUSH R18
0013cc 933f      	PUSH R19
0013cd 934f      	PUSH R20
0013ce 2411      	CLR  R1
0013cf 2711      	CLR  R17
0013d0 2722      	CLR  R18
0013d1 2733      	CLR  R19
0013d2 2744      	CLR  R20
0013d3 2755      	CLR  R21
0013d4 e290      	LDI  R25,32
                 __DIVF212:
0013d5 17ae      	CP   R26,R30
0013d6 07bf      	CPC  R27,R31
0013d7 0786      	CPC  R24,R22
0013d8 0741      	CPC  R20,R17
0013d9 f030      	BRLO __DIVF213
0013da 1bae      	SUB  R26,R30
0013db 0bbf      	SBC  R27,R31
0013dc 0b86      	SBC  R24,R22
0013dd 0b41      	SBC  R20,R17
0013de 9408      	SEC
0013df c001      	RJMP __DIVF214
                 __DIVF213:
0013e0 9488      	CLC
                 __DIVF214:
0013e1 1f55      	ROL  R21
0013e2 1f22      	ROL  R18
0013e3 1f33      	ROL  R19
0013e4 1c11      	ROL  R1
0013e5 1faa      	ROL  R26
0013e6 1fbb      	ROL  R27
0013e7 1f88      	ROL  R24
0013e8 1f44      	ROL  R20
0013e9 959a      	DEC  R25
0013ea f751      	BRNE __DIVF212
0013eb 01f9      	MOVW R30,R18
0013ec 2d61      	MOV  R22,R1
0013ed 914f      	POP  R20
0013ee 913f      	POP  R19
0013ef 912f      	POP  R18
0013f0 911f      	POP  R17
0013f1 2366      	TST  R22
0013f2 f032      	BRMI __DIVF215
0013f3 0f55      	LSL  R21
0013f4 1fee      	ROL  R30
0013f5 1fff      	ROL  R31
0013f6 1f66      	ROL  R22
0013f7 957a      	DEC  R23
0013f8 f243      	BRVS __DIVF217
                 __DIVF215:
0013f9 de7f      	RCALL __ROUND_REPACK
0013fa 915f      	POP  R21
0013fb 9508      	RET
                 
                 __CMPF12:
0013fc 2399      	TST  R25
0013fd f09a      	BRMI __CMPF120
0013fe 2377      	TST  R23
0013ff f042      	BRMI __CMPF121
001400 1797      	CP   R25,R23
001401 f048      	BRLO __CMPF122
001402 f429      	BRNE __CMPF121
001403 17ae      	CP   R26,R30
001404 07bf      	CPC  R27,R31
001405 0786      	CPC  R24,R22
001406 f020      	BRLO __CMPF122
001407 f031      	BREQ __CMPF123
                 __CMPF121:
001408 9498      	CLZ
001409 9488      	CLC
00140a 9508      	RET
                 __CMPF122:
00140b 9498      	CLZ
00140c 9408      	SEC
00140d 9508      	RET
                 __CMPF123:
00140e 9418      	SEZ
00140f 9488      	CLC
001410 9508      	RET
                 __CMPF120:
001411 2377      	TST  R23
001412 f7c2      	BRPL __CMPF122
001413 1797      	CP   R25,R23
001414 f398      	BRLO __CMPF121
001415 f7a9      	BRNE __CMPF122
001416 17ea      	CP   R30,R26
001417 07fb      	CPC  R31,R27
001418 0768      	CPC  R22,R24
001419 f388      	BRLO __CMPF122
00141a f399      	BREQ __CMPF123
00141b cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00141c 2400      	CLR  R0
00141d 0daf      	ADD  R26,R15
00141e 1db0      	ADC  R27,R0
00141f 9508      	RET
                 
                 __ANEGW1:
001420 95f1      	NEG  R31
001421 95e1      	NEG  R30
001422 40f0      	SBCI R31,0
001423 9508      	RET
                 
                 __ANEGD1:
001424 95f0      	COM  R31
001425 9560      	COM  R22
001426 9570      	COM  R23
001427 95e1      	NEG  R30
001428 4fff      	SBCI R31,-1
001429 4f6f      	SBCI R22,-1
00142a 4f7f      	SBCI R23,-1
00142b 9508      	RET
                 
                 __LSLB12:
00142c 23ee      	TST  R30
00142d 2e0e      	MOV  R0,R30
00142e 2fea      	MOV  R30,R26
00142f f019      	BREQ __LSLB12R
                 __LSLB12L:
001430 0fee      	LSL  R30
001431 940a      	DEC  R0
001432 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
001433 9508      	RET
                 
                 __LSRB12:
001434 23ee      	TST  R30
001435 2e0e      	MOV  R0,R30
001436 2fea      	MOV  R30,R26
001437 f019      	BREQ __LSRB12R
                 __LSRB12L:
001438 95e6      	LSR  R30
001439 940a      	DEC  R0
00143a f7e9      	BRNE __LSRB12L
                 __LSRB12R:
00143b 9508      	RET
                 
                 __LSLW2:
00143c 0fee      	LSL  R30
00143d 1fff      	ROL  R31
00143e 0fee      	LSL  R30
00143f 1fff      	ROL  R31
001440 9508      	RET
                 
                 __ASRW2:
001441 95f5      	ASR  R31
001442 95e7      	ROR  R30
001443 95f5      	ASR  R31
001444 95e7      	ROR  R30
001445 9508      	RET
                 
                 __CWD1:
001446 2f6f      	MOV  R22,R31
001447 0f66      	ADD  R22,R22
001448 0b66      	SBC  R22,R22
001449 2f76      	MOV  R23,R22
00144a 9508      	RET
                 
                 __CWD2:
00144b 2f8b      	MOV  R24,R27
00144c 0f88      	ADD  R24,R24
00144d 0b88      	SBC  R24,R24
00144e 2f98      	MOV  R25,R24
00144f 9508      	RET
                 
                 __MULW12U:
001450 9ffa      	MUL  R31,R26
001451 2df0      	MOV  R31,R0
001452 9feb      	MUL  R30,R27
001453 0df0      	ADD  R31,R0
001454 9fea      	MUL  R30,R26
001455 2de0      	MOV  R30,R0
001456 0df1      	ADD  R31,R1
001457 9508      	RET
                 
                 __MULD12U:
001458 9f7a      	MUL  R23,R26
001459 2d70      	MOV  R23,R0
00145a 9f6b      	MUL  R22,R27
00145b 0d70      	ADD  R23,R0
00145c 9ff8      	MUL  R31,R24
00145d 0d70      	ADD  R23,R0
00145e 9fe9      	MUL  R30,R25
00145f 0d70      	ADD  R23,R0
001460 9f6a      	MUL  R22,R26
001461 2d60      	MOV  R22,R0
001462 0d71      	ADD  R23,R1
001463 9ffb      	MUL  R31,R27
001464 0d60      	ADD  R22,R0
001465 1d71      	ADC  R23,R1
001466 9fe8      	MUL  R30,R24
001467 0d60      	ADD  R22,R0
001468 1d71      	ADC  R23,R1
001469 2788      	CLR  R24
00146a 9ffa      	MUL  R31,R26
00146b 2df0      	MOV  R31,R0
00146c 0d61      	ADD  R22,R1
00146d 1f78      	ADC  R23,R24
00146e 9feb      	MUL  R30,R27
00146f 0df0      	ADD  R31,R0
001470 1d61      	ADC  R22,R1
001471 1f78      	ADC  R23,R24
001472 9fea      	MUL  R30,R26
001473 2de0      	MOV  R30,R0
001474 0df1      	ADD  R31,R1
001475 1f68      	ADC  R22,R24
001476 1f78      	ADC  R23,R24
001477 9508      	RET
                 
                 __MULW12:
001478 d00e      	RCALL __CHKSIGNW
001479 dfd6      	RCALL __MULW12U
00147a f40e      	BRTC __MULW121
00147b dfa4      	RCALL __ANEGW1
                 __MULW121:
00147c 9508      	RET
                 
                 __MANDW12:
00147d 94e8      	CLT
00147e fff7      	SBRS R31,7
00147f c002      	RJMP __MANDW121
001480 df9f      	RCALL __ANEGW1
001481 9468      	SET
                 __MANDW121:
001482 23ea      	AND  R30,R26
001483 23fb      	AND  R31,R27
001484 f40e      	BRTC __MANDW122
001485 df9a      	RCALL __ANEGW1
                 __MANDW122:
001486 9508      	RET
                 
                 __CHKSIGNW:
001487 94e8      	CLT
001488 fff7      	SBRS R31,7
001489 c002      	RJMP __CHKSW1
00148a df95      	RCALL __ANEGW1
00148b 9468      	SET
                 __CHKSW1:
00148c ffb7      	SBRS R27,7
00148d c006      	RJMP __CHKSW2
00148e 95a0      	COM  R26
00148f 95b0      	COM  R27
001490 9611      	ADIW R26,1
001491 f800      	BLD  R0,0
001492 9403      	INC  R0
001493 fa00      	BST  R0,0
                 __CHKSW2:
001494 9508      	RET
                 
                 __GETW1P:
001495 91ed      	LD   R30,X+
001496 91fc      	LD   R31,X
001497 9711      	SBIW R26,1
001498 9508      	RET
                 
                 __GETW1PF:
001499 9005      	LPM  R0,Z+
00149a 91f4      	LPM  R31,Z
00149b 2de0      	MOV  R30,R0
00149c 9508      	RET
                 
                 __GETD1S0:
00149d 81e8      	LD   R30,Y
00149e 81f9      	LDD  R31,Y+1
00149f 816a      	LDD  R22,Y+2
0014a0 817b      	LDD  R23,Y+3
0014a1 9508      	RET
                 
                 __GETD2S0:
0014a2 81a8      	LD   R26,Y
0014a3 81b9      	LDD  R27,Y+1
0014a4 818a      	LDD  R24,Y+2
0014a5 819b      	LDD  R25,Y+3
0014a6 9508      	RET
                 
                 __PUTD1S0:
0014a7 83e8      	ST   Y,R30
0014a8 83f9      	STD  Y+1,R31
0014a9 836a      	STD  Y+2,R22
0014aa 837b      	STD  Y+3,R23
0014ab 9508      	RET
                 
                 __PUTPARD1:
0014ac 937a      	ST   -Y,R23
0014ad 936a      	ST   -Y,R22
0014ae 93fa      	ST   -Y,R31
0014af 93ea      	ST   -Y,R30
0014b0 9508      	RET
                 
                 __PUTPARD2:
0014b1 939a      	ST   -Y,R25
0014b2 938a      	ST   -Y,R24
0014b3 93ba      	ST   -Y,R27
0014b4 93aa      	ST   -Y,R26
0014b5 9508      	RET
                 
                 __CDF2U:
0014b6 9468      	SET
0014b7 c001      	RJMP __CDF2U0
                 __CDF2:
0014b8 94e8      	CLT
                 __CDF2U0:
0014b9 d001      	RCALL __SWAPD12
0014ba de25      	RCALL __CDF1U0
                 
                 __SWAPD12:
0014bb 2e18      	MOV  R1,R24
0014bc 2f86      	MOV  R24,R22
0014bd 2d61      	MOV  R22,R1
0014be 2e19      	MOV  R1,R25
0014bf 2f97      	MOV  R25,R23
0014c0 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0014c1 2e1b      	MOV  R1,R27
0014c2 2fbf      	MOV  R27,R31
0014c3 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0014c4 2e1a      	MOV  R1,R26
0014c5 2fae      	MOV  R26,R30
0014c6 2de1      	MOV  R30,R1
0014c7 9508      	RET
                 
                 __EEPROMRDB:
0014c8 99e1      	SBIC EECR,EEWE
0014c9 cffe      	RJMP __EEPROMRDB
0014ca 93ff      	PUSH R31
0014cb b7ff      	IN   R31,SREG
0014cc 94f8      	CLI
0014cd bbae      	OUT  EEARL,R26
0014ce bbbf      	OUT  EEARH,R27
0014cf 9ae0      	SBI  EECR,EERE
0014d0 b3ed      	IN   R30,EEDR
0014d1 bfff      	OUT  SREG,R31
0014d2 91ff      	POP  R31
0014d3 9508      	RET
                 
                 __EEPROMWRB:
0014d4 9be1      	SBIS EECR,EEWE
0014d5 c002      	RJMP __EEPROMWRB1
0014d6 95a8      	WDR
0014d7 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
0014d8 b79f      	IN   R25,SREG
0014d9 94f8      	CLI
0014da bbae      	OUT  EEARL,R26
0014db bbbf      	OUT  EEARH,R27
0014dc 9ae0      	SBI  EECR,EERE
0014dd b38d      	IN   R24,EEDR
0014de 17e8      	CP   R30,R24
0014df f019      	BREQ __EEPROMWRB0
0014e0 bbed      	OUT  EEDR,R30
0014e1 9ae2      	SBI  EECR,EEMWE
0014e2 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0014e3 bf9f      	OUT  SREG,R25
0014e4 9508      	RET
                 
                 __CPW02:
0014e5 2400      	CLR  R0
0014e6 160a      	CP   R0,R26
0014e7 060b      	CPC  R0,R27
0014e8 9508      	RET
                 
                 __SAVELOCR6:
0014e9 935a      	ST   -Y,R21
                 __SAVELOCR5:
0014ea 934a      	ST   -Y,R20
                 __SAVELOCR4:
0014eb 933a      	ST   -Y,R19
                 __SAVELOCR3:
0014ec 932a      	ST   -Y,R18
                 __SAVELOCR2:
0014ed 931a      	ST   -Y,R17
0014ee 930a      	ST   -Y,R16
0014ef 9508      	RET
                 
                 __LOADLOCR6:
0014f0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0014f1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0014f2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0014f3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0014f4 8119      	LDD  R17,Y+1
0014f5 8108      	LD   R16,Y
0014f6 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  68 r1 :  45 r2 :   0 r3 :   0 r4 :   2 r5 :   1 r6 :   6 r7 :   3 
r8 :   6 r9 :   3 r10:   6 r11:   3 r12:   8 r13:   5 r14:   0 r15:   6 
r16: 121 r17: 154 r18:  93 r19:  70 r20:  66 r21: 120 r22: 104 r23:  90 
r24:  78 r25:  62 r26: 556 r27: 222 r28:  39 r29:   1 r30:1090 r31: 323 
x  :  23 y  : 914 z  :  29 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  42 add   :  48 
adiw  :  54 and   :  17 andi  :  30 asr   :   2 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   7 brcs  :   1 break :   0 breq  :  67 
brge  :  16 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  36 
brlt  :  16 brmi  :  14 brne  : 126 brpl  :  13 brsh  :  32 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 329 
cbi   :   8 cbr   :   1 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   :  82 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :  18 
cp    :  54 cpc   :  46 cpi   : 157 cpse  :   0 dec   :  11 des   :   0 
eor   :   8 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 
in    :   6 inc   :   9 jmp   :  44 ld    :  56 ldd   : 476 ldi   : 392 
lds   :  51 lpm   :  36 lsl   :  20 lsr   :  21 mov   : 183 movw  :  84 
mul   :  23 muls  :   0 mulsu :   0 neg   :   4 nop   :   2 or    :   6 
ori   :   8 out   :  41 pop   :  34 push  :  34 rcall : 115 ret   : 134 
reti  :   1 rjmp  : 230 rol   :  30 ror   :  17 sbc   :  22 sbci  :  25 
sbi   :  22 sbic  :   1 sbis  :   1 sbiw  :  36 sbr   :   2 sbrc  :   3 
sbrs  :  16 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 279 std   : 130 sts   :  31 sub   :  29 subi  :  79 swap  :   1 
tst   :  32 wdr   :   2 
Instructions used: 85 out of 116 (73.3%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0029ee   9008   1726  10734   16384  65.5%
[.dseg] 0x000060 0x0001a2      0     66     66    1024   6.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 13 warnings
