;#include "headers.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;void init_main_program()
; 0001 0004 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0005     init_ports_config();
;PCODE: $0000000F VOL: 0
; 0001 0006     init_interrupts_config();
;PCODE: $00000010 VOL: 0
; 0001 0007     init_timers_config();
;PCODE: $00000011 VOL: 0
; 0001 0008     init_lcd_config();
;PCODE: $00000012 VOL: 0
; 0001 0009 }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;
;void init_ports_config()
; 0001 000C {
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 000D     // Input/Output Ports initialization
; 0001 000E     // Port A initialization
; 0001 000F     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 0010     DDRA = (0 << DDA7) | (0 << DDA6) | (0 << DDA5) | (0 << DDA4) | (0 << DDA3) | (0 << DDA2) | (0 << DDA1) | (0 << DDA0) ...
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 0011     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 0012     PORTA = (0 << PORTA7) | (0 << PORTA6) | (0 << PORTA5) | (0 << PORTA4) | (0 << PORTA3) | (0 << PORTA2) | (0 << PORTA1 ...
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 0013 
; 0001 0014     // Port B initialization
; 0001 0015     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 0016     DDRB = (0 << DDB7) | (0 << DDB6) | (0 << DDB5) | (0 << DDB4) | (0 << DDB3) | (0 << DDB2) | (0 << DDB1) | (0 << DDB0) ...
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 0017     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 0018     PORTB = (0 << PORTB7) | (0 << PORTB6) | (0 << PORTB5) | (0 << PORTB4) | (0 << PORTB3) | (0 << PORTB2) | (0 << PORTB1 ...
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 0019 
; 0001 001A     // Port C initialization
; 0001 001B     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 001C     DDRC = (0 << DDC7) | (0 << DDC6) | (0 << DDC5) | (0 << DDC4) | (0 << DDC3) | (0 << DDC2) | (0 << DDC1) | (0 << DDC0) ...
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 001D     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 001E     PORTC = (0 << PORTC7) | (0 << PORTC6) | (0 << PORTC5) | (0 << PORTC4) | (0 << PORTC3) | (0 << PORTC2) | (0 << PORTC1 ...
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 001F 
; 0001 0020     // Port D initialization
; 0001 0021     // Function: Bit7=In Bit6=In Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 0022     DDRD = (0 << DDD7) | (0 << DDD6) | (1 << DDD5) | (1 << DDD4) | (0 << DDD3) | (0 << DDD2) | (0 << DDD1) | (0 << DDD0) ...
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 0023     // State: Bit7=T Bit6=T Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 0024     PORTD = (0 << PORTD7) | (0 << PORTD6) | (0 << PORTD5) | (0 << PORTD4) | (0 << PORTD3) | (0 << PORTD2) | (0 << PORTD1 ...
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0025 }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;
;void init_interrupts_config()
; 0001 0028 {
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 0029 
; 0001 002A     // External Interrupt(s) initialization
; 0001 002B     // INT0: On
; 0001 002C     // INT0 Mode: Falling Edge
; 0001 002D     // INT1: On
; 0001 002E     // INT1 Mode: Falling Edge
; 0001 002F     // INT2: On
; 0001 0030     // INT2 Mode: Falling Edge
; 0001 0031     GICR |= (1 << INT1) | (1 << INT0) | (1 << INT2);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0001 0032     MCUCR = (1 << ISC11) | (0 << ISC10) | (1 << ISC01) | (0 << ISC00);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0001 0033     MCUCSR = (0 << ISC2);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0001 0034     GIFR = (1 << INTF1) | (1 << INTF0) | (1 << INTF2);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0001 0035 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;
;void init_timers_config()
; 0001 0038 {
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0001 0039     // Timer/Counter 0 initialization
; 0001 003A     // Clock source: System Clock
; 0001 003B     // Clock value: 125.000 kHz
; 0001 003C     // Mode: Normal top=0xFF
; 0001 003D     // OC0 output: Disconnected
; 0001 003E     // Timer Period: 1 ms
; 0001 003F     TCCR0 = (0 << WGM00) | (0 << COM01) | (0 << COM00) | (0 << WGM01) | (0 << CS02) | (1 << CS01) | (1 << CS00);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0001 0040     TCNT0 = 0x83;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0001 0041     OCR0 = 0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0001 0042 
; 0001 0043     // Timer/Counter 1 initialization
; 0001 0044     // Clock source: System Clock
; 0001 0045     // Clock value: 8000.000 kHz
; 0001 0046     // Mode: CTC top=OCR1A
; 0001 0047     // OC1A output: Toggle on compare match
; 0001 0048     // OC1B output: Toggle on compare match
; 0001 0049     // Noise Canceler: On
; 0001 004A     // Input Capture on Rising Edge
; 0001 004B     // Timer Period: 1.25 ms
; 0001 004C     // Output Pulse(s):
; 0001 004D     // OC1A Period: 2.5 ms Width: 1.25 ms
; 0001 004E     // OC1B Period: 2.5 ms Width: 1.25 ms
; 0001 004F     // Timer1 Overflow Interrupt: Off
; 0001 0050     // Input Capture Interrupt: Off
; 0001 0051     // Compare A Match Interrupt: On
; 0001 0052     // Compare B Match Interrupt: On
; 0001 0053     TCCR1A = (0 << COM1A1) | (1 << COM1A0) | (0 << COM1B1) | (1 << COM1B0) | (0 << WGM11) | (0 << WGM10);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0001 0054     TCCR1B = (1 << ICNC1) | (1 << ICES1) | (0 << WGM13) | (1 << WGM12) | (0 << CS12) | (0 << CS11) | (1 << CS10);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0001 0055     TCNT1H = 0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0001 0056     TCNT1L = 0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0001 0057     ICR1H = 0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0001 0058     ICR1L = 0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0001 0059     OCR1AH = 0x27;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0001 005A     OCR1AL = 0x0F;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0001 005B     OCR1BH = 0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0001 005C     OCR1BL = 0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0001 005D 
; 0001 005E 
; 0001 005F     // Timer/Counter 2 initialization
; 0001 0060     // Clock source: System Clock
; 0001 0061     // Clock value: Timer2 Stopped
; 0001 0062     // Mode: Normal top=0xFF
; 0001 0063     // OC2 output: Disconnected
; 0001 0064     ASSR = 0 << AS2;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0001 0065     TCCR2 = (0 << PWM2) | (0 << COM21) | (0 << COM20) | (0 << CTC2) | (0 << CS22) | (0 << CS21) | (0 << CS20);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0001 0066     TCNT2 = 0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0001 0067     OCR2 = 0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0001 0068 
; 0001 0069     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0001 006A     TIMSK = (0 << OCIE2) | (1 << TOIE2) | (0 << TICIE1) | (1 << OCIE1A) | (1 << OCIE1B) | (0 << TOIE1) | (0 << OCIE0) |  ...
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0001 006B }
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;
;void init_lcd_config()
; 0001 006E {
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0001 006F     // Alphanumeric LCD initialization
; 0001 0070     // Connections are specified in the
; 0001 0071     // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0001 0072     // RS - PORTC Bit 0
; 0001 0073     // RD - PORTC Bit 1
; 0001 0074     // EN - PORTC Bit 2
; 0001 0075     // D4 - PORTC Bit 4
; 0001 0076     // D5 - PORTC Bit 5
; 0001 0077     // D6 - PORTC Bit 6
; 0001 0078     // D7 - PORTC Bit 7
; 0001 0079     // Characters/line: 16
; 0001 007A     lcd_init(16);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0001 007B     lcd_gotoxy(0, 0);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0001 007C     lcd_puts("Session4\n");
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0001 007D }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0

	.DSEG
_0x20003:
	.BYTE 0xA
